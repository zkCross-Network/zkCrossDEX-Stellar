{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `used_linker`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"contracts/lock_release/src/lib.rs","byte_start":1363,"byte_end":1378,"line_start":50,"line_end":50,"column_start":1,"column_end":16,"is_primary":true,"text":[{"text":"#[contractimpl]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"contracts/lock_release/src/lib.rs","byte_start":1363,"byte_end":1378,"line_start":50,"line_end":50,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"#[contractimpl]","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[soroban_sdk::reexports_for_macros::ctor::ctor]","def_site_span":{"file_name":"/Users/rohansingh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ctor-0.2.8/src/lib.rs","byte_start":5216,"byte_end":5290,"line_start":148,"line_end":148,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"pub fn ctor(_attribute: TokenStream, function: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"no expected values for `feature`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a attribute macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `soroban_sdk::reexports_for_macros::ctor::ctor` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the attribute macro `soroban_sdk::reexports_for_macros::ctor::ctor` may come from an old version of the `ctor` crate, try updating your dependency with `cargo update -p ctor`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unexpected_cfgs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `used_linker`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/lock_release/src/lib.rs:50:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[contractimpl]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: no expected values for `feature`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: using a cfg inside a attribute macro will use the cfgs from the destination crate and not the ones from the defining crate\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: try referring to `soroban_sdk::reexports_for_macros::ctor::ctor` crate for guidance on how handle this unexpected cfg\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the attribute macro `soroban_sdk::reexports_for_macros::ctor::ctor` may come from an old version of the `ctor` crate, try updating your dependency with `cargo update -p ctor`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unexpected_cfgs)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the attribute macro `soroban_sdk::reexports_for_macros::ctor::ctor` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 1 warning emitted\u001b[0m\n\n"}
