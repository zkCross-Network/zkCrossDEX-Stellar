{
	"id": "77e868034aefb11b60319c1bc05e4b02",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Swapper.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport {OwnableUpgradeable} from \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport {PausableUpgradeable} from \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\";\nimport {ReentrancyGuardUpgradeable} from \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\";\nimport {UUPSUpgradeable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\n\ncontract Swapper is\n    OwnableUpgradeable,\n    PausableUpgradeable,\n    ReentrancyGuardUpgradeable,\n    UUPSUpgradeable\n{\n    using SafeERC20 for IERC20;\n\n    struct SwapDescription {\n        address srcToken;\n        address dstToken;\n        uint256 amount;\n        bytes data;\n    }\n\n    address public constant NATIVE_TOKEN =\n        0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\n    address public newExchange ;\n    address public  swapAdmin;\n    uint256 public swapFeePercentage; \n\n    event Swapped(\n        address indexed user,\n        address indexed inputToken,\n        address indexed outputToken,\n        uint256 inputAmount,\n        uint256 outputAmount,\n        uint256 fee\n    );\n\n    event AdminAdded(address indexed admin);\n    event AdminRemoved(address indexed admin);\n    event SwapFeeUpdated(uint256 newFeePercentage);\n\n    modifier onlyAdmin() {\n        require( msg.sender == swapAdmin , \"Caller is not an admin\");\n        _;\n    }\n\n    function initialize(address _swapAdmin)\n        external\n        initializer\n    {\n        __Ownable_init(msg.sender);\n        __Pausable_init();\n        __ReentrancyGuard_init();  \n        __UUPSUpgradeable_init();\n        swapFeePercentage = 50; // Default fee is 0.5%\n        swapAdmin = _swapAdmin;\n    }\n\n    function _authorizeUpgrade(address newImplementation)\n        internal\n        override\n        onlyOwner\n    {}\n\n    receive() external payable {}\n\n    function swap(bytes calldata _data, address _swapper)\n        external\n        payable\n        whenNotPaused\n        nonReentrant\n    {\n        SwapDescription memory swapDesc = _decode(_data);\n        require(swapDesc.amount != 0, \"amount == 0\");\n        require(\n            swapDesc.srcToken != address(0) && swapDesc.dstToken != address(0),\n            \"invalid tokens\"\n        );\n        require(\n            swapDesc.srcToken != swapDesc.dstToken,\n            \"src token == dst token\"\n        );\n        if (msg.sender != address(this)) {\n            require(msg.sender == _swapper, \"caller != swapper\");\n        }\n        if (swapDesc.srcToken == NATIVE_TOKEN) {\n            require(msg.value == swapDesc.amount, \"msg.value != amount\");\n        } else {\n            require(msg.value == 0, \"msg.value != 0\");\n            require(\n                swapDesc.amount <=\n                    IERC20(swapDesc.srcToken).balanceOf(_swapper),\n                \"insufficient balance\"\n            );\n            _transferFrom(swapDesc.srcToken, _swapper, swapDesc.amount);\n            _approve(swapDesc.srcToken, newExchange, swapDesc.amount);\n        }\n\n        uint256 swapOutput = _swap(swapDesc);\n        uint256 fee = (swapOutput * swapFeePercentage) / 10000;\n\n        if (swapDesc.dstToken == NATIVE_TOKEN) {\n            payable( swapAdmin).transfer(fee);\n            swapOutput -= fee;\n            payable(_swapper).transfer(swapOutput);\n        } else {\n            _transfer(swapDesc.dstToken,  swapAdmin, fee);\n            swapOutput -= fee;\n            _transfer(swapDesc.dstToken, _swapper, swapOutput);\n        }\n\n        emit Swapped(\n            _swapper,\n            swapDesc.srcToken,\n            swapDesc.dstToken,\n            swapDesc.amount,\n            swapOutput,\n            fee\n        );\n    }\n\n    function updateSwapFee(uint256 _newFeePercentage) external onlyOwner {\n        // require(\n        //     _newFeePercentage <= 1000,\n        //     \"Fee percentage cannot exceed 10%\" //  limit\n        // );\n        swapFeePercentage = _newFeePercentage;\n        emit SwapFeeUpdated(_newFeePercentage);\n    }\n\n    function getBalance(address _token) public view returns (uint256) {\n        if (_token == NATIVE_TOKEN) {\n            return address(this).balance;\n        }\n        return IERC20(_token).balanceOf(address(this));\n    }\n\n    function addAdmin(address _admin) external onlyOwner {\n        require(_admin != address(0), \"Invalid admin address\");\n        swapAdmin = _admin;\n        emit AdminAdded(_admin);\n    }\n\n    function setNewExchange(address _newExchange) external onlyOwner {\n        require(_newExchange != address(0), \"zero address params\");\n        newExchange = _newExchange;\n    }\n\n\n    function _decode(bytes calldata _data)\n        private\n        pure\n        returns (SwapDescription memory)\n    {\n        (address a, address b, uint256 c, bytes memory d) = abi.decode(\n            _data,\n            (address, address, uint256, bytes)\n        );\n        return SwapDescription(a, b, c, d);\n    }\n\n    function _swap(SwapDescription memory _swapDesc) private returns (uint256) {\n        uint256 balanceBeforeSwap = getBalance(_swapDesc.dstToken);\n        (bool success, ) = newExchange.call{value: msg.value}(_swapDesc.data);\n        require(success, \"swap failed\");\n        uint256 balanceAfterSwap = getBalance(_swapDesc.dstToken);\n        uint256 swapOutput = balanceAfterSwap - balanceBeforeSwap;\n        assert(swapOutput != 0);\n        return swapOutput;\n    }\n\n    function _approve(\n        address _token,\n        address _spender,\n        uint256 _amount\n    ) private {\n        uint256 allowance = IERC20(_token).allowance(address(this), _spender);\n        if (allowance < _amount) {\n            \n            IERC20(_token).approve(_spender, _amount);\n        }\n    }\n\n    function _transfer(\n        address _token,\n        address _to,\n        uint256 _amount\n    ) private {\n        IERC20(_token).safeTransfer(_to, _amount);\n    }\n\n    function _transferFrom(\n        address _token,\n        address _from,\n        uint256 _amount\n    ) private {\n        IERC20(_token).safeTransferFrom(_from, address(this), _amount);\n    }\n\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\n    struct ReentrancyGuardStorage {\n        uint256 _status;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ReentrancyGuard\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\n\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\n        assembly {\n            $.slot := ReentrancyGuardStorageLocation\n        }\n    }\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if ($._status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        $._status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        return $._status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.21;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "istanbul"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol": {
				"ReentrancyGuardUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ab10ee1fc145c922480b3a799123ffb05dcb2405f892e996e2ae28395bf5607064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab10ee1fc145c922480b3a799123ffb05dcb2405f892e996e2ae28395bf5607064736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB LT 0xEE 0x1F 0xC1 GASLIMIT 0xC9 0x22 BASEFEE SIGNEXTEND GASPRICE PUSH26 0x9123FFB05DCB2405F892E996E2AE28395BF5607064736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "496:5741:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;496:5741:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab10ee1fc145c922480b3a799123ffb05dcb2405f892e996e2ae28395bf5607064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB LT 0xEE 0x1F 0xC1 GASLIMIT 0xC9 0x22 BASEFEE SIGNEXTEND GASPRICE PUSH26 0x9123FFB05DCB2405F892E996E2AE28395BF5607064736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "496:5741:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab10ee1fc145c922480b3a799123ffb05dcb2405f892e996e2ae28395bf5607064736f6c634300081a0033",
									".code": [
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Swapper.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ef128ea327cc0434d1da04f04a0787c80268ef2badc4d9660aafcebaf003723c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ef128ea327cc0434d1da04f04a0787c80268ef2badc4d9660aafcebaf003723c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF SLT DUP15 LOG3 0x27 0xCC DIV CALLVALUE 0xD1 0xDA DIV CREATE BLOBBASEFEE SMOD DUP8 0xC8 MUL PUSH9 0xEF2BADC4D9660AAFCE 0xBA CREATE SUB PUSH19 0x3C64736F6C634300081A003300000000000000 ",
							"sourceMap": "750:8692:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;750:8692:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ef128ea327cc0434d1da04f04a0787c80268ef2badc4d9660aafcebaf003723c64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF SLT DUP15 LOG3 0x27 0xCC DIV CALLVALUE 0xD1 0xDA DIV CREATE BLOBBASEFEE SMOD DUP8 0xC8 MUL PUSH9 0xEF2BADC4D9660AAFCE 0xBA CREATE SUB PUSH19 0x3C64736F6C634300081A003300000000000000 ",
							"sourceMap": "750:8692:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ef128ea327cc0434d1da04f04a0787c80268ef2badc4d9660aafcebaf003723c64736f6c634300081a0033",
									".code": [
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Swapper.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122067ae665f3ab3bf85d6f9ed43e8fd17ef9ffe20504915ceb83572bb38afb2554864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122067ae665f3ab3bf85d6f9ed43e8fd17ef9ffe20504915ceb83572bb38afb2554864736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0xAE665F3AB3BF85D6 0xF9 0xED NUMBER 0xE8 REVERT OR 0xEF SWAP16 INVALID KECCAK256 POP BLOBHASH ISZERO 0xCE 0xB8 CALLDATALOAD PUSH19 0xBB38AFB2554864736F6C634300081A00330000 ",
							"sourceMap": "233:5799:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;233:5799:15;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122067ae665f3ab3bf85d6f9ed43e8fd17ef9ffe20504915ceb83572bb38afb2554864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0xAE665F3AB3BF85D6 0xF9 0xED NUMBER 0xE8 REVERT OR 0xEF SWAP16 INVALID KECCAK256 POP BLOBHASH ISZERO 0xCE 0xB8 CALLDATALOAD PUSH19 0xBB38AFB2554864736F6C634300081A00330000 ",
							"sourceMap": "233:5799:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122067ae665f3ab3bf85d6f9ed43e8fd17ef9ffe20504915ceb83572bb38afb2554864736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Swapper.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a7268ed3b713f0110ff22a167eb408e42fdb38393e89f63c7b33f73daa41be8464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a7268ed3b713f0110ff22a167eb408e42fdb38393e89f63c7b33f73daa41be8464736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 0x26 DUP15 0xD3 0xB7 SGT CREATE GT 0xF CALLCODE 0x2A AND PUSH31 0xB408E42FDB38393E89F63C7B33F73DAA41BE8464736F6C634300081A003300 ",
							"sourceMap": "411:484:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;411:484:16;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a7268ed3b713f0110ff22a167eb408e42fdb38393e89f63c7b33f73daa41be8464736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 0x26 DUP15 0xD3 0xB7 SGT CREATE GT 0xF CALLCODE 0x2A AND PUSH31 0xB408E42FDB38393E89F63C7B33F73DAA41BE8464736F6C634300081A003300 ",
							"sourceMap": "411:484:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a7268ed3b713f0110ff22a167eb408e42fdb38393e89f63c7b33f73daa41be8464736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Swapper.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b7d6a6e92dcb364cc1bbf9c70003be33b2a55d546f64d6c7f1a19e2077e5546664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b7d6a6e92dcb364cc1bbf9c70003be33b2a55d546f64d6c7f1a19e2077e5546664736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0xD6 0xA6 0xE9 0x2D 0xCB CALLDATASIZE 0x4C 0xC1 0xBB 0xF9 0xC7 STOP SUB 0xBE CALLER 0xB2 0xA5 TSTORE SLOAD PUSH16 0x64D6C7F1A19E2077E5546664736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1407:2774:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:17;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b7d6a6e92dcb364cc1bbf9c70003be33b2a55d546f64d6c7f1a19e2077e5546664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0xD6 0xA6 0xE9 0x2D 0xCB CALLDATASIZE 0x4C 0xC1 0xBB 0xF9 0xC7 STOP SUB 0xBE CALLER 0xB2 0xA5 TSTORE SLOAD PUSH16 0x64D6C7F1A19E2077E5546664736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1407:2774:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b7d6a6e92dcb364cc1bbf9c70003be33b2a55d546f64d6c7f1a19e2077e5546664736f6c634300081a0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Swapper.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Swapper.sol": {
				"Swapper": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "AdminAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "AdminRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newFeePercentage",
									"type": "uint256"
								}
							],
							"name": "SwapFeeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "inputToken",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "outputToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "inputAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "outputAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "Swapped",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "NATIVE_TOKEN",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								}
							],
							"name": "addAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_swapAdmin",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "newExchange",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newExchange",
									"type": "address"
								}
							],
							"name": "setNewExchange",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_swapper",
									"type": "address"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapFeePercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newFeePercentage",
									"type": "uint256"
								}
							],
							"name": "updateSwapFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Swapper.sol\":636:6389  contract Swapper is... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"contracts/Swapper.sol\":636:6389  contract Swapper is... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Swapper.sol\":636:6389  contract Swapper is... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xae0caeb3\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xae0caeb3\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xbf16f65a\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc4d66de8\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf8b2cb4f\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa4ac0d49\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x52d1902d\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x540907bb\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5dc0b769\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70480275\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x0380fd03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x31f7d964\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Swapper.sol\":1023:1049  address public newExchange */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      sload(0x00)\n      tag_28\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_28:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/Swapper.sol\":1023:1049  address public newExchange */\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Swapper.sol\":928:1017  address public constant NATIVE_TOKEN =... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_28\n        /* \"contracts/Swapper.sol\":975:1017  0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n        /* \"contracts/Swapper.sol\":928:1017  address public constant NATIVE_TOKEN =... */\n      dup2\n      jump\n        /* \"contracts/Swapper.sol\":6321:6386  function unpause() external onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_6:\n      tag_37\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n        /* \"#utility.yul\":1826:1851   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1814:1816   */\n      0x20\n        /* \"#utility.yul\":1799:1817   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      tag_30\n        /* \"#utility.yul\":1680:1857   */\n      jump\n        /* \"contracts/Swapper.sol\":4609:4785  function setNewExchange(address _newExchange) external onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_37\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2821:2830  $._paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n      mload(0x40)\n        /* \"#utility.yul\":2279:2293   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2272:2294   */\n      iszero\n        /* \"#utility.yul\":2254:2295   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2242:2244   */\n      0x20\n        /* \"#utility.yul\":2227:2245   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n      tag_30\n        /* \"#utility.yul\":2114:2301   */\n      jump\n        /* \"contracts/Swapper.sol\":1056:1081  address public  swapAdmin */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      sload(0x01)\n      tag_28\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Swapper.sol\":4418:4603  function addAdmin(address _admin) external onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_37\n      tag_64\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_37\n      tag_68\n      jump\t// in\n        /* \"contracts/Swapper.sol\":6254:6315  function pause() external onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_37\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      jump(tag_28)\n        /* \"contracts/Swapper.sol\":1087:1119  uint256 public swapFeePercentage */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_44\n      sload(0x02)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xdc, 0x0352e302e3)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_82:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n        /* \"contracts/Swapper.sol\":2063:3874  function swap(bytes calldata _data, address _swapper)... */\n    tag_17:\n      tag_37\n      tag_87\n      calldatasize\n      0x04\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n        /* \"contracts/Swapper.sol\":3880:4187  function updateSwapFee(uint256 _newFeePercentage) external onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_37\n      tag_92\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n        /* \"contracts/Swapper.sol\":1596:1904  function initialize(address _swapAdmin)... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_37\n      tag_97\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_37\n      tag_101\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n        /* \"contracts/Swapper.sol\":4193:4412  function getBalance(address _token) public view returns (uint256) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_44\n      tag_105\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n        /* \"contracts/Swapper.sol\":6321:6386  function unpause() external onlyOwner {... */\n    tag_38:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_109\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/Swapper.sol\":6369:6379  _unpause() */\n      tag_112\n        /* \"contracts/Swapper.sol\":6369:6377  _unpause */\n      tag_113\n        /* \"contracts/Swapper.sol\":6369:6379  _unpause() */\n      jump\t// in\n    tag_112:\n        /* \"contracts/Swapper.sol\":6321:6386  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_42:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      tag_115\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2666  _checkProxy */\n      tag_116\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4294:4311  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4293  _authorizeUpgrade */\n      tag_119\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_120\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4344:4361  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4363:4367  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4343  _upgradeToAndCallUUPS */\n      tag_121\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3777:3784  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      tag_123\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2944  _checkNotDelegated */\n      tag_124\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      jump\t// in\n    tag_123:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Swapper.sol\":4609:4785  function setNewExchange(address _newExchange) external onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_127\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swapper.sol\":4692:4718  _newExchange != address(0) */\n      dup2\n      and\n        /* \"contracts/Swapper.sol\":4684:4742  require(_newExchange != address(0), \"zero address params\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4309:4311   */\n      0x20\n        /* \"contracts/Swapper.sol\":4684:4742  require(_newExchange != address(0), \"zero address params\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4291:4312   */\n      mstore\n        /* \"#utility.yul\":4348:4350   */\n      0x13\n        /* \"#utility.yul\":4328:4346   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4321:4351   */\n      mstore\n      shl(0x68, 0x7a65726f206164647265737320706172616d73)\n        /* \"#utility.yul\":4367:4385   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4360:4409   */\n      mstore\n        /* \"#utility.yul\":4426:4444   */\n      0x64\n      add\n        /* \"contracts/Swapper.sol\":4684:4742  require(_newExchange != address(0), \"zero address params\") */\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"contracts/Swapper.sol\":4752:4763  newExchange */\n      0x00\n        /* \"contracts/Swapper.sol\":4752:4778  newExchange = _newExchange */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Swapper.sol\":4609:4785  function setNewExchange(address _newExchange) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Swapper.sol\":4418:4603  function addAdmin(address _admin) external onlyOwner {... */\n    tag_65:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_136\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swapper.sol\":4489:4509  _admin != address(0) */\n      dup2\n      and\n        /* \"contracts/Swapper.sol\":4481:4535  require(_admin != address(0), \"Invalid admin address\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4657:4659   */\n      0x20\n        /* \"contracts/Swapper.sol\":4481:4535  require(_admin != address(0), \"Invalid admin address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4639:4660   */\n      mstore\n        /* \"#utility.yul\":4696:4698   */\n      0x15\n        /* \"#utility.yul\":4676:4694   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4669:4699   */\n      mstore\n      shl(0x58, 0x496e76616c69642061646d696e2061646472657373)\n        /* \"#utility.yul\":4715:4733   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4708:4759   */\n      mstore\n        /* \"#utility.yul\":4776:4794   */\n      0x64\n      add\n        /* \"contracts/Swapper.sol\":4481:4535  require(_admin != address(0), \"Invalid admin address\") */\n      tag_130\n        /* \"#utility.yul\":4455:4800   */\n      jump\n        /* \"contracts/Swapper.sol\":4481:4535  require(_admin != address(0), \"Invalid admin address\") */\n    tag_138:\n        /* \"contracts/Swapper.sol\":4545:4554  swapAdmin */\n      0x01\n        /* \"contracts/Swapper.sol\":4545:4563  swapAdmin = _admin */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Swapper.sol\":4578:4596  AdminAdded(_admin) */\n      mload(0x40)\n      0x44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e339\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/Swapper.sol\":4418:4603  function addAdmin(address _admin) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_68:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_142\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_112\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_145\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"contracts/Swapper.sol\":6254:6315  function pause() external onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_147\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_147:\n        /* \"contracts/Swapper.sol\":6300:6308  _pause() */\n      tag_112\n        /* \"contracts/Swapper.sol\":6300:6306  _pause */\n      tag_150\n        /* \"contracts/Swapper.sol\":6300:6308  _pause() */\n      jump\t// in\n        /* \"contracts/Swapper.sol\":2063:3874  function swap(bytes calldata _data, address _swapper)... */\n    tag_89:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_155\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_156\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3416  _nonReentrantBefore() */\n      tag_158\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3414  _nonReentrantBefore */\n      tag_159\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3416  _nonReentrantBefore() */\n      jump\t// in\n    tag_158:\n        /* \"contracts/Swapper.sol\":2207:2238  SwapDescription memory swapDesc */\n      0x00\n        /* \"contracts/Swapper.sol\":2241:2255  _decode(_data) */\n      tag_161\n        /* \"contracts/Swapper.sol\":2249:2254  _data */\n      dup5\n      dup5\n        /* \"contracts/Swapper.sol\":2241:2248  _decode */\n      tag_162\n        /* \"contracts/Swapper.sol\":2241:2255  _decode(_data) */\n      jump\t// in\n    tag_161:\n        /* \"contracts/Swapper.sol\":2207:2255  SwapDescription memory swapDesc = _decode(_data) */\n      swap1\n      pop\n        /* \"contracts/Swapper.sol\":2273:2281  swapDesc */\n      dup1\n        /* \"contracts/Swapper.sol\":2273:2288  swapDesc.amount */\n      0x40\n      add\n      mload\n        /* \"contracts/Swapper.sol\":2292:2293  0 */\n      0x00\n        /* \"contracts/Swapper.sol\":2273:2293  swapDesc.amount != 0 */\n      sub\n        /* \"contracts/Swapper.sol\":2265:2309  require(swapDesc.amount != 0, \"amount == 0\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5007:5009   */\n      0x20\n        /* \"contracts/Swapper.sol\":2265:2309  require(swapDesc.amount != 0, \"amount == 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4989:5010   */\n      mstore\n        /* \"#utility.yul\":5046:5048   */\n      0x0b\n        /* \"#utility.yul\":5026:5044   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5019:5049   */\n      mstore\n      shl(0xac, 0x0616d6f756e74203d3d203)\n        /* \"#utility.yul\":5065:5083   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5058:5099   */\n      mstore\n        /* \"#utility.yul\":5116:5134   */\n      0x64\n      add\n        /* \"contracts/Swapper.sol\":2265:2309  require(swapDesc.amount != 0, \"amount == 0\") */\n      tag_130\n        /* \"#utility.yul\":4805:5140   */\n      jump\n        /* \"contracts/Swapper.sol\":2265:2309  require(swapDesc.amount != 0, \"amount == 0\") */\n    tag_163:\n        /* \"contracts/Swapper.sol\":2340:2357  swapDesc.srcToken */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swapper.sol\":2340:2371  swapDesc.srcToken != address(0) */\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/Swapper.sol\":2340:2406  swapDesc.srcToken != address(0) && swapDesc.dstToken != address(0) */\n      tag_166\n      jumpi\n      pop\n        /* \"contracts/Swapper.sol\":2375:2392  swapDesc.dstToken */\n      0x20\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swapper.sol\":2375:2406  swapDesc.dstToken != address(0) */\n      and\n      iszero\n      iszero\n        /* \"contracts/Swapper.sol\":2340:2406  swapDesc.srcToken != address(0) && swapDesc.dstToken != address(0) */\n    tag_166:\n        /* \"contracts/Swapper.sol\":2319:2446  require(... */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5347:5349   */\n      0x20\n        /* \"contracts/Swapper.sol\":2319:2446  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5329:5350   */\n      mstore\n        /* \"#utility.yul\":5386:5388   */\n      0x0e\n        /* \"#utility.yul\":5366:5384   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5359:5389   */\n      mstore\n      shl(0x90, 0x696e76616c696420746f6b656e73)\n        /* \"#utility.yul\":5405:5423   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5398:5442   */\n      mstore\n        /* \"#utility.yul\":5459:5477   */\n      0x64\n      add\n        /* \"contracts/Swapper.sol\":2319:2446  require(... */\n      tag_130\n        /* \"#utility.yul\":5145:5483   */\n      jump\n        /* \"contracts/Swapper.sol\":2319:2446  require(... */\n    tag_167:\n        /* \"contracts/Swapper.sol\":2498:2506  swapDesc */\n      dup1\n        /* \"contracts/Swapper.sol\":2498:2515  swapDesc.dstToken */\n      0x20\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swapper.sol\":2477:2515  swapDesc.srcToken != swapDesc.dstToken */\n      and\n        /* \"contracts/Swapper.sol\":2477:2485  swapDesc */\n      dup2\n        /* \"contracts/Swapper.sol\":2477:2494  swapDesc.srcToken */\n      0x00\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swapper.sol\":2477:2515  swapDesc.srcToken != swapDesc.dstToken */\n      and\n      sub\n        /* \"contracts/Swapper.sol\":2456:2563  require(... */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5690:5692   */\n      0x20\n        /* \"contracts/Swapper.sol\":2456:2563  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5672:5693   */\n      mstore\n        /* \"#utility.yul\":5729:5731   */\n      0x16\n        /* \"#utility.yul\":5709:5727   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5702:5732   */\n      mstore\n      shl(0x51, 0x39b931903a37b5b2b7101e9e903239ba103a37b5b2b7)\n        /* \"#utility.yul\":5748:5766   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5741:5793   */\n      mstore\n        /* \"#utility.yul\":5810:5828   */\n      0x64\n      add\n        /* \"contracts/Swapper.sol\":2456:2563  require(... */\n      tag_130\n        /* \"#utility.yul\":5488:5834   */\n      jump\n        /* \"contracts/Swapper.sol\":2456:2563  require(... */\n    tag_170:\n        /* \"contracts/Swapper.sol\":2577:2587  msg.sender */\n      caller\n        /* \"contracts/Swapper.sol\":2599:2603  this */\n      address\n        /* \"contracts/Swapper.sol\":2577:2604  msg.sender != address(this) */\n      eq\n        /* \"contracts/Swapper.sol\":2573:2683  if (msg.sender != address(this)) {... */\n      tag_174\n      jumpi\n        /* \"contracts/Swapper.sol\":2628:2638  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swapper.sol\":2628:2650  msg.sender == _swapper */\n      dup4\n      and\n      eq\n        /* \"contracts/Swapper.sol\":2620:2672  require(msg.sender == _swapper, \"caller != swapper\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6041:6043   */\n      0x20\n        /* \"contracts/Swapper.sol\":2620:2672  require(msg.sender == _swapper, \"caller != swapper\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6023:6044   */\n      mstore\n        /* \"#utility.yul\":6080:6082   */\n      0x11\n        /* \"#utility.yul\":6060:6078   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6053:6083   */\n      mstore\n      shl(0x79, 0x31b0b63632b910109e9039bbb0b83832b9)\n        /* \"#utility.yul\":6099:6117   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6092:6139   */\n      mstore\n        /* \"#utility.yul\":6156:6174   */\n      0x64\n      add\n        /* \"contracts/Swapper.sol\":2620:2672  require(msg.sender == _swapper, \"caller != swapper\") */\n      tag_130\n        /* \"#utility.yul\":5839:6180   */\n      jump\n        /* \"contracts/Swapper.sol\":2620:2672  require(msg.sender == _swapper, \"caller != swapper\") */\n    tag_174:\n        /* \"contracts/Swapper.sol\":2696:2713  swapDesc.srcToken */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swapper.sol\":2696:2729  swapDesc.srcToken == NATIVE_TOKEN */\n      and\n      not(0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed)\n      add\n        /* \"contracts/Swapper.sol\":2692:3209  if (swapDesc.srcToken == NATIVE_TOKEN) {... */\n      tag_177\n      jumpi\n        /* \"contracts/Swapper.sol\":2766:2774  swapDesc */\n      dup1\n        /* \"contracts/Swapper.sol\":2766:2781  swapDesc.amount */\n      0x40\n      add\n      mload\n        /* \"contracts/Swapper.sol\":2753:2762  msg.value */\n      callvalue\n        /* \"contracts/Swapper.sol\":2753:2781  msg.value == swapDesc.amount */\n      eq\n        /* \"contracts/Swapper.sol\":2745:2805  require(msg.value == swapDesc.amount, \"msg.value != amount\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6387:6389   */\n      0x20\n        /* \"contracts/Swapper.sol\":2745:2805  require(msg.value == swapDesc.amount, \"msg.value != amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6369:6390   */\n      mstore\n        /* \"#utility.yul\":6426:6428   */\n      0x13\n        /* \"#utility.yul\":6406:6424   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6399:6429   */\n      mstore\n      shl(0x6a, 0x1b5cd9cb9d985b1d5948084f48185b5bdd5b9d)\n        /* \"#utility.yul\":6445:6463   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6438:6487   */\n      mstore\n        /* \"#utility.yul\":6504:6522   */\n      0x64\n      add\n        /* \"contracts/Swapper.sol\":2745:2805  require(msg.value == swapDesc.amount, \"msg.value != amount\") */\n      tag_130\n        /* \"#utility.yul\":6185:6528   */\n      jump\n        /* \"contracts/Swapper.sol\":2745:2805  require(msg.value == swapDesc.amount, \"msg.value != amount\") */\n    tag_178:\n        /* \"contracts/Swapper.sol\":2692:3209  if (swapDesc.srcToken == NATIVE_TOKEN) {... */\n      jump(tag_195)\n    tag_177:\n        /* \"contracts/Swapper.sol\":2844:2853  msg.value */\n      callvalue\n        /* \"contracts/Swapper.sol\":2844:2858  msg.value == 0 */\n      iszero\n        /* \"contracts/Swapper.sol\":2836:2877  require(msg.value == 0, \"msg.value != 0\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6735:6737   */\n      0x20\n        /* \"contracts/Swapper.sol\":2836:2877  require(msg.value == 0, \"msg.value != 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6717:6738   */\n      mstore\n        /* \"#utility.yul\":6774:6776   */\n      0x0e\n        /* \"#utility.yul\":6754:6772   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6747:6777   */\n      mstore\n      shl(0x94, 0x06d73672e76616c756520213d203)\n        /* \"#utility.yul\":6793:6811   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6786:6830   */\n      mstore\n        /* \"#utility.yul\":6847:6865   */\n      0x64\n      add\n        /* \"contracts/Swapper.sol\":2836:2877  require(msg.value == 0, \"msg.value != 0\") */\n      tag_130\n        /* \"#utility.yul\":6533:6871   */\n      jump\n        /* \"contracts/Swapper.sol\":2836:2877  require(msg.value == 0, \"msg.value != 0\") */\n    tag_182:\n        /* \"contracts/Swapper.sol\":2962:2979  swapDesc.srcToken */\n      dup1\n      mload\n        /* \"contracts/Swapper.sol\":2955:3000  IERC20(swapDesc.srcToken).balanceOf(_swapper) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      dup5\n      dup2\n      and\n        /* \"contracts/Swapper.sol\":2955:3000  IERC20(swapDesc.srcToken).balanceOf(_swapper) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"contracts/Swapper.sol\":2955:2990  IERC20(swapDesc.srcToken).balanceOf */\n      swap1\n      swap2\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"contracts/Swapper.sol\":2955:3000  IERC20(swapDesc.srcToken).balanceOf(_swapper) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_187\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_187:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_188\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n        /* \"contracts/Swapper.sol\":2916:2924  swapDesc */\n      dup2\n        /* \"contracts/Swapper.sol\":2916:2931  swapDesc.amount */\n      0x40\n      add\n      mload\n        /* \"contracts/Swapper.sol\":2916:3000  swapDesc.amount <=... */\n      gt\n      iszero\n        /* \"contracts/Swapper.sol\":2891:3054  require(... */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7267:7269   */\n      0x20\n        /* \"contracts/Swapper.sol\":2891:3054  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7249:7270   */\n      mstore\n        /* \"#utility.yul\":7306:7308   */\n      0x14\n        /* \"#utility.yul\":7286:7304   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7279:7309   */\n      mstore\n      shl(0x60, 0x696e73756666696369656e742062616c616e6365)\n        /* \"#utility.yul\":7325:7343   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7318:7368   */\n      mstore\n        /* \"#utility.yul\":7385:7403   */\n      0x64\n      add\n        /* \"contracts/Swapper.sol\":2891:3054  require(... */\n      tag_130\n        /* \"#utility.yul\":7065:7409   */\n      jump\n        /* \"contracts/Swapper.sol\":2891:3054  require(... */\n    tag_190:\n        /* \"contracts/Swapper.sol\":3068:3127  _transferFrom(swapDesc.srcToken, _swapper, swapDesc.amount) */\n      tag_193\n        /* \"contracts/Swapper.sol\":3082:3090  swapDesc */\n      dup2\n        /* \"contracts/Swapper.sol\":3082:3099  swapDesc.srcToken */\n      0x00\n      add\n      mload\n        /* \"contracts/Swapper.sol\":3101:3109  _swapper */\n      dup4\n        /* \"contracts/Swapper.sol\":3111:3119  swapDesc */\n      dup4\n        /* \"contracts/Swapper.sol\":3111:3126  swapDesc.amount */\n      0x40\n      add\n      mload\n        /* \"contracts/Swapper.sol\":3068:3081  _transferFrom */\n      tag_194\n        /* \"contracts/Swapper.sol\":3068:3127  _transferFrom(swapDesc.srcToken, _swapper, swapDesc.amount) */\n      jump\t// in\n    tag_193:\n        /* \"contracts/Swapper.sol\":3150:3167  swapDesc.srcToken */\n      dup1\n      mload\n      0x00\n        /* \"contracts/Swapper.sol\":3169:3180  newExchange */\n      sload\n        /* \"contracts/Swapper.sol\":3182:3197  swapDesc.amount */\n      0x40\n      dup4\n      add\n      mload\n        /* \"contracts/Swapper.sol\":3141:3198  _approve(swapDesc.srcToken, newExchange, swapDesc.amount) */\n      tag_195\n      swap3\n        /* \"contracts/Swapper.sol\":3150:3167  swapDesc.srcToken */\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swapper.sol\":3169:3180  newExchange */\n      and\n      swap1\n        /* \"contracts/Swapper.sol\":3141:3149  _approve */\n      tag_196\n        /* \"contracts/Swapper.sol\":3141:3198  _approve(swapDesc.srcToken, newExchange, swapDesc.amount) */\n      jump\t// in\n    tag_195:\n        /* \"contracts/Swapper.sol\":3219:3237  uint256 swapOutput */\n      0x00\n        /* \"contracts/Swapper.sol\":3240:3255  _swap(swapDesc) */\n      tag_197\n        /* \"contracts/Swapper.sol\":3246:3254  swapDesc */\n      dup3\n        /* \"contracts/Swapper.sol\":3240:3245  _swap */\n      tag_198\n        /* \"contracts/Swapper.sol\":3240:3255  _swap(swapDesc) */\n      jump\t// in\n    tag_197:\n        /* \"contracts/Swapper.sol\":3219:3255  uint256 swapOutput = _swap(swapDesc) */\n      swap1\n      pop\n        /* \"contracts/Swapper.sol\":3265:3276  uint256 fee */\n      0x00\n        /* \"contracts/Swapper.sol\":3314:3319  10000 */\n      0x2710\n        /* \"contracts/Swapper.sol\":3293:3310  swapFeePercentage */\n      sload(0x02)\n        /* \"contracts/Swapper.sol\":3280:3290  swapOutput */\n      dup4\n        /* \"contracts/Swapper.sol\":3280:3310  swapOutput * swapFeePercentage */\n      tag_199\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"contracts/Swapper.sol\":3279:3319  (swapOutput * swapFeePercentage) / 10000 */\n      tag_201\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"contracts/Swapper.sol\":3265:3319  uint256 fee = (swapOutput * swapFeePercentage) / 10000 */\n      swap1\n      pop\n        /* \"contracts/Swapper.sol\":975:1017  0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swapper.sol\":3334:3367  swapDesc.dstToken == NATIVE_TOKEN */\n      and\n        /* \"contracts/Swapper.sol\":3334:3342  swapDesc */\n      dup4\n        /* \"contracts/Swapper.sol\":3334:3351  swapDesc.dstToken */\n      0x20\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swapper.sol\":3334:3367  swapDesc.dstToken == NATIVE_TOKEN */\n      and\n      sub\n        /* \"contracts/Swapper.sol\":3330:3681  if (swapDesc.dstToken == NATIVE_TOKEN) {... */\n      tag_203\n      jumpi\n        /* \"contracts/Swapper.sol\":3392:3401  swapAdmin */\n      sload(0x01)\n        /* \"contracts/Swapper.sol\":3383:3416  payable( swapAdmin).transfer(fee) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swapper.sol\":3392:3401  swapAdmin */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Swapper.sol\":3383:3416  payable( swapAdmin).transfer(fee) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/Swapper.sol\":3412:3415  fee */\n      dup4\n      swap1\n        /* \"contracts/Swapper.sol\":3392:3401  swapAdmin */\n      0x00\n        /* \"contracts/Swapper.sol\":3383:3416  payable( swapAdmin).transfer(fee) */\n      dup2\n        /* \"contracts/Swapper.sol\":3392:3401  swapAdmin */\n      dup2\n        /* \"contracts/Swapper.sol\":3383:3416  payable( swapAdmin).transfer(fee) */\n      dup2\n        /* \"contracts/Swapper.sol\":3412:3415  fee */\n      dup6\n        /* \"contracts/Swapper.sol\":3392:3401  swapAdmin */\n      dup9\n        /* \"contracts/Swapper.sol\":3383:3416  payable( swapAdmin).transfer(fee) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_205:\n      pop\n        /* \"contracts/Swapper.sol\":3430:3447  swapOutput -= fee */\n      tag_206\n        /* \"contracts/Swapper.sol\":3444:3447  fee */\n      dup2\n        /* \"contracts/Swapper.sol\":3430:3447  swapOutput -= fee */\n      dup4\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"contracts/Swapper.sol\":3461:3499  payable(_swapper).transfer(swapOutput) */\n      mload(0x40)\n        /* \"contracts/Swapper.sol\":3430:3447  swapOutput -= fee */\n      swap1\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swapper.sol\":3461:3487  payable(_swapper).transfer */\n      dup6\n      and\n      swap1\n        /* \"contracts/Swapper.sol\":3461:3499  payable(_swapper).transfer(swapOutput) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/Swapper.sol\":3430:3447  swapOutput -= fee */\n      dup5\n      swap1\n        /* \"contracts/Swapper.sol\":3461:3499  payable(_swapper).transfer(swapOutput) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/Swapper.sol\":3430:3447  swapOutput -= fee */\n      dup6\n        /* \"contracts/Swapper.sol\":3461:3487  payable(_swapper).transfer */\n      dup9\n        /* \"contracts/Swapper.sol\":3461:3499  payable(_swapper).transfer(swapOutput) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_209\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_209:\n      pop\n        /* \"contracts/Swapper.sol\":3330:3681  if (swapDesc.dstToken == NATIVE_TOKEN) {... */\n      jump(tag_214)\n    tag_203:\n        /* \"contracts/Swapper.sol\":3540:3557  swapDesc.dstToken */\n      0x20\n      dup4\n      add\n      mload\n        /* \"contracts/Swapper.sol\":3560:3569  swapAdmin */\n      sload(0x01)\n        /* \"contracts/Swapper.sol\":3530:3575  _transfer(swapDesc.dstToken,  swapAdmin, fee) */\n      tag_211\n      swap2\n        /* \"contracts/Swapper.sol\":3540:3557  swapDesc.dstToken */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swapper.sol\":3560:3569  swapAdmin */\n      and\n        /* \"contracts/Swapper.sol\":3571:3574  fee */\n      dup4\n        /* \"contracts/Swapper.sol\":3530:3539  _transfer */\n      tag_212\n        /* \"contracts/Swapper.sol\":3530:3575  _transfer(swapDesc.dstToken,  swapAdmin, fee) */\n      jump\t// in\n    tag_211:\n        /* \"contracts/Swapper.sol\":3589:3606  swapOutput -= fee */\n      tag_213\n        /* \"contracts/Swapper.sol\":3603:3606  fee */\n      dup2\n        /* \"contracts/Swapper.sol\":3589:3606  swapOutput -= fee */\n      dup4\n      tag_207\n      jump\t// in\n    tag_213:\n      swap2\n      pop\n        /* \"contracts/Swapper.sol\":3620:3670  _transfer(swapDesc.dstToken, _swapper, swapOutput) */\n      tag_214\n        /* \"contracts/Swapper.sol\":3630:3638  swapDesc */\n      dup4\n        /* \"contracts/Swapper.sol\":3630:3647  swapDesc.dstToken */\n      0x20\n      add\n      mload\n        /* \"contracts/Swapper.sol\":3649:3657  _swapper */\n      dup6\n        /* \"contracts/Swapper.sol\":3659:3669  swapOutput */\n      dup5\n        /* \"contracts/Swapper.sol\":3620:3629  _transfer */\n      tag_212\n        /* \"contracts/Swapper.sol\":3620:3670  _transfer(swapDesc.dstToken, _swapper, swapOutput) */\n      jump\t// in\n    tag_214:\n        /* \"contracts/Swapper.sol\":3770:3787  swapDesc.dstToken */\n      0x20\n      dup1\n      dup5\n      add\n      mload\n        /* \"contracts/Swapper.sol\":3739:3756  swapDesc.srcToken */\n      dup5\n      mload\n        /* \"contracts/Swapper.sol\":3801:3816  swapDesc.amount */\n      0x40\n      dup1\n      dup8\n      add\n      mload\n        /* \"contracts/Swapper.sol\":3696:3867  Swapped(... */\n      dup2\n      mload\n        /* \"#utility.yul\":8276:8301   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":8317:8335   */\n      swap4\n      dup5\n      add\n        /* \"#utility.yul\":8310:8344   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":8360:8378   */\n      dup4\n      add\n        /* \"#utility.yul\":8353:8387   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swapper.sol\":3696:3867  Swapped(... */\n      swap2\n      dup3\n      and\n      swap3\n      swap1\n      dup3\n      and\n      swap2\n      dup8\n      and\n      swap1\n      0xc9163c3bdf7263acf1bb3d24072cc7da025f7181c31e2edc7e1673edf5e0ca32\n      swap1\n        /* \"#utility.yul\":8264:8266   */\n      0x60\n        /* \"#utility.yul\":8249:8267   */\n      add\n        /* \"contracts/Swapper.sol\":3696:3867  Swapped(... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/Swapper.sol\":2197:3874  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3437:3457  _nonReentrantAfter() */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":1949:1950  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2532:2562  ReentrancyGuardStorageLocation */\n      0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":4113:4136  $._status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3860:4143  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3437:3457  _nonReentrantAfter() */\n    tag_217:\n        /* \"contracts/Swapper.sol\":2063:3874  function swap(bytes calldata _data, address _swapper)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Swapper.sol\":3880:4187  function updateSwapFee(uint256 _newFeePercentage) external onlyOwner {... */\n    tag_94:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_220\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_220:\n        /* \"contracts/Swapper.sol\":4095:4112  swapFeePercentage */\n      0x02\n        /* \"contracts/Swapper.sol\":4095:4132  swapFeePercentage = _newFeePercentage */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Swapper.sol\":4147:4180  SwapFeeUpdated(_newFeePercentage) */\n      mload(0x40)\n        /* \"#utility.yul\":1826:1851   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Swapper.sol\":4147:4180  SwapFeeUpdated(_newFeePercentage) */\n      0x382455f3b749abde7721258dcfa10a22f30d4a28c69151a002dcbd8d1462e4f2\n      swap1\n        /* \"#utility.yul\":1814:1816   */\n      0x20\n        /* \"#utility.yul\":1799:1817   */\n      add\n        /* \"contracts/Swapper.sol\":4147:4180  SwapFeeUpdated(_newFeePercentage) */\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Swapper.sol\":3880:4187  function updateSwapFee(uint256 _newFeePercentage) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Swapper.sol\":1596:1904  function initialize(address _swapAdmin)... */\n    tag_98:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_226\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_226:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_227\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_227:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_228\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_228:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_230:\n        /* \"contracts/Swapper.sol\":1687:1713  __Ownable_init(msg.sender) */\n      tag_232\n        /* \"contracts/Swapper.sol\":1702:1712  msg.sender */\n      caller\n        /* \"contracts/Swapper.sol\":1687:1701  __Ownable_init */\n      tag_233\n        /* \"contracts/Swapper.sol\":1687:1713  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_232:\n        /* \"contracts/Swapper.sol\":1723:1740  __Pausable_init() */\n      tag_234\n        /* \"contracts/Swapper.sol\":1723:1738  __Pausable_init */\n      tag_235\n        /* \"contracts/Swapper.sol\":1723:1740  __Pausable_init() */\n      jump\t// in\n    tag_234:\n        /* \"contracts/Swapper.sol\":1750:1774  __ReentrancyGuard_init() */\n      tag_236\n        /* \"contracts/Swapper.sol\":1750:1772  __ReentrancyGuard_init */\n      tag_237\n        /* \"contracts/Swapper.sol\":1750:1774  __ReentrancyGuard_init() */\n      jump\t// in\n    tag_236:\n        /* \"contracts/Swapper.sol\":1786:1810  __UUPSUpgradeable_init() */\n      tag_238\n        /* \"contracts/Swapper.sol\":1786:1808  __UUPSUpgradeable_init */\n      tag_239\n        /* \"contracts/Swapper.sol\":1786:1810  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_238:\n        /* \"contracts/Swapper.sol\":1840:1842  50 */\n      0x32\n        /* \"contracts/Swapper.sol\":1820:1837  swapFeePercentage */\n      0x02\n        /* \"contracts/Swapper.sol\":1820:1842  swapFeePercentage = 50 */\n      sstore\n        /* \"contracts/Swapper.sol\":1875:1884  swapAdmin */\n      0x01\n        /* \"contracts/Swapper.sol\":1875:1897  swapAdmin = _swapAdmin */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup9\n      and\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_240\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":8551:8601   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":8539:8541   */\n      0x20\n        /* \"#utility.yul\":8524:8542   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Swapper.sol\":1596:1904  function initialize(address _swapAdmin)... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_102:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_244\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_244:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_246\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      tag_130\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_248\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_145\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Swapper.sol\":4193:4412  function getBalance(address _token) public view returns (uint256) {... */\n    tag_106:\n        /* \"contracts/Swapper.sol\":4250:4257  uint256 */\n      0x00\n      not(0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swapper.sol\":4273:4295  _token == NATIVE_TOKEN */\n      dup4\n      and\n      add\n        /* \"contracts/Swapper.sol\":4269:4350  if (_token == NATIVE_TOKEN) {... */\n      tag_250\n      jumpi\n      pop\n        /* \"contracts/Swapper.sol\":4318:4339  address(this).balance */\n      selfbalance\n      swap2\n        /* \"contracts/Swapper.sol\":4193:4412  function getBalance(address _token) public view returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Swapper.sol\":4269:4350  if (_token == NATIVE_TOKEN) {... */\n    tag_250:\n        /* \"contracts/Swapper.sol\":4366:4405  IERC20(_token).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/Swapper.sol\":4399:4403  this */\n      address\n        /* \"contracts/Swapper.sol\":4366:4405  IERC20(_token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swapper.sol\":4366:4390  IERC20(_token).balanceOf */\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"contracts/Swapper.sol\":4366:4405  IERC20(_token).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_253\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_253:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_254\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_254:\n        /* \"contracts/Swapper.sol\":4359:4405  return IERC20(_token).balanceOf(address(this)) */\n      swap3\n        /* \"contracts/Swapper.sol\":4193:4412  function getBalance(address _token) public view returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_110:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n    tag_258:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_130\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3674:3852  function _unpause() internal virtual whenPaused {... */\n    tag_113:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2579  _requirePaused() */\n      tag_263\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2577  _requirePaused */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2579  _requirePaused() */\n      jump\t// in\n    tag_263:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3791:3808  $._paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup2\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3832:3844  _msgSender() */\n    tag_267:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      tag_222\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4603:4915  function _checkProxy() internal view virtual {... */\n    tag_116:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4683:4687  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4692:4698  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4698  address(this) == __self */\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4795  address(this) == __self || // Must be called through delegatecall... */\n      tag_270\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4789:4795  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4795  ERC1967Utils.getImplementation() != __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4785  ERC1967Utils.getImplementation() */\n      tag_271\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1572  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4785  ERC1967Utils.getImplementation() */\n    tag_271:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4795  ERC1967Utils.getImplementation() != __self */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4795  address(this) == __self || // Must be called through delegatecall... */\n    tag_270:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4909  if (... */\n      iszero\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4869:4898  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Swapper.sol\":1910:2022  function _authorizeUpgrade(address newImplementation)... */\n    tag_119:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_248\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6057:6595  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_121:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6174:6191  newImplementation */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6156:6206  IERC1822Proxiable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6156:6208  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_278\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_279\n      swap2\n      dup2\n      add\n      swap1\n      tag_189\n      jump\t// in\n    tag_279:\n      0x01\n    tag_278:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6152:6589  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_281\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6518:6578  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6518:6578  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6518:6578  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      tag_130\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6152:6589  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_281:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6250:6290  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6246:6366  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6317:6351  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      shl(0xe2, 0x2a875269)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1826:1851   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":1799:1817   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6317:6351  UUPSUnsupportedProxiableUUID(slot) */\n      tag_130\n        /* \"#utility.yul\":1680:1857   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6246:6366  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_287:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6433  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6409:6426  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6428:6432  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6408  ERC1967Utils.upgradeToAndCall */\n      tag_290\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6433  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5032:5245  function _checkNotDelegated() internal view virtual {... */\n    tag_124:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5106:5110  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5115:5121  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5098:5121  address(this) != __self */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5239  if (address(this) != __self) {... */\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5199:5228  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_145:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      dup3\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      swap3\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3366:3542  function _pause() internal virtual whenNotPaused {... */\n    tag_150:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_297\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_156\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_297:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3484:3500  $._paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3496:3500  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3484:3500  $._paused = true */\n      or\n      dup2\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3515:3535  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3522:3534  _msgSender() */\n      tag_267\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2905:3033  function _requireNotPaused() internal view virtual {... */\n    tag_156:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2821:2830  $._paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2966:3027  if (paused()) {... */\n      iszero\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3001:3016  EnforcedPause() */\n      mload(0x40)\n      shl(0xe0, 0xd93c0665)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3470:3854  function _nonReentrantBefore() private {... */\n    tag_159:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2532:2562  ReentrancyGuardStorageLocation */\n      0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3670:3679  $._status */\n      dup1\n      sload\n      not(0x01)\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3670:3690  $._status == ENTERED */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3666:3754  if ($._status == ENTERED) {... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3713:3743  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      shl(0xe0, 0x3ee5aeb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3666:3754  if ($._status == ENTERED) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":1991:1992  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3828:3847  $._status = ENTERED */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3470:3854  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"contracts/Swapper.sol\":4792:5105  function _decode(bytes calldata _data)... */\n    tag_162:\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x60\n      dup1\n      dup3\n      add\n      mstore\n      swap1\n      dup1\n      dup1\n      dup1\n        /* \"contracts/Swapper.sol\":4967:5054  abi.decode(... */\n      tag_313\n      dup8\n      dup8\n      add\n      dup9\n      tag_314\n      jump\t// in\n    tag_313:\n        /* \"contracts/Swapper.sol\":5071:5098  SwapDescription(a, b, c, d) */\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      dup7\n      and\n      dup2\n      mstore\n      swap5\n      swap1\n      swap4\n      and\n      0x20\n      dup6\n      add\n      mstore\n      swap2\n      dup4\n      add\n      mstore\n      0x60\n      dup3\n      add\n      mstore\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Swapper.sol\":4792:5105  function _decode(bytes calldata _data)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Swapper.sol\":6060:6248  function _transferFrom(... */\n    tag_194:\n        /* \"contracts/Swapper.sol\":6179:6241  IERC20(_token).safeTransferFrom(_from, address(this), _amount) */\n      tag_217\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swapper.sol\":6179:6210  IERC20(_token).safeTransferFrom */\n      dup5\n      and\n        /* \"contracts/Swapper.sol\":6211:6216  _from */\n      dup4\n        /* \"contracts/Swapper.sol\":6226:6230  this */\n      address\n        /* \"contracts/Swapper.sol\":6233:6240  _amount */\n      dup5\n        /* \"contracts/Swapper.sol\":6179:6210  IERC20(_token).safeTransferFrom */\n      tag_317\n        /* \"contracts/Swapper.sol\":6179:6241  IERC20(_token).safeTransferFrom(_from, address(this), _amount) */\n      jump\t// in\n        /* \"contracts/Swapper.sol\":5581:5887  function _approve(... */\n    tag_196:\n        /* \"contracts/Swapper.sol\":5718:5767  IERC20(_token).allowance(address(this), _spender) */\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n        /* \"contracts/Swapper.sol\":5751:5755  this */\n      address\n        /* \"contracts/Swapper.sol\":5718:5767  IERC20(_token).allowance(address(this), _spender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9713:9764   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9800:9832   */\n      dup4\n      dup2\n      and\n        /* \"#utility.yul\":9780:9798   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":9773:9833   */\n      mstore\n        /* \"contracts/Swapper.sol\":5698:5715  uint256 allowance */\n      0x00\n      swap2\n        /* \"contracts/Swapper.sol\":5718:5742  IERC20(_token).allowance */\n      swap1\n      dup6\n      and\n      swap1\n      0xdd62ed3e\n      swap1\n        /* \"#utility.yul\":9686:9704   */\n      0x44\n      add\n        /* \"contracts/Swapper.sol\":5718:5767  IERC20(_token).allowance(address(this), _spender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_322\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_322:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_323\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_323:\n        /* \"contracts/Swapper.sol\":5698:5767  uint256 allowance = IERC20(_token).allowance(address(this), _spender) */\n      swap1\n      pop\n        /* \"contracts/Swapper.sol\":5793:5800  _amount */\n      dup2\n        /* \"contracts/Swapper.sol\":5781:5790  allowance */\n      dup2\n        /* \"contracts/Swapper.sol\":5781:5800  allowance < _amount */\n      lt\n        /* \"contracts/Swapper.sol\":5777:5881  if (allowance < _amount) {... */\n      iszero\n      tag_324\n      jumpi\n        /* \"contracts/Swapper.sol\":5829:5870  IERC20(_token).approve(_spender, _amount) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10036:10068   */\n      dup5\n      dup2\n      and\n        /* \"contracts/Swapper.sol\":5829:5870  IERC20(_token).approve(_spender, _amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":10018:10069   */\n      mstore\n        /* \"#utility.yul\":10085:10103   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10078:10112   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/Swapper.sol\":5829:5851  IERC20(_token).approve */\n      dup6\n      and\n      swap1\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":9991:10009   */\n      0x44\n      add\n        /* \"contracts/Swapper.sol\":5829:5870  IERC20(_token).approve(_spender, _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_328\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_328:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_329\n      swap2\n      swap1\n      tag_330\n      jump\t// in\n    tag_329:\n      pop\n        /* \"contracts/Swapper.sol\":5777:5881  if (allowance < _amount) {... */\n    tag_324:\n        /* \"contracts/Swapper.sol\":5688:5887  {... */\n      pop\n        /* \"contracts/Swapper.sol\":5581:5887  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Swapper.sol\":5111:5575  function _swap(SwapDescription memory _swapDesc) private returns (uint256) {... */\n    tag_198:\n        /* \"contracts/Swapper.sol\":5177:5184  uint256 */\n      0x00\n        /* \"contracts/Swapper.sol\":5196:5221  uint256 balanceBeforeSwap */\n      dup1\n        /* \"contracts/Swapper.sol\":5224:5254  getBalance(_swapDesc.dstToken) */\n      tag_332\n        /* \"contracts/Swapper.sol\":5235:5244  _swapDesc */\n      dup4\n        /* \"contracts/Swapper.sol\":5235:5253  _swapDesc.dstToken */\n      0x20\n      add\n      mload\n        /* \"contracts/Swapper.sol\":5224:5234  getBalance */\n      tag_106\n        /* \"contracts/Swapper.sol\":5224:5254  getBalance(_swapDesc.dstToken) */\n      jump\t// in\n    tag_332:\n        /* \"contracts/Swapper.sol\":5265:5277  bool success */\n      0x00\n        /* \"contracts/Swapper.sol\":5283:5294  newExchange */\n      dup1\n      sload\n        /* \"contracts/Swapper.sol\":5318:5332  _swapDesc.data */\n      0x60\n      dup7\n      add\n      mload\n        /* \"contracts/Swapper.sol\":5283:5333  newExchange.call{value: msg.value}(_swapDesc.data) */\n      mload(0x40)\n        /* \"contracts/Swapper.sol\":5196:5254  uint256 balanceBeforeSwap = getBalance(_swapDesc.dstToken) */\n      swap4\n      swap5\n      pop\n        /* \"contracts/Swapper.sol\":5265:5277  bool success */\n      swap2\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swapper.sol\":5283:5294  newExchange */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/Swapper.sol\":5307:5316  msg.value */\n      callvalue\n      swap2\n        /* \"contracts/Swapper.sol\":5283:5333  newExchange.call{value: msg.value}(_swapDesc.data) */\n      tag_333\n      swap2\n        /* \"contracts/Swapper.sol\":5318:5332  _swapDesc.data */\n      swap1\n        /* \"contracts/Swapper.sol\":5283:5333  newExchange.call{value: msg.value}(_swapDesc.data) */\n      tag_334\n      jump\t// in\n    tag_333:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_337\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_336)\n    tag_337:\n      0x60\n      swap2\n      pop\n    tag_336:\n      pop\n        /* \"contracts/Swapper.sol\":5264:5333  (bool success, ) = newExchange.call{value: msg.value}(_swapDesc.data) */\n      pop\n      swap1\n      pop\n        /* \"contracts/Swapper.sol\":5351:5358  success */\n      dup1\n        /* \"contracts/Swapper.sol\":5343:5374  require(success, \"swap failed\") */\n      tag_338\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10899:10901   */\n      0x20\n        /* \"contracts/Swapper.sol\":5343:5374  require(success, \"swap failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10881:10902   */\n      mstore\n        /* \"#utility.yul\":10938:10940   */\n      0x0b\n        /* \"#utility.yul\":10918:10936   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10911:10941   */\n      mstore\n      shl(0xaa, 0x1cddd85c0819985a5b1959)\n        /* \"#utility.yul\":10957:10975   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10950:10991   */\n      mstore\n        /* \"#utility.yul\":11008:11026   */\n      0x64\n      add\n        /* \"contracts/Swapper.sol\":5343:5374  require(success, \"swap failed\") */\n      tag_130\n        /* \"#utility.yul\":10697:11032   */\n      jump\n        /* \"contracts/Swapper.sol\":5343:5374  require(success, \"swap failed\") */\n    tag_338:\n        /* \"contracts/Swapper.sol\":5384:5408  uint256 balanceAfterSwap */\n      0x00\n        /* \"contracts/Swapper.sol\":5411:5441  getBalance(_swapDesc.dstToken) */\n      tag_341\n        /* \"contracts/Swapper.sol\":5422:5431  _swapDesc */\n      dup6\n        /* \"contracts/Swapper.sol\":5422:5440  _swapDesc.dstToken */\n      0x20\n      add\n      mload\n        /* \"contracts/Swapper.sol\":5411:5421  getBalance */\n      tag_106\n        /* \"contracts/Swapper.sol\":5411:5441  getBalance(_swapDesc.dstToken) */\n      jump\t// in\n    tag_341:\n        /* \"contracts/Swapper.sol\":5384:5441  uint256 balanceAfterSwap = getBalance(_swapDesc.dstToken) */\n      swap1\n      pop\n        /* \"contracts/Swapper.sol\":5451:5469  uint256 swapOutput */\n      0x00\n        /* \"contracts/Swapper.sol\":5472:5508  balanceAfterSwap - balanceBeforeSwap */\n      tag_342\n        /* \"contracts/Swapper.sol\":5491:5508  balanceBeforeSwap */\n      dup5\n        /* \"contracts/Swapper.sol\":5384:5441  uint256 balanceAfterSwap = getBalance(_swapDesc.dstToken) */\n      dup4\n        /* \"contracts/Swapper.sol\":5472:5508  balanceAfterSwap - balanceBeforeSwap */\n      tag_207\n      jump\t// in\n    tag_342:\n        /* \"contracts/Swapper.sol\":5451:5508  uint256 swapOutput = balanceAfterSwap - balanceBeforeSwap */\n      swap1\n      pop\n        /* \"contracts/Swapper.sol\":5525:5535  swapOutput */\n      dup1\n        /* \"contracts/Swapper.sol\":5539:5540  0 */\n      0x00\n        /* \"contracts/Swapper.sol\":5525:5540  swapOutput != 0 */\n      sub\n        /* \"contracts/Swapper.sol\":5518:5541  assert(swapOutput != 0) */\n      tag_344\n      jumpi\n      tag_344\n      tag_345\n      jump\t// in\n    tag_344:\n        /* \"contracts/Swapper.sol\":5558:5568  swapOutput */\n      swap6\n        /* \"contracts/Swapper.sol\":5111:5575  function _swap(SwapDescription memory _swapDesc) private returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Swapper.sol\":5893:6054  function _transfer(... */\n    tag_212:\n        /* \"contracts/Swapper.sol\":6006:6047  IERC20(_token).safeTransfer(_to, _amount) */\n      tag_217\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swapper.sol\":6006:6033  IERC20(_token).safeTransfer */\n      dup5\n      and\n        /* \"contracts/Swapper.sol\":6034:6037  _to */\n      dup4\n        /* \"contracts/Swapper.sol\":6039:6046  _amount */\n      dup4\n        /* \"contracts/Swapper.sol\":6006:6033  IERC20(_token).safeTransfer */\n      tag_348\n        /* \"contracts/Swapper.sol\":6006:6047  IERC20(_token).safeTransfer(_to, _amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3860:4143  function _nonReentrantAfter() private {... */\n    tag_218:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":1949:1950  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2532:2562  ReentrancyGuardStorageLocation */\n      0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":4113:4136  $._status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3860:4143  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_233:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_353\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_354\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_353:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_248\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_357\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1836:1933  function __Pausable_init() internal onlyInitializing {... */\n    tag_235:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_359\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_354\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_359:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1926  __Pausable_init_unchained() */\n      tag_112\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1924  __Pausable_init_unchained */\n      tag_362\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1926  __Pausable_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2684:2795  function __ReentrancyGuard_init() internal onlyInitializing {... */\n    tag_237:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_364\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_354\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_364:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2754:2788  __ReentrancyGuard_init_unchained() */\n      tag_112\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2754:2786  __ReentrancyGuard_init_unchained */\n      tag_367\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2754:2788  __ReentrancyGuard_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2970:3037  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_239:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_112\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_354\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3105:3231  function _requirePaused() internal view virtual {... */\n    tag_264:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2821:2830  $._paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3163:3225  if (!paused()) {... */\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3199:3214  ExpectedPause() */\n      mload(0x40)\n      shl(0xe0, 0x8dfc202b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      tag_379\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2374:2391  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2373  _setImplementation */\n      tag_380\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_379:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      tag_381\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      tag_217\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2518:2535  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2537:2541  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2517  Address.functionDelegateCall */\n      tag_383\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n    tag_381:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      tag_120\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2589  _checkNonPayable */\n      tag_386\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_317:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1797:1850  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11389:11421   */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1797:1850  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":11371:11422   */\n      mstore\n        /* \"#utility.yul\":11458:11490   */\n      dup4\n      dup2\n      and\n        /* \"#utility.yul\":11438:11456   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":11431:11491   */\n      mstore\n        /* \"#utility.yul\":11507:11525   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11500:11534   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_324\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1790:1795  token */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1830  token.transferFrom */\n      dup3\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":11344:11362   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1797:1850  abi.encodeCall(token.transferFrom, (from, to, value)) */\n    tag_390:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1789  _callOptionalReturn */\n      tag_392\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_348:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10036:10068   */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":10018:10069   */\n      mstore\n        /* \"#utility.yul\":10085:10103   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10078:10112   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_217\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1373:1378  token */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1409  token.transfer */\n      dup3\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":9991:10009   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      tag_390\n        /* \"#utility.yul\":9844:10118   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_354:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_357:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_244\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_354\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1939:2095  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_362:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_407\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_354\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_407:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2071:2088  $._paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1939:2095  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2801:2984  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n    tag_367:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_354\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n    tag_380:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1765  newImplementation */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n      tag_416\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      tag_130\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n    tag_416:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1945  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_383:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3983:3995  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4008:4020  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4022:4045  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4055  target */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4068  target.delegatecall */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4069:4073  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n      mload(0x40)\n      tag_420\n      swap2\n      swap1\n      tag_334\n      jump\t// in\n    tag_420:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_423\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_422)\n    tag_423:\n      0x60\n      swap2\n      pop\n    tag_422:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4007:4074  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n      tag_344\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4118:4124  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4126:4133  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4135:4145  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4117  verifyCallResultFromTarget */\n      tag_425\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n    tag_386:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n      mload(0x40)\n      shl(0xe0, 0xb398979f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_392:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7818:7836  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7846:7865  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7984:7988  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7981:7982  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7974:7978  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7968:7979  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7961:7965  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7955:7959  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7951:7966  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7948:7949  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7941:7946  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7934:7939  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7989  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8041:8048  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n      tag_429\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8085:8089  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8079:8090  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8130:8146  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8127:8128  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8122:8125  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8107:8147  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8176:8192  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8171:8174  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8164:8193  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n    tag_429:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8278:8286  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8234:8250  returndatasize() */\n      returndatasize\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8325  returnSize == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_430\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8373  returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8377:8378  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8378  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_431)\n    tag_430:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8354  address(token).code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8359  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_431:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_324\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      tag_130\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n    tag_425:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4565:4577  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4594:4601  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n      tag_437\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n      tag_438\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:4635  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4624  _revert */\n      tag_439\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n      jump\t// in\n    tag_438:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n      jump(tag_440)\n    tag_437:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4858  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4863  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_441\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4885  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4890  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n    tag_441:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_442\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      tag_130\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_442:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4976:4986  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n    tag_440:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5543:6030  function _revert(bytes memory returndata) private pure {... */\n    tag_439:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5691  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5695  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\n      tag_445\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5871:5881  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5865:5882  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5927:5942  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5914:5924  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5910:5912  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5906:5925  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5899:5943  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\n    tag_445:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n      mload(0x40)\n      shl(0xe0, 0xd6bda275)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":222:353   */\n    tag_447:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":297:328   */\n      dup2\n      and\n        /* \"#utility.yul\":287:329   */\n      dup2\n      eq\n        /* \"#utility.yul\":277:347   */\n      tag_248\n      jumpi\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":340:341   */\n      dup1\n        /* \"#utility.yul\":333:345   */\n      revert\n        /* \"#utility.yul\":358:485   */\n    tag_448:\n        /* \"#utility.yul\":419:429   */\n      0x4e487b71\n        /* \"#utility.yul\":414:417   */\n      0xe0\n        /* \"#utility.yul\":410:430   */\n      shl\n        /* \"#utility.yul\":407:408   */\n      0x00\n        /* \"#utility.yul\":400:431   */\n      mstore\n        /* \"#utility.yul\":450:454   */\n      0x41\n        /* \"#utility.yul\":447:448   */\n      0x04\n        /* \"#utility.yul\":440:455   */\n      mstore\n        /* \"#utility.yul\":474:478   */\n      0x24\n        /* \"#utility.yul\":471:472   */\n      0x00\n        /* \"#utility.yul\":464:479   */\n      revert\n        /* \"#utility.yul\":490:1215   */\n    tag_449:\n        /* \"#utility.yul\":532:537   */\n      0x00\n        /* \"#utility.yul\":585:588   */\n      dup3\n        /* \"#utility.yul\":578:582   */\n      0x1f\n        /* \"#utility.yul\":570:576   */\n      dup4\n        /* \"#utility.yul\":566:583   */\n      add\n        /* \"#utility.yul\":562:589   */\n      slt\n        /* \"#utility.yul\":552:607   */\n      tag_458\n      jumpi\n        /* \"#utility.yul\":603:604   */\n      0x00\n        /* \"#utility.yul\":600:601   */\n      dup1\n        /* \"#utility.yul\":593:605   */\n      revert\n        /* \"#utility.yul\":552:607   */\n    tag_458:\n        /* \"#utility.yul\":643:649   */\n      dup2\n        /* \"#utility.yul\":630:650   */\n      calldataload\n        /* \"#utility.yul\":673:691   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":665:671   */\n      dup2\n        /* \"#utility.yul\":662:692   */\n      gt\n        /* \"#utility.yul\":659:715   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":695:713   */\n      tag_460\n      tag_448\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":738:747   */\n      mload\n        /* \"#utility.yul\":836:838   */\n      0x1f\n        /* \"#utility.yul\":798:815   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":794:825   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":827:829   */\n      0x3f\n        /* \"#utility.yul\":790:830   */\n      add\n        /* \"#utility.yul\":786:840   */\n      and\n        /* \"#utility.yul\":774:841   */\n      dup2\n      add\n        /* \"#utility.yul\":871:889   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":856:890   */\n      dup2\n      gt\n        /* \"#utility.yul\":892:914   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":853:915   */\n      or\n        /* \"#utility.yul\":850:938   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":918:936   */\n      tag_462\n      tag_448\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":954:956   */\n      0x40\n        /* \"#utility.yul\":947:969   */\n      mstore\n        /* \"#utility.yul\":978:1000   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":1019:1038   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":1040:1044   */\n      0x20\n        /* \"#utility.yul\":1015:1045   */\n      add\n        /* \"#utility.yul\":1012:1051   */\n      dup6\n      lt\n        /* \"#utility.yul\":1009:1068   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":1064:1065   */\n      0x00\n        /* \"#utility.yul\":1061:1062   */\n      dup1\n        /* \"#utility.yul\":1054:1066   */\n      revert\n        /* \"#utility.yul\":1009:1068   */\n    tag_463:\n        /* \"#utility.yul\":1128:1134   */\n      dup2\n        /* \"#utility.yul\":1121:1125   */\n      0x20\n        /* \"#utility.yul\":1113:1119   */\n      dup6\n        /* \"#utility.yul\":1109:1126   */\n      add\n        /* \"#utility.yul\":1102:1106   */\n      0x20\n        /* \"#utility.yul\":1094:1100   */\n      dup4\n        /* \"#utility.yul\":1090:1107   */\n      add\n        /* \"#utility.yul\":1077:1135   */\n      calldatacopy\n        /* \"#utility.yul\":1183:1184   */\n      0x00\n        /* \"#utility.yul\":1155:1174   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":1176:1180   */\n      0x20\n        /* \"#utility.yul\":1151:1181   */\n      add\n        /* \"#utility.yul\":1144:1185   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1159:1165   */\n      swap4\n        /* \"#utility.yul\":490:1215   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1220:1675   */\n    tag_41:\n        /* \"#utility.yul\":1297:1303   */\n      0x00\n        /* \"#utility.yul\":1305:1311   */\n      dup1\n        /* \"#utility.yul\":1358:1360   */\n      0x40\n        /* \"#utility.yul\":1346:1355   */\n      dup4\n        /* \"#utility.yul\":1337:1344   */\n      dup6\n        /* \"#utility.yul\":1333:1356   */\n      sub\n        /* \"#utility.yul\":1329:1361   */\n      slt\n        /* \"#utility.yul\":1326:1378   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":1374:1375   */\n      0x00\n        /* \"#utility.yul\":1371:1372   */\n      dup1\n        /* \"#utility.yul\":1364:1376   */\n      revert\n        /* \"#utility.yul\":1326:1378   */\n    tag_465:\n        /* \"#utility.yul\":1413:1422   */\n      dup3\n        /* \"#utility.yul\":1400:1423   */\n      calldataload\n        /* \"#utility.yul\":1432:1463   */\n      tag_466\n        /* \"#utility.yul\":1457:1462   */\n      dup2\n        /* \"#utility.yul\":1432:1463   */\n      tag_447\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":1482:1487   */\n      swap2\n      pop\n        /* \"#utility.yul\":1538:1540   */\n      0x20\n        /* \"#utility.yul\":1523:1541   */\n      dup4\n      add\n        /* \"#utility.yul\":1510:1542   */\n      calldataload\n        /* \"#utility.yul\":1565:1583   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1554:1584   */\n      dup2\n      gt\n        /* \"#utility.yul\":1551:1601   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":1597:1598   */\n      0x00\n        /* \"#utility.yul\":1594:1595   */\n      dup1\n        /* \"#utility.yul\":1587:1599   */\n      revert\n        /* \"#utility.yul\":1551:1601   */\n    tag_467:\n        /* \"#utility.yul\":1620:1669   */\n      tag_468\n        /* \"#utility.yul\":1661:1668   */\n      dup6\n        /* \"#utility.yul\":1652:1658   */\n      dup3\n        /* \"#utility.yul\":1641:1650   */\n      dup7\n        /* \"#utility.yul\":1637:1659   */\n      add\n        /* \"#utility.yul\":1620:1669   */\n      tag_449\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":1610:1669   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1220:1675   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1862:2109   */\n    tag_51:\n        /* \"#utility.yul\":1921:1927   */\n      0x00\n        /* \"#utility.yul\":1974:1976   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup3\n        /* \"#utility.yul\":1953:1960   */\n      dup5\n        /* \"#utility.yul\":1949:1972   */\n      sub\n        /* \"#utility.yul\":1945:1977   */\n      slt\n        /* \"#utility.yul\":1942:1994   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":1990:1991   */\n      0x00\n        /* \"#utility.yul\":1987:1988   */\n      dup1\n        /* \"#utility.yul\":1980:1992   */\n      revert\n        /* \"#utility.yul\":1942:1994   */\n    tag_471:\n        /* \"#utility.yul\":2029:2038   */\n      dup2\n        /* \"#utility.yul\":2016:2039   */\n      calldataload\n        /* \"#utility.yul\":2048:2079   */\n      tag_440\n        /* \"#utility.yul\":2073:2078   */\n      dup2\n        /* \"#utility.yul\":2048:2079   */\n      tag_447\n      jump\t// in\n        /* \"#utility.yul\":2488:2738   */\n    tag_450:\n        /* \"#utility.yul\":2573:2574   */\n      0x00\n        /* \"#utility.yul\":2583:2696   */\n    tag_476:\n        /* \"#utility.yul\":2597:2603   */\n      dup4\n        /* \"#utility.yul\":2594:2595   */\n      dup2\n        /* \"#utility.yul\":2591:2604   */\n      lt\n        /* \"#utility.yul\":2583:2696   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":2673:2684   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":2667:2685   */\n      mload\n        /* \"#utility.yul\":2654:2665   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":2647:2686   */\n      mstore\n        /* \"#utility.yul\":2619:2621   */\n      0x20\n        /* \"#utility.yul\":2612:2622   */\n      add\n        /* \"#utility.yul\":2583:2696   */\n      jump(tag_476)\n    tag_478:\n      pop\n      pop\n        /* \"#utility.yul\":2730:2731   */\n      0x00\n        /* \"#utility.yul\":2712:2728   */\n      swap2\n      add\n        /* \"#utility.yul\":2705:2732   */\n      mstore\n        /* \"#utility.yul\":2488:2738   */\n      jump\t// out\n        /* \"#utility.yul\":2743:3139   */\n    tag_85:\n        /* \"#utility.yul\":2892:2894   */\n      0x20\n        /* \"#utility.yul\":2881:2890   */\n      dup2\n        /* \"#utility.yul\":2874:2895   */\n      mstore\n        /* \"#utility.yul\":2855:2859   */\n      0x00\n        /* \"#utility.yul\":2924:2930   */\n      dup3\n        /* \"#utility.yul\":2918:2931   */\n      mload\n        /* \"#utility.yul\":2967:2973   */\n      dup1\n        /* \"#utility.yul\":2962:2964   */\n      0x20\n        /* \"#utility.yul\":2951:2960   */\n      dup5\n        /* \"#utility.yul\":2947:2965   */\n      add\n        /* \"#utility.yul\":2940:2974   */\n      mstore\n        /* \"#utility.yul\":2983:3062   */\n      tag_480\n        /* \"#utility.yul\":3055:3061   */\n      dup2\n        /* \"#utility.yul\":3050:3052   */\n      0x40\n        /* \"#utility.yul\":3039:3048   */\n      dup6\n        /* \"#utility.yul\":3035:3053   */\n      add\n        /* \"#utility.yul\":3030:3032   */\n      0x20\n        /* \"#utility.yul\":3022:3028   */\n      dup8\n        /* \"#utility.yul\":3018:3033   */\n      add\n        /* \"#utility.yul\":2983:3062   */\n      tag_450\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":3123:3125   */\n      0x1f\n        /* \"#utility.yul\":3102:3117   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3098:3127   */\n      and\n        /* \"#utility.yul\":3083:3128   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3130:3132   */\n      0x40\n        /* \"#utility.yul\":3079:3133   */\n      add\n      swap3\n        /* \"#utility.yul\":2743:3139   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3144:3871   */\n    tag_88:\n        /* \"#utility.yul\":3223:3229   */\n      0x00\n        /* \"#utility.yul\":3231:3237   */\n      dup1\n        /* \"#utility.yul\":3239:3245   */\n      0x00\n        /* \"#utility.yul\":3292:3294   */\n      0x40\n        /* \"#utility.yul\":3280:3289   */\n      dup5\n        /* \"#utility.yul\":3271:3278   */\n      dup7\n        /* \"#utility.yul\":3267:3290   */\n      sub\n        /* \"#utility.yul\":3263:3295   */\n      slt\n        /* \"#utility.yul\":3260:3312   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":3308:3309   */\n      0x00\n        /* \"#utility.yul\":3305:3306   */\n      dup1\n        /* \"#utility.yul\":3298:3310   */\n      revert\n        /* \"#utility.yul\":3260:3312   */\n    tag_482:\n        /* \"#utility.yul\":3348:3357   */\n      dup4\n        /* \"#utility.yul\":3335:3358   */\n      calldataload\n        /* \"#utility.yul\":3381:3399   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3373:3379   */\n      dup2\n        /* \"#utility.yul\":3370:3400   */\n      gt\n        /* \"#utility.yul\":3367:3417   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":3413:3414   */\n      0x00\n        /* \"#utility.yul\":3410:3411   */\n      dup1\n        /* \"#utility.yul\":3403:3415   */\n      revert\n        /* \"#utility.yul\":3367:3417   */\n    tag_483:\n        /* \"#utility.yul\":3436:3458   */\n      dup5\n      add\n        /* \"#utility.yul\":3489:3493   */\n      0x1f\n        /* \"#utility.yul\":3481:3494   */\n      dup2\n      add\n        /* \"#utility.yul\":3477:3504   */\n      dup7\n      sgt\n        /* \"#utility.yul\":3467:3522   */\n      tag_484\n      jumpi\n        /* \"#utility.yul\":3518:3519   */\n      0x00\n        /* \"#utility.yul\":3515:3516   */\n      dup1\n        /* \"#utility.yul\":3508:3520   */\n      revert\n        /* \"#utility.yul\":3467:3522   */\n    tag_484:\n        /* \"#utility.yul\":3558:3560   */\n      dup1\n        /* \"#utility.yul\":3545:3561   */\n      calldataload\n        /* \"#utility.yul\":3584:3602   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3576:3582   */\n      dup2\n        /* \"#utility.yul\":3573:3603   */\n      gt\n        /* \"#utility.yul\":3570:3620   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":3616:3617   */\n      0x00\n        /* \"#utility.yul\":3613:3614   */\n      dup1\n        /* \"#utility.yul\":3606:3618   */\n      revert\n        /* \"#utility.yul\":3570:3620   */\n    tag_485:\n        /* \"#utility.yul\":3663:3670   */\n      dup7\n        /* \"#utility.yul\":3656:3660   */\n      0x20\n        /* \"#utility.yul\":3647:3653   */\n      dup3\n        /* \"#utility.yul\":3643:3645   */\n      dup5\n        /* \"#utility.yul\":3639:3654   */\n      add\n        /* \"#utility.yul\":3635:3661   */\n      add\n        /* \"#utility.yul\":3632:3671   */\n      gt\n        /* \"#utility.yul\":3629:3688   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":3684:3685   */\n      0x00\n        /* \"#utility.yul\":3681:3682   */\n      dup1\n        /* \"#utility.yul\":3674:3686   */\n      revert\n        /* \"#utility.yul\":3629:3688   */\n    tag_486:\n        /* \"#utility.yul\":3715:3719   */\n      0x20\n        /* \"#utility.yul\":3707:3720   */\n      swap2\n      dup3\n      add\n      swap5\n      pop\n        /* \"#utility.yul\":3739:3745   */\n      swap3\n      pop\n        /* \"#utility.yul\":3780:3800   */\n      dup5\n      add\n        /* \"#utility.yul\":3767:3801   */\n      calldataload\n        /* \"#utility.yul\":3810:3841   */\n      tag_487\n        /* \"#utility.yul\":3767:3801   */\n      dup2\n        /* \"#utility.yul\":3810:3841   */\n      tag_447\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":3860:3865   */\n      dup1\n        /* \"#utility.yul\":3850:3865   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3144:3871   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3876:4102   */\n    tag_93:\n        /* \"#utility.yul\":3935:3941   */\n      0x00\n        /* \"#utility.yul\":3988:3990   */\n      0x20\n        /* \"#utility.yul\":3976:3985   */\n      dup3\n        /* \"#utility.yul\":3967:3974   */\n      dup5\n        /* \"#utility.yul\":3963:3986   */\n      sub\n        /* \"#utility.yul\":3959:3991   */\n      slt\n        /* \"#utility.yul\":3956:4008   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":4004:4005   */\n      0x00\n        /* \"#utility.yul\":4001:4002   */\n      dup1\n        /* \"#utility.yul\":3994:4006   */\n      revert\n        /* \"#utility.yul\":3956:4008   */\n    tag_489:\n      pop\n        /* \"#utility.yul\":4049:4072   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3876:4102   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6876:7060   */\n    tag_189:\n        /* \"#utility.yul\":6946:6952   */\n      0x00\n        /* \"#utility.yul\":6999:7001   */\n      0x20\n        /* \"#utility.yul\":6987:6996   */\n      dup3\n        /* \"#utility.yul\":6978:6985   */\n      dup5\n        /* \"#utility.yul\":6974:6997   */\n      sub\n        /* \"#utility.yul\":6970:7002   */\n      slt\n        /* \"#utility.yul\":6967:7019   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":7015:7016   */\n      0x00\n        /* \"#utility.yul\":7012:7013   */\n      dup1\n        /* \"#utility.yul\":7005:7017   */\n      revert\n        /* \"#utility.yul\":6967:7019   */\n    tag_499:\n      pop\n        /* \"#utility.yul\":7038:7054   */\n      mload\n      swap2\n        /* \"#utility.yul\":6876:7060   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7414:7541   */\n    tag_451:\n        /* \"#utility.yul\":7475:7485   */\n      0x4e487b71\n        /* \"#utility.yul\":7470:7473   */\n      0xe0\n        /* \"#utility.yul\":7466:7486   */\n      shl\n        /* \"#utility.yul\":7463:7464   */\n      0x00\n        /* \"#utility.yul\":7456:7487   */\n      mstore\n        /* \"#utility.yul\":7506:7510   */\n      0x11\n        /* \"#utility.yul\":7503:7504   */\n      0x04\n        /* \"#utility.yul\":7496:7511   */\n      mstore\n        /* \"#utility.yul\":7530:7534   */\n      0x24\n        /* \"#utility.yul\":7527:7528   */\n      0x00\n        /* \"#utility.yul\":7520:7535   */\n      revert\n        /* \"#utility.yul\":7546:7714   */\n    tag_200:\n        /* \"#utility.yul\":7619:7628   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":7650:7659   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7667:7682   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":7661:7683   */\n      dup5\n      eq\n        /* \"#utility.yul\":7647:7684   */\n      or\n        /* \"#utility.yul\":7637:7708   */\n      tag_254\n      jumpi\n        /* \"#utility.yul\":7688:7706   */\n      tag_254\n      tag_451\n      jump\t// in\n        /* \"#utility.yul\":7719:7936   */\n    tag_202:\n        /* \"#utility.yul\":7759:7760   */\n      0x00\n        /* \"#utility.yul\":7785:7786   */\n      dup3\n        /* \"#utility.yul\":7775:7907   */\n      tag_506\n      jumpi\n        /* \"#utility.yul\":7829:7839   */\n      0x4e487b71\n        /* \"#utility.yul\":7824:7827   */\n      0xe0\n        /* \"#utility.yul\":7820:7840   */\n      shl\n        /* \"#utility.yul\":7817:7818   */\n      0x00\n        /* \"#utility.yul\":7810:7841   */\n      mstore\n        /* \"#utility.yul\":7864:7868   */\n      0x12\n        /* \"#utility.yul\":7861:7862   */\n      0x04\n        /* \"#utility.yul\":7854:7869   */\n      mstore\n        /* \"#utility.yul\":7892:7896   */\n      0x24\n        /* \"#utility.yul\":7889:7890   */\n      0x00\n        /* \"#utility.yul\":7882:7897   */\n      revert\n        /* \"#utility.yul\":7775:7907   */\n    tag_506:\n      pop\n        /* \"#utility.yul\":7921:7930   */\n      div\n      swap1\n        /* \"#utility.yul\":7719:7936   */\n      jump\t// out\n        /* \"#utility.yul\":7941:8069   */\n    tag_207:\n        /* \"#utility.yul\":8008:8017   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":8029:8040   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":8026:8063   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":8043:8061   */\n      tag_254\n      tag_451\n      jump\t// in\n        /* \"#utility.yul\":8801:9534   */\n    tag_314:\n        /* \"#utility.yul\":8912:8918   */\n      0x00\n        /* \"#utility.yul\":8920:8926   */\n      dup1\n        /* \"#utility.yul\":8928:8934   */\n      0x00\n        /* \"#utility.yul\":8936:8942   */\n      dup1\n        /* \"#utility.yul\":8989:8992   */\n      0x80\n        /* \"#utility.yul\":8977:8986   */\n      dup6\n        /* \"#utility.yul\":8968:8975   */\n      dup8\n        /* \"#utility.yul\":8964:8987   */\n      sub\n        /* \"#utility.yul\":8960:8993   */\n      slt\n        /* \"#utility.yul\":8957:9010   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":9006:9007   */\n      0x00\n        /* \"#utility.yul\":9003:9004   */\n      dup1\n        /* \"#utility.yul\":8996:9008   */\n      revert\n        /* \"#utility.yul\":8957:9010   */\n    tag_515:\n        /* \"#utility.yul\":9045:9054   */\n      dup5\n        /* \"#utility.yul\":9032:9055   */\n      calldataload\n        /* \"#utility.yul\":9064:9095   */\n      tag_516\n        /* \"#utility.yul\":9089:9094   */\n      dup2\n        /* \"#utility.yul\":9064:9095   */\n      tag_447\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":9114:9119   */\n      swap4\n      pop\n        /* \"#utility.yul\":9171:9173   */\n      0x20\n        /* \"#utility.yul\":9156:9174   */\n      dup6\n      add\n        /* \"#utility.yul\":9143:9175   */\n      calldataload\n        /* \"#utility.yul\":9184:9217   */\n      tag_517\n        /* \"#utility.yul\":9143:9175   */\n      dup2\n        /* \"#utility.yul\":9184:9217   */\n      tag_447\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":9236:9243   */\n      swap3\n      pop\n        /* \"#utility.yul\":9316:9318   */\n      0x40\n        /* \"#utility.yul\":9301:9319   */\n      dup6\n      add\n        /* \"#utility.yul\":9288:9320   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":9397:9399   */\n      0x60\n        /* \"#utility.yul\":9382:9400   */\n      dup6\n      add\n        /* \"#utility.yul\":9369:9401   */\n      calldataload\n        /* \"#utility.yul\":9424:9442   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9413:9443   */\n      dup2\n      gt\n        /* \"#utility.yul\":9410:9460   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":9456:9457   */\n      0x00\n        /* \"#utility.yul\":9453:9454   */\n      dup1\n        /* \"#utility.yul\":9446:9458   */\n      revert\n        /* \"#utility.yul\":9410:9460   */\n    tag_518:\n        /* \"#utility.yul\":9479:9528   */\n      tag_519\n        /* \"#utility.yul\":9520:9527   */\n      dup8\n        /* \"#utility.yul\":9511:9517   */\n      dup3\n        /* \"#utility.yul\":9500:9509   */\n      dup9\n        /* \"#utility.yul\":9496:9518   */\n      add\n        /* \"#utility.yul\":9479:9528   */\n      tag_449\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":9469:9528   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":8801:9534   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10123:10400   */\n    tag_330:\n        /* \"#utility.yul\":10190:10196   */\n      0x00\n        /* \"#utility.yul\":10243:10245   */\n      0x20\n        /* \"#utility.yul\":10231:10240   */\n      dup3\n        /* \"#utility.yul\":10222:10229   */\n      dup5\n        /* \"#utility.yul\":10218:10241   */\n      sub\n        /* \"#utility.yul\":10214:10246   */\n      slt\n        /* \"#utility.yul\":10211:10263   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":10259:10260   */\n      0x00\n        /* \"#utility.yul\":10256:10257   */\n      dup1\n        /* \"#utility.yul\":10249:10261   */\n      revert\n        /* \"#utility.yul\":10211:10263   */\n    tag_523:\n        /* \"#utility.yul\":10291:10300   */\n      dup2\n        /* \"#utility.yul\":10285:10301   */\n      mload\n        /* \"#utility.yul\":10344:10349   */\n      dup1\n        /* \"#utility.yul\":10337:10350   */\n      iszero\n        /* \"#utility.yul\":10330:10351   */\n      iszero\n        /* \"#utility.yul\":10323:10328   */\n      dup2\n        /* \"#utility.yul\":10320:10352   */\n      eq\n        /* \"#utility.yul\":10310:10370   */\n      tag_440\n      jumpi\n        /* \"#utility.yul\":10366:10367   */\n      0x00\n        /* \"#utility.yul\":10363:10364   */\n      dup1\n        /* \"#utility.yul\":10356:10368   */\n      revert\n        /* \"#utility.yul\":10405:10692   */\n    tag_334:\n        /* \"#utility.yul\":10534:10537   */\n      0x00\n        /* \"#utility.yul\":10572:10578   */\n      dup3\n        /* \"#utility.yul\":10566:10579   */\n      mload\n        /* \"#utility.yul\":10588:10654   */\n      tag_526\n        /* \"#utility.yul\":10647:10653   */\n      dup2\n        /* \"#utility.yul\":10642:10645   */\n      dup5\n        /* \"#utility.yul\":10635:10639   */\n      0x20\n        /* \"#utility.yul\":10627:10633   */\n      dup8\n        /* \"#utility.yul\":10623:10640   */\n      add\n        /* \"#utility.yul\":10588:10654   */\n      tag_450\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":10670:10686   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":10405:10692   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11037:11164   */\n    tag_345:\n        /* \"#utility.yul\":11098:11108   */\n      0x4e487b71\n        /* \"#utility.yul\":11093:11096   */\n      0xe0\n        /* \"#utility.yul\":11089:11109   */\n      shl\n        /* \"#utility.yul\":11086:11087   */\n      0x00\n        /* \"#utility.yul\":11079:11110   */\n      mstore\n        /* \"#utility.yul\":11129:11133   */\n      0x01\n        /* \"#utility.yul\":11126:11127   */\n      0x04\n        /* \"#utility.yul\":11119:11134   */\n      mstore\n        /* \"#utility.yul\":11153:11157   */\n      0x24\n        /* \"#utility.yul\":11150:11151   */\n      0x00\n        /* \"#utility.yul\":11143:11158   */\n      revert\n    stop\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300\n\n    auxdata: 0xa26469706673582212205eb61123e45b365ff0e02020a54c7491475f5cca535e4a073fefa58ad4137aad64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a060405230608052348015601357600080fd5b50608051611a2561003d60003960008181610d1e01528181610d470152610e880152611a256000f3fe6080604052600436106101185760003560e01c8063715018a6116100a0578063ae0caeb311610064578063ae0caeb314610321578063bf16f65a14610334578063c4d66de814610354578063f2fde38b14610374578063f8b2cb4f1461039457600080fd5b8063715018a6146102665780638456cb591461027b5780638da5cb5b14610290578063a4ac0d49146102cd578063ad3cb1cc146102e357600080fd5b806352d1902d116100e757806352d1902d146101b3578063540907bb146101d65780635c975abb146101f65780635dc0b76914610226578063704802751461024657600080fd5b80630380fd031461012457806331f7d964146101615780633f4ba83a146101895780634f1ef286146101a057600080fd5b3661011f57005b600080fd5b34801561013057600080fd5b50600054610144906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561016d57600080fd5b5061014473eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b34801561019557600080fd5b5061019e6103b4565b005b61019e6101ae366004611711565b6103c6565b3480156101bf57600080fd5b506101c86103e5565b604051908152602001610158565b3480156101e257600080fd5b5061019e6101f1366004611761565b610402565b34801561020257600080fd5b506000805160206119d08339815191525460ff166040519015158152602001610158565b34801561023257600080fd5b50600154610144906001600160a01b031681565b34801561025257600080fd5b5061019e610261366004611761565b61047d565b34801561027257600080fd5b5061019e61051d565b34801561028757600080fd5b5061019e61052f565b34801561029c57600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b0316610144565b3480156102d957600080fd5b506101c860025481565b3480156102ef57600080fd5b50610314604051806040016040528060058152602001640352e302e360dc1b81525081565b60405161015891906117a2565b61019e61032f3660046117d5565b61053f565b34801561034057600080fd5b5061019e61034f36600461185b565b6109f8565b34801561036057600080fd5b5061019e61036f366004611761565b610a3c565b34801561038057600080fd5b5061019e61038f366004611761565b610b84565b3480156103a057600080fd5b506101c86103af366004611761565b610bc2565b6103bc610c5e565b6103c4610cb9565b565b6103ce610d13565b6103d782610db8565b6103e18282610dc0565b5050565b60006103ef610e7d565b506000805160206119b083398151915290565b61040a610c5e565b6001600160a01b03811661045b5760405162461bcd60e51b81526020600482015260136024820152727a65726f206164647265737320706172616d7360681b60448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b610485610c5e565b6001600160a01b0381166104d35760405162461bcd60e51b8152602060048201526015602482015274496e76616c69642061646d696e206164647265737360581b6044820152606401610452565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b610525610c5e565b6103c46000610ec6565b610537610c5e565b6103c4610f37565b610547610f80565b61054f610fb1565b600061055b8484610ffb565b9050806040015160000361059f5760405162461bcd60e51b815260206004820152600b60248201526a0616d6f756e74203d3d20360ac1b6044820152606401610452565b80516001600160a01b0316158015906105c4575060208101516001600160a01b031615155b6106015760405162461bcd60e51b815260206004820152600e60248201526d696e76616c696420746f6b656e7360901b6044820152606401610452565b80602001516001600160a01b031681600001516001600160a01b0316036106635760405162461bcd60e51b815260206004820152601660248201527539b931903a37b5b2b7101e9e903239ba103a37b5b2b760511b6044820152606401610452565b3330146106b657336001600160a01b038316146106b65760405162461bcd60e51b815260206004820152601160248201527031b0b63632b910109e9039bbb0b83832b960791b6044820152606401610452565b80516001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed190161072a57806040015134146107255760405162461bcd60e51b81526020600482015260136024820152721b5cd9cb9d985b1d5948084f48185b5bdd5b9d606a1b6044820152606401610452565b610851565b34156107695760405162461bcd60e51b815260206004820152600e60248201526d06d73672e76616c756520213d20360941b6044820152606401610452565b80516040516370a0823160e01b81526001600160a01b038481166004830152909116906370a0823190602401602060405180830381865afa1580156107b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d69190611874565b816040015111156108205760405162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b6044820152606401610452565b6108338160000151838360400151611062565b8051600054604083015161085192916001600160a01b031690611077565b600061085c82611170565b905060006127106002548361087191906118a3565b61087b91906118ba565b905073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b031683602001516001600160a01b031603610932576001546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156108e8573d6000803e3d6000fd5b506108f381836118dc565b6040519092506001600160a01b0385169083156108fc029084906000818181858888f1935050505015801561092c573d6000803e3d6000fd5b50610969565b602083015160015461094e91906001600160a01b031683611262565b61095881836118dc565b915061096983602001518584611262565b6020808401518451604080870151815190815293840186905283018490526001600160a01b0391821692908216918716907fc9163c3bdf7263acf1bb3d24072cc7da025f7181c31e2edc7e1673edf5e0ca329060600160405180910390a45050506109f360017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b505050565b610a00610c5e565b60028190556040518181527f382455f3b749abde7721258dcfa10a22f30d4a28c69151a002dcbd8d1462e4f2906020015b60405180910390a150565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff16600081158015610a825750825b905060008267ffffffffffffffff166001148015610a9f5750303b155b905081158015610aad575080155b15610acb5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610af557845460ff60401b1916600160401b1785555b610afe3361129c565b610b066112ad565b610b0e6112bd565b610b166112cd565b6032600255600180546001600160a01b0319166001600160a01b0388161790558315610b7c57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b610b8c610c5e565b6001600160a01b038116610bb657604051631e4fbdf760e01b815260006004820152602401610452565b610bbf81610ec6565b50565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03831601610bf0575047919050565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610c34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c589190611874565b92915050565b33610c907f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146103c45760405163118cdaa760e01b8152336004820152602401610452565b610cc16112d5565b6000805160206119d0833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b039091168152602001610a31565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610d9a57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610d8e6000805160206119b0833981519152546001600160a01b031690565b6001600160a01b031614155b156103c45760405163703e46dd60e11b815260040160405180910390fd5b610bbf610c5e565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610e1a575060408051601f3d908101601f19168201909252610e1791810190611874565b60015b610e4257604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610452565b6000805160206119b08339815191528114610e7357604051632a87526960e21b815260048101829052602401610452565b6109f38383611305565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103c45760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b610f3f610f80565b6000805160206119d0833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833610cfb565b6000805160206119d08339815191525460ff16156103c45760405163d93c066560e01b815260040160405180910390fd5b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00805460011901610ff557604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b604080516080810182526000808252602082018190529181018290526060808201529080808061102d878701886118ef565b604080516080810182526001600160a01b03958616815294909316602085015291830152606082015294505050505092915050565b6109f36001600160a01b03841683308461135b565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e90604401602060405180830381865afa1580156110c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110eb9190611874565b90508181101561116a5760405163095ea7b360e01b81526001600160a01b0384811660048301526024820184905285169063095ea7b3906044016020604051808303816000875af1158015611144573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611168919061195b565b505b50505050565b6000806111808360200151610bc2565b60008054606086015160405193945091926001600160a01b039091169134916111a9919061197d565b60006040518083038185875af1925050503d80600081146111e6576040519150601f19603f3d011682016040523d82523d6000602084013e6111eb565b606091505b505090508061122a5760405162461bcd60e51b815260206004820152600b60248201526a1cddd85c0819985a5b195960aa1b6044820152606401610452565b60006112398560200151610bc2565b9050600061124784836118dc565b90508060000361125957611259611999565b95945050505050565b6109f36001600160a01b03841683836113c2565b60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b6112a46113f3565b610bbf8161143c565b6112b56113f3565b6103c4611444565b6112c56113f3565b6103c4611465565b6103c46113f3565b6000805160206119d08339815191525460ff166103c457604051638dfc202b60e01b815260040160405180910390fd5b61130e8261146d565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115611353576109f382826114d2565b6103e161153f565b6040516001600160a01b03848116602483015283811660448301526064820183905261116a9186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061155e565b6040516001600160a01b038381166024830152604482018390526109f391859182169063a9059cbb90606401611390565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166103c457604051631afcd79f60e31b815260040160405180910390fd5b610b8c6113f3565b61144c6113f3565b6000805160206119d0833981519152805460ff19169055565b6112766113f3565b806001600160a01b03163b6000036114a357604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610452565b6000805160206119b083398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516114ef919061197d565b600060405180830381855af49150503d806000811461152a576040519150601f19603f3d011682016040523d82523d6000602084013e61152f565b606091505b50915091506112598583836115cf565b34156103c45760405163b398979f60e01b815260040160405180910390fd5b600080602060008451602086016000885af180611581576040513d6000823e3d81fd5b50506000513d915081156115995780600114156115a6565b6001600160a01b0384163b155b1561116a57604051635274afe760e01b81526001600160a01b0385166004820152602401610452565b6060826115e4576115df8261162e565b611627565b81511580156115fb57506001600160a01b0384163b155b1561162457604051639996b31560e01b81526001600160a01b0385166004820152602401610452565b50805b9392505050565b80511561163e5780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b6001600160a01b0381168114610bbf57600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f83011261169357600080fd5b813567ffffffffffffffff8111156116ad576116ad61166c565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156116dc576116dc61166c565b6040528181528382016020018510156116f457600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561172457600080fd5b823561172f81611657565b9150602083013567ffffffffffffffff81111561174b57600080fd5b61175785828601611682565b9150509250929050565b60006020828403121561177357600080fd5b813561162781611657565b60005b83811015611799578181015183820152602001611781565b50506000910152565b60208152600082518060208401526117c181604085016020870161177e565b601f01601f19169190910160400192915050565b6000806000604084860312156117ea57600080fd5b833567ffffffffffffffff81111561180157600080fd5b8401601f8101861361181257600080fd5b803567ffffffffffffffff81111561182957600080fd5b86602082840101111561183b57600080fd5b60209182019450925084013561185081611657565b809150509250925092565b60006020828403121561186d57600080fd5b5035919050565b60006020828403121561188657600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610c5857610c5861188d565b6000826118d757634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610c5857610c5861188d565b6000806000806080858703121561190557600080fd5b843561191081611657565b9350602085013561192081611657565b925060408501359150606085013567ffffffffffffffff81111561194357600080fd5b61194f87828801611682565b91505092959194509250565b60006020828403121561196d57600080fd5b8151801515811461162757600080fd5b6000825161198f81846020870161177e565b9190910192915050565b634e487b7160e01b600052600160045260246000fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbccd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a26469706673582212205eb61123e45b365ff0e02020a54c7491475f5cca535e4a073fefa58ad4137aad64736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x1A25 PUSH2 0x3D PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xD1E ADD MSTORE DUP2 DUP2 PUSH2 0xD47 ADD MSTORE PUSH2 0xE88 ADD MSTORE PUSH2 0x1A25 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x118 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xAE0CAEB3 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xAE0CAEB3 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xBF16F65A EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xA4AC0D49 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x540907BB EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x5DC0B769 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x380FD03 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x31F7D964 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x11F JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x144 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x3B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0x3C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x158 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x1F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x402 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x158 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x144 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x47D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x51D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x52F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x144 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x17A2 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x17D5 JUMP JUMPDEST PUSH2 0x53F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x34F CALLDATASIZE PUSH1 0x4 PUSH2 0x185B JUMP JUMPDEST PUSH2 0x9F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x36F CALLDATASIZE PUSH1 0x4 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0xA3C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0xB84 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0xC5E JUMP JUMPDEST PUSH2 0x3C4 PUSH2 0xCB9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3CE PUSH2 0xD13 JUMP JUMPDEST PUSH2 0x3D7 DUP3 PUSH2 0xDB8 JUMP JUMPDEST PUSH2 0x3E1 DUP3 DUP3 PUSH2 0xDC0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EF PUSH2 0xE7D JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19B0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x40A PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x45B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x7A65726F206164647265737320706172616D73 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x485 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642061646D696E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x452 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x44D6D25963F097AD14F29F06854A01F575648A1EF82F30E562CCD3889717E339 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x525 PUSH2 0xC5E JUMP JUMPDEST PUSH2 0x3C4 PUSH1 0x0 PUSH2 0xEC6 JUMP JUMPDEST PUSH2 0x537 PUSH2 0xC5E JUMP JUMPDEST PUSH2 0x3C4 PUSH2 0xF37 JUMP JUMPDEST PUSH2 0x547 PUSH2 0xF80 JUMP JUMPDEST PUSH2 0x54F PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55B DUP5 DUP5 PUSH2 0xFFB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0x0 SUB PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x616D6F756E74203D3D203 PUSH1 0xAC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x452 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x5C4 JUMPI POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST PUSH2 0x601 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x696E76616C696420746F6B656E73 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x452 JUMP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x663 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x39B931903A37B5B2B7101E9E903239BA103A37B5B2B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x452 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x6B6 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0x6B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x31B0B63632B910109E9039BBB0B83832B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x452 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEED NOT ADD PUSH2 0x72A JUMPI DUP1 PUSH1 0x40 ADD MLOAD CALLVALUE EQ PUSH2 0x725 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1B5CD9CB9D985B1D5948084F48185B5BDD5B9D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x452 JUMP JUMPDEST PUSH2 0x851 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x769 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x6D73672E76616C756520213D203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x452 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7D6 SWAP2 SWAP1 PUSH2 0x1874 JUMP JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD GT ISZERO PUSH2 0x820 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x696E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x452 JUMP JUMPDEST PUSH2 0x833 DUP2 PUSH1 0x0 ADD MLOAD DUP4 DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x1062 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x851 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x1077 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x85C DUP3 PUSH2 0x1170 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 PUSH1 0x2 SLOAD DUP4 PUSH2 0x871 SWAP2 SWAP1 PUSH2 0x18A3 JUMP JUMPDEST PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x18BA JUMP JUMPDEST SWAP1 POP PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x932 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x8F3 DUP2 DUP4 PUSH2 0x18DC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x92C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x969 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 SLOAD PUSH2 0x94E SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x1262 JUMP JUMPDEST PUSH2 0x958 DUP2 DUP4 PUSH2 0x18DC JUMP JUMPDEST SWAP2 POP PUSH2 0x969 DUP4 PUSH1 0x20 ADD MLOAD DUP6 DUP5 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP5 ADD MLOAD DUP5 MLOAD PUSH1 0x40 DUP1 DUP8 ADD MLOAD DUP2 MLOAD SWAP1 DUP2 MSTORE SWAP4 DUP5 ADD DUP7 SWAP1 MSTORE DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP1 DUP3 AND SWAP2 DUP8 AND SWAP1 PUSH32 0xC9163C3BDF7263ACF1BB3D24072CC7DA025F7181C31E2EDC7E1673EDF5E0CA32 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP PUSH2 0x9F3 PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA00 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x382455F3B749ABDE7721258DCFA10A22F30D4A28C69151A002DCBD8D1462E4F2 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xA82 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xA9F JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xAAD JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xACB JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xAF5 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0xAFE CALLER PUSH2 0x129C JUMP JUMPDEST PUSH2 0xB06 PUSH2 0x12AD JUMP JUMPDEST PUSH2 0xB0E PUSH2 0x12BD JUMP JUMPDEST PUSH2 0xB16 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x32 PUSH1 0x2 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0xB7C JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB8C PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBB6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x452 JUMP JUMPDEST PUSH2 0xBBF DUP2 PUSH2 0xEC6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEED NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADD PUSH2 0xBF0 JUMPI POP SELFBALANCE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC34 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC58 SWAP2 SWAP1 PUSH2 0x1874 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH2 0xC90 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x452 JUMP JUMPDEST PUSH2 0xCC1 PUSH2 0x12D5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA31 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0xD9A JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD8E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19B0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBBF PUSH2 0xC5E JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xE1A JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xE17 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1874 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE42 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x452 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19B0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0xE73 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x452 JUMP JUMPDEST PUSH2 0x9F3 DUP4 DUP4 PUSH2 0x1305 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xF3F PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 DUP1 SLOAD PUSH1 0x1 NOT ADD PUSH2 0xFF5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE SWAP1 DUP1 DUP1 DUP1 PUSH2 0x102D DUP8 DUP8 ADD DUP9 PUSH2 0x18EF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9F3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 ADDRESS DUP5 PUSH2 0x135B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP6 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10EB SWAP2 SWAP1 PUSH2 0x1874 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x116A JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP6 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1144 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1168 SWAP2 SWAP1 PUSH2 0x195B JUMP JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1180 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP5 POP SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 CALLVALUE SWAP2 PUSH2 0x11A9 SWAP2 SWAP1 PUSH2 0x197D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11E6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11EB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x122A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x1CDDD85C0819985A5B1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x452 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1239 DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0xBC2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1247 DUP5 DUP4 PUSH2 0x18DC JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x1259 JUMPI PUSH2 0x1259 PUSH2 0x1999 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9F3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 DUP4 PUSH2 0x13C2 JUMP JUMPDEST PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST PUSH2 0x12A4 PUSH2 0x13F3 JUMP JUMPDEST PUSH2 0xBBF DUP2 PUSH2 0x143C JUMP JUMPDEST PUSH2 0x12B5 PUSH2 0x13F3 JUMP JUMPDEST PUSH2 0x3C4 PUSH2 0x1444 JUMP JUMPDEST PUSH2 0x12C5 PUSH2 0x13F3 JUMP JUMPDEST PUSH2 0x3C4 PUSH2 0x1465 JUMP JUMPDEST PUSH2 0x3C4 PUSH2 0x13F3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x130E DUP3 PUSH2 0x146D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1353 JUMPI PUSH2 0x9F3 DUP3 DUP3 PUSH2 0x14D2 JUMP JUMPDEST PUSH2 0x3E1 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x116A SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x155E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x9F3 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD PUSH2 0x1390 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB8C PUSH2 0x13F3 JUMP JUMPDEST PUSH2 0x144C PUSH2 0x13F3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1276 PUSH2 0x13F3 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0x14A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x452 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19B0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x14EF SWAP2 SWAP1 PUSH2 0x197D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x152A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x152F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1259 DUP6 DUP4 DUP4 PUSH2 0x15CF JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x1581 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH1 0x0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x1599 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x15A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x116A JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x452 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x15E4 JUMPI PUSH2 0x15DF DUP3 PUSH2 0x162E JUMP JUMPDEST PUSH2 0x1627 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x15FB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1624 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x452 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x163E JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16AD JUMPI PUSH2 0x16AD PUSH2 0x166C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x16DC JUMPI PUSH2 0x16DC PUSH2 0x166C JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x16F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1724 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x172F DUP2 PUSH2 0x1657 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x174B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1757 DUP6 DUP3 DUP7 ADD PUSH2 0x1682 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1773 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1627 DUP2 PUSH2 0x1657 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1799 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1781 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x17C1 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x177E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x1812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1829 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x183B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 DUP3 ADD SWAP5 POP SWAP3 POP DUP5 ADD CALLDATALOAD PUSH2 0x1850 DUP2 PUSH2 0x1657 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x186D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1886 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xC58 JUMPI PUSH2 0xC58 PUSH2 0x188D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x18D7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xC58 JUMPI PUSH2 0xC58 PUSH2 0x188D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1910 DUP2 PUSH2 0x1657 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x1920 DUP2 PUSH2 0x1657 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1943 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x194F DUP8 DUP3 DUP9 ADD PUSH2 0x1682 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x196D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x198F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x177E JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCCD5ED15C6E187E77E9AEE8 DUP2 DUP5 0xC2 0x1F 0x4F 0x21 DUP3 0xAB PC 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F03300A26469706673582212205EB61123E45B365FF0E02020A5 0x4C PUSH21 0x91475F5CCA535E4A073FEFA58AD4137AAD64736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "636:5753:19:-:0;;;1171:4:2;1128:48;;636:5753:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@NATIVE_TOKEN_2350": {
									"entryPoint": null,
									"id": 2350,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADE_INTERFACE_VERSION_472": {
									"entryPoint": null,
									"id": 472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2437": {
									"entryPoint": null,
									"id": 2437,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 4764,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 5180,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Pausable_init_728": {
									"entryPoint": 4781,
									"id": 728,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_unchained_746": {
									"entryPoint": 5188,
									"id": 746,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_892": {
									"entryPoint": 4797,
									"id": 892,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_unchained_910": {
									"entryPoint": 5221,
									"id": 910,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_502": {
									"entryPoint": 4813,
									"id": 502,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_2855": {
									"entryPoint": 4215,
									"id": 2855,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_2433": {
									"entryPoint": 3512,
									"id": 2433,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1853": {
									"entryPoint": 5470,
									"id": 1853,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 5107,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1395": {
									"entryPoint": 5439,
									"id": 1395,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_578": {
									"entryPoint": 3709,
									"id": 578,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 3166,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_562": {
									"entryPoint": 3347,
									"id": 562,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_decode_2766": {
									"entryPoint": 4091,
									"id": 2766,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_getInitializableStorage_447": {
									"entryPoint": null,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": null,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getPausableStorage_702": {
									"entryPoint": null,
									"id": 702,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getReentrancyGuardStorage_880": {
									"entryPoint": null,
									"id": 880,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": null,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_658": {
									"entryPoint": null,
									"id": 658,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_962": {
									"entryPoint": 4726,
									"id": 962,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_946": {
									"entryPoint": 4017,
									"id": 946,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_827": {
									"entryPoint": 3895,
									"id": 827,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_790": {
									"entryPoint": 3968,
									"id": 790,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_803": {
									"entryPoint": 4821,
									"id": 803,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_2153": {
									"entryPoint": 5678,
									"id": 2153,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_1175": {
									"entryPoint": 5229,
									"id": 1175,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_swap_2819": {
									"entryPoint": 4464,
									"id": 2819,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_transferFrom_2895": {
									"entryPoint": 4194,
									"id": 2895,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 3782,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_2873": {
									"entryPoint": 4706,
									"id": 2873,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_851": {
									"entryPoint": 3257,
									"id": 851,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_629": {
									"entryPoint": 3520,
									"id": 629,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addAdmin_2706": {
									"entryPoint": 1149,
									"id": 2706,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionDelegateCall_2071": {
									"entryPoint": 5330,
									"id": 2071,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_2211": {
									"entryPoint": null,
									"id": 2211,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBalance_2680": {
									"entryPoint": 3010,
									"id": 2680,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_1148": {
									"entryPoint": null,
									"id": 1148,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_2424": {
									"entryPoint": 2620,
									"id": 2424,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@newExchange_2352": {
									"entryPoint": null,
									"id": 2352,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_105": {
									"entryPoint": null,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_2904": {
									"entryPoint": 1327,
									"id": 2904,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_778": {
									"entryPoint": null,
									"id": 778,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_520": {
									"entryPoint": 997,
									"id": 520,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 1309,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_1558": {
									"entryPoint": 4955,
									"id": 1558,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_1531": {
									"entryPoint": 5058,
									"id": 1531,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setNewExchange_2728": {
									"entryPoint": 1026,
									"id": 2728,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@swapAdmin_2354": {
									"entryPoint": null,
									"id": 2354,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapFeePercentage_2356": {
									"entryPoint": null,
									"id": 2356,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swap_2635": {
									"entryPoint": 1343,
									"id": 2635,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_164": {
									"entryPoint": 2948,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_2913": {
									"entryPoint": 948,
									"id": 2913,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateSwapFee_2651": {
									"entryPoint": 2552,
									"id": 2651,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upgradeToAndCall_1211": {
									"entryPoint": 4869,
									"id": 1211,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_540": {
									"entryPoint": 966,
									"id": 540,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_2111": {
									"entryPoint": 5583,
									"id": 2111,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 5762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_address_payablet_uint256t_bytes_memory_ptr": {
									"entryPoint": 6383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 5905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_calldata_ptrt_address": {
									"entryPoint": 6101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4aaab178ce62c9aa293f84821bdadc1685de02663fdcdb8a26121ae462ae0e7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_55c2b76370d5d427f52c6d12dc9e48fce27eadb826533977b2f868874e0f017c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_62cac98c7f03b33e8dddfe58c00dd8211de9f9167c478e0f775c21754a69135a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_797f8a7eb79a2e9138e391d6393592c240f4354ba78950ece5fed1af0d3777f6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9287f6fe4436a085162c38b7c9e1f89cec60c0173d9388e22663028de9128448__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ce6c4ea39c501f8c7c12a9194d99cb871ed34c46e9c10eeac69413f219aa96cd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ee78873f086b2b9a8a45bd119503afa5de538f219e8ce800bdc0024dff6b2f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f70c5f7c2b08d32da6024b33d1b4b5ee6bcf0e8e8a5ac32fe66bf794c4d8e476__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6014,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x01": {
									"entryPoint": 6553,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 6285,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5740,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 5719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11542:20",
										"nodeType": "YulBlock",
										"src": "0:11542:20",
										"statements": [
											{
												"nativeSrc": "6:3:20",
												"nodeType": "YulBlock",
												"src": "6:3:20",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:20",
													"nodeType": "YulBlock",
													"src": "115:102:20",
													"statements": [
														{
															"nativeSrc": "125:26:20",
															"nodeType": "YulAssignment",
															"src": "125:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:20",
																		"nodeType": "YulLiteral",
																		"src": "148:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:20"
																},
																"nativeSrc": "133:18:20",
																"nodeType": "YulFunctionCall",
																"src": "133:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:20",
																								"nodeType": "YulLiteral",
																								"src": "198:3:20",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:20",
																								"nodeType": "YulLiteral",
																								"src": "203:1:20",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:20"
																						},
																						"nativeSrc": "194:11:20",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:20",
																						"nodeType": "YulLiteral",
																						"src": "207:1:20",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:20"
																				},
																				"nativeSrc": "190:19:20",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:20"
																		},
																		"nativeSrc": "178:32:20",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:20"
																},
																"nativeSrc": "160:51:20",
																"nodeType": "YulFunctionCall",
																"src": "160:51:20"
															},
															"nativeSrc": "160:51:20",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:20",
														"nodeType": "YulTypedName",
														"src": "84:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:20",
														"nodeType": "YulTypedName",
														"src": "95:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:20",
														"nodeType": "YulTypedName",
														"src": "106:4:20",
														"type": ""
													}
												],
												"src": "14:203:20"
											},
											{
												"body": {
													"nativeSrc": "267:86:20",
													"nodeType": "YulBlock",
													"src": "267:86:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "331:16:20",
																"nodeType": "YulBlock",
																"src": "331:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "340:1:20",
																					"nodeType": "YulLiteral",
																					"src": "340:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:1:20",
																					"nodeType": "YulLiteral",
																					"src": "343:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "333:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "333:6:20"
																			},
																			"nativeSrc": "333:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "333:12:20"
																		},
																		"nativeSrc": "333:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "333:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "290:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "290:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "301:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "301:5:20"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "316:3:20",
																										"nodeType": "YulLiteral",
																										"src": "316:3:20",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "321:1:20",
																										"nodeType": "YulLiteral",
																										"src": "321:1:20",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "312:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "312:3:20"
																								},
																								"nativeSrc": "312:11:20",
																								"nodeType": "YulFunctionCall",
																								"src": "312:11:20"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "325:1:20",
																								"nodeType": "YulLiteral",
																								"src": "325:1:20",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "308:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "308:3:20"
																						},
																						"nativeSrc": "308:19:20",
																						"nodeType": "YulFunctionCall",
																						"src": "308:19:20"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "297:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "297:3:20"
																				},
																				"nativeSrc": "297:31:20",
																				"nodeType": "YulFunctionCall",
																				"src": "297:31:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "287:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "287:2:20"
																		},
																		"nativeSrc": "287:42:20",
																		"nodeType": "YulFunctionCall",
																		"src": "287:42:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "280:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "280:6:20"
																},
																"nativeSrc": "280:50:20",
																"nodeType": "YulFunctionCall",
																"src": "280:50:20"
															},
															"nativeSrc": "277:70:20",
															"nodeType": "YulIf",
															"src": "277:70:20"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "222:131:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "256:5:20",
														"nodeType": "YulTypedName",
														"src": "256:5:20",
														"type": ""
													}
												],
												"src": "222:131:20"
											},
											{
												"body": {
													"nativeSrc": "390:95:20",
													"nodeType": "YulBlock",
													"src": "390:95:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "407:1:20",
																		"nodeType": "YulLiteral",
																		"src": "407:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "414:3:20",
																				"nodeType": "YulLiteral",
																				"src": "414:3:20",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "419:10:20",
																				"nodeType": "YulLiteral",
																				"src": "419:10:20",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "410:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "410:3:20"
																		},
																		"nativeSrc": "410:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "410:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "400:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:20"
																},
																"nativeSrc": "400:31:20",
																"nodeType": "YulFunctionCall",
																"src": "400:31:20"
															},
															"nativeSrc": "400:31:20",
															"nodeType": "YulExpressionStatement",
															"src": "400:31:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "447:1:20",
																		"nodeType": "YulLiteral",
																		"src": "447:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "450:4:20",
																		"nodeType": "YulLiteral",
																		"src": "450:4:20",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "440:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "440:6:20"
																},
																"nativeSrc": "440:15:20",
																"nodeType": "YulFunctionCall",
																"src": "440:15:20"
															},
															"nativeSrc": "440:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "440:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "471:1:20",
																		"nodeType": "YulLiteral",
																		"src": "471:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "474:4:20",
																		"nodeType": "YulLiteral",
																		"src": "474:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "464:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "464:6:20"
																},
																"nativeSrc": "464:15:20",
																"nodeType": "YulFunctionCall",
																"src": "464:15:20"
															},
															"nativeSrc": "464:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "464:15:20"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "358:127:20",
												"nodeType": "YulFunctionDefinition",
												"src": "358:127:20"
											},
											{
												"body": {
													"nativeSrc": "542:673:20",
													"nodeType": "YulBlock",
													"src": "542:673:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "591:16:20",
																"nodeType": "YulBlock",
																"src": "591:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:20",
																					"nodeType": "YulLiteral",
																					"src": "600:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "603:1:20",
																					"nodeType": "YulLiteral",
																					"src": "603:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "593:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "593:6:20"
																			},
																			"nativeSrc": "593:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "593:12:20"
																		},
																		"nativeSrc": "593:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "593:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "570:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "570:6:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "578:4:20",
																						"nodeType": "YulLiteral",
																						"src": "578:4:20",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "566:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "566:3:20"
																				},
																				"nativeSrc": "566:17:20",
																				"nodeType": "YulFunctionCall",
																				"src": "566:17:20"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "585:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "585:3:20"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "562:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:20"
																		},
																		"nativeSrc": "562:27:20",
																		"nodeType": "YulFunctionCall",
																		"src": "562:27:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "555:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "555:6:20"
																},
																"nativeSrc": "555:35:20",
																"nodeType": "YulFunctionCall",
																"src": "555:35:20"
															},
															"nativeSrc": "552:55:20",
															"nodeType": "YulIf",
															"src": "552:55:20"
														},
														{
															"nativeSrc": "616:34:20",
															"nodeType": "YulVariableDeclaration",
															"src": "616:34:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "643:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "643:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "630:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "630:12:20"
																},
																"nativeSrc": "630:20:20",
																"nodeType": "YulFunctionCall",
																"src": "630:20:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "620:6:20",
																	"nodeType": "YulTypedName",
																	"src": "620:6:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "693:22:20",
																"nodeType": "YulBlock",
																"src": "693:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "695:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "695:16:20"
																			},
																			"nativeSrc": "695:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "695:18:20"
																		},
																		"nativeSrc": "695:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "695:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "665:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "665:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "673:18:20",
																		"nodeType": "YulLiteral",
																		"src": "673:18:20",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "662:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "662:2:20"
																},
																"nativeSrc": "662:30:20",
																"nodeType": "YulFunctionCall",
																"src": "662:30:20"
															},
															"nativeSrc": "659:56:20",
															"nodeType": "YulIf",
															"src": "659:56:20"
														},
														{
															"nativeSrc": "724:23:20",
															"nodeType": "YulVariableDeclaration",
															"src": "724:23:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:20",
																		"nodeType": "YulLiteral",
																		"src": "744:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "738:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "738:5:20"
																},
																"nativeSrc": "738:9:20",
																"nodeType": "YulFunctionCall",
																"src": "738:9:20"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "728:6:20",
																	"nodeType": "YulTypedName",
																	"src": "728:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "756:85:20",
															"nodeType": "YulVariableDeclaration",
															"src": "756:85:20",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "778:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "778:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "802:6:20",
																										"nodeType": "YulIdentifier",
																										"src": "802:6:20"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "810:4:20",
																										"nodeType": "YulLiteral",
																										"src": "810:4:20",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "798:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "798:3:20"
																								},
																								"nativeSrc": "798:17:20",
																								"nodeType": "YulFunctionCall",
																								"src": "798:17:20"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "821:2:20",
																										"nodeType": "YulLiteral",
																										"src": "821:2:20",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "817:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "817:3:20"
																								},
																								"nativeSrc": "817:7:20",
																								"nodeType": "YulFunctionCall",
																								"src": "817:7:20"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "794:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "794:3:20"
																						},
																						"nativeSrc": "794:31:20",
																						"nodeType": "YulFunctionCall",
																						"src": "794:31:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "827:2:20",
																						"nodeType": "YulLiteral",
																						"src": "827:2:20",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "790:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "790:3:20"
																				},
																				"nativeSrc": "790:40:20",
																				"nodeType": "YulFunctionCall",
																				"src": "790:40:20"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "836:2:20",
																						"nodeType": "YulLiteral",
																						"src": "836:2:20",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "832:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "832:3:20"
																				},
																				"nativeSrc": "832:7:20",
																				"nodeType": "YulFunctionCall",
																				"src": "832:7:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "786:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "786:3:20"
																		},
																		"nativeSrc": "786:54:20",
																		"nodeType": "YulFunctionCall",
																		"src": "786:54:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "774:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "774:3:20"
																},
																"nativeSrc": "774:67:20",
																"nodeType": "YulFunctionCall",
																"src": "774:67:20"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "760:10:20",
																	"nodeType": "YulTypedName",
																	"src": "760:10:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "916:22:20",
																"nodeType": "YulBlock",
																"src": "916:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "918:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "918:16:20"
																			},
																			"nativeSrc": "918:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "918:18:20"
																		},
																		"nativeSrc": "918:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "918:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "859:10:20",
																				"nodeType": "YulIdentifier",
																				"src": "859:10:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "871:18:20",
																				"nodeType": "YulLiteral",
																				"src": "871:18:20",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "856:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "856:2:20"
																		},
																		"nativeSrc": "856:34:20",
																		"nodeType": "YulFunctionCall",
																		"src": "856:34:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "895:10:20",
																				"nodeType": "YulIdentifier",
																				"src": "895:10:20"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "907:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "907:6:20"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "892:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "892:2:20"
																		},
																		"nativeSrc": "892:22:20",
																		"nodeType": "YulFunctionCall",
																		"src": "892:22:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "853:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "853:2:20"
																},
																"nativeSrc": "853:62:20",
																"nodeType": "YulFunctionCall",
																"src": "853:62:20"
															},
															"nativeSrc": "850:88:20",
															"nodeType": "YulIf",
															"src": "850:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "954:2:20",
																		"nodeType": "YulLiteral",
																		"src": "954:2:20",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "958:10:20",
																		"nodeType": "YulIdentifier",
																		"src": "958:10:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "947:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "947:6:20"
																},
																"nativeSrc": "947:22:20",
																"nodeType": "YulFunctionCall",
																"src": "947:22:20"
															},
															"nativeSrc": "947:22:20",
															"nodeType": "YulExpressionStatement",
															"src": "947:22:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "985:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "985:6:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "993:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "993:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "978:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "978:6:20"
																},
																"nativeSrc": "978:22:20",
																"nodeType": "YulFunctionCall",
																"src": "978:22:20"
															},
															"nativeSrc": "978:22:20",
															"nodeType": "YulExpressionStatement",
															"src": "978:22:20"
														},
														{
															"body": {
																"nativeSrc": "1052:16:20",
																"nodeType": "YulBlock",
																"src": "1052:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1061:1:20",
																					"nodeType": "YulLiteral",
																					"src": "1061:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1064:1:20",
																					"nodeType": "YulLiteral",
																					"src": "1064:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1054:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "1054:6:20"
																			},
																			"nativeSrc": "1054:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "1054:12:20"
																		},
																		"nativeSrc": "1054:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "1054:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "1023:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "1023:6:20"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1031:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "1031:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1019:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "1019:3:20"
																				},
																				"nativeSrc": "1019:19:20",
																				"nodeType": "YulFunctionCall",
																				"src": "1019:19:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1040:4:20",
																				"nodeType": "YulLiteral",
																				"src": "1040:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1015:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1015:3:20"
																		},
																		"nativeSrc": "1015:30:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1015:30:20"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "1047:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "1047:3:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1012:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "1012:2:20"
																},
																"nativeSrc": "1012:39:20",
																"nodeType": "YulFunctionCall",
																"src": "1012:39:20"
															},
															"nativeSrc": "1009:59:20",
															"nodeType": "YulIf",
															"src": "1009:59:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1094:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "1094:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1102:4:20",
																				"nodeType": "YulLiteral",
																				"src": "1102:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1090:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1090:3:20"
																		},
																		"nativeSrc": "1090:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1090:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "1113:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "1113:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1121:4:20",
																				"nodeType": "YulLiteral",
																				"src": "1121:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1109:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1109:3:20"
																		},
																		"nativeSrc": "1109:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1109:17:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1128:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "1128:6:20"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1077:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "1077:12:20"
																},
																"nativeSrc": "1077:58:20",
																"nodeType": "YulFunctionCall",
																"src": "1077:58:20"
															},
															"nativeSrc": "1077:58:20",
															"nodeType": "YulExpressionStatement",
															"src": "1077:58:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "1159:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "1159:6:20"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1167:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "1167:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1155:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "1155:3:20"
																				},
																				"nativeSrc": "1155:19:20",
																				"nodeType": "YulFunctionCall",
																				"src": "1155:19:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1176:4:20",
																				"nodeType": "YulLiteral",
																				"src": "1176:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1151:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1151:3:20"
																		},
																		"nativeSrc": "1151:30:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1151:30:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1183:1:20",
																		"nodeType": "YulLiteral",
																		"src": "1183:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:20"
																},
																"nativeSrc": "1144:41:20",
																"nodeType": "YulFunctionCall",
																"src": "1144:41:20"
															},
															"nativeSrc": "1144:41:20",
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:20"
														},
														{
															"nativeSrc": "1194:15:20",
															"nodeType": "YulAssignment",
															"src": "1194:15:20",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1203:6:20",
																"nodeType": "YulIdentifier",
																"src": "1203:6:20"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1194:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nativeSrc": "490:725:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "516:6:20",
														"nodeType": "YulTypedName",
														"src": "516:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "524:3:20",
														"nodeType": "YulTypedName",
														"src": "524:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "532:5:20",
														"nodeType": "YulTypedName",
														"src": "532:5:20",
														"type": ""
													}
												],
												"src": "490:725:20"
											},
											{
												"body": {
													"nativeSrc": "1316:359:20",
													"nodeType": "YulBlock",
													"src": "1316:359:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "1362:16:20",
																"nodeType": "YulBlock",
																"src": "1362:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1371:1:20",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1374:1:20",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1364:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:20"
																			},
																			"nativeSrc": "1364:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:20"
																		},
																		"nativeSrc": "1364:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1337:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1333:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:20"
																		},
																		"nativeSrc": "1333:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1358:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1329:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:20"
																},
																"nativeSrc": "1329:32:20",
																"nodeType": "YulFunctionCall",
																"src": "1329:32:20"
															},
															"nativeSrc": "1326:52:20",
															"nodeType": "YulIf",
															"src": "1326:52:20"
														},
														{
															"nativeSrc": "1387:36:20",
															"nodeType": "YulVariableDeclaration",
															"src": "1387:36:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1413:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "1413:9:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1400:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "1400:12:20"
																},
																"nativeSrc": "1400:23:20",
																"nodeType": "YulFunctionCall",
																"src": "1400:23:20"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1391:5:20",
																	"nodeType": "YulTypedName",
																	"src": "1391:5:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1457:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "1457:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1432:24:20",
																	"nodeType": "YulIdentifier",
																	"src": "1432:24:20"
																},
																"nativeSrc": "1432:31:20",
																"nodeType": "YulFunctionCall",
																"src": "1432:31:20"
															},
															"nativeSrc": "1432:31:20",
															"nodeType": "YulExpressionStatement",
															"src": "1432:31:20"
														},
														{
															"nativeSrc": "1472:15:20",
															"nodeType": "YulAssignment",
															"src": "1472:15:20",
															"value": {
																"name": "value",
																"nativeSrc": "1482:5:20",
																"nodeType": "YulIdentifier",
																"src": "1482:5:20"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1472:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1472:6:20"
																}
															]
														},
														{
															"nativeSrc": "1496:46:20",
															"nodeType": "YulVariableDeclaration",
															"src": "1496:46:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1527:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:2:20",
																				"nodeType": "YulLiteral",
																				"src": "1538:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:20"
																		},
																		"nativeSrc": "1523:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:18:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1510:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "1510:12:20"
																},
																"nativeSrc": "1510:32:20",
																"nodeType": "YulFunctionCall",
																"src": "1510:32:20"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1500:6:20",
																	"nodeType": "YulTypedName",
																	"src": "1500:6:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1585:16:20",
																"nodeType": "YulBlock",
																"src": "1585:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1594:1:20",
																					"nodeType": "YulLiteral",
																					"src": "1594:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1597:1:20",
																					"nodeType": "YulLiteral",
																					"src": "1597:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1587:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "1587:6:20"
																			},
																			"nativeSrc": "1587:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "1587:12:20"
																		},
																		"nativeSrc": "1587:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "1587:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1557:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "1557:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1565:18:20",
																		"nodeType": "YulLiteral",
																		"src": "1565:18:20",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1554:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "1554:2:20"
																},
																"nativeSrc": "1554:30:20",
																"nodeType": "YulFunctionCall",
																"src": "1554:30:20"
															},
															"nativeSrc": "1551:50:20",
															"nodeType": "YulIf",
															"src": "1551:50:20"
														},
														{
															"nativeSrc": "1610:59:20",
															"nodeType": "YulAssignment",
															"src": "1610:59:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1641:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "1641:9:20"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1652:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "1652:6:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1637:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1637:3:20"
																		},
																		"nativeSrc": "1637:22:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1637:22:20"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1661:7:20",
																		"nodeType": "YulIdentifier",
																		"src": "1661:7:20"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nativeSrc": "1620:16:20",
																	"nodeType": "YulIdentifier",
																	"src": "1620:16:20"
																},
																"nativeSrc": "1620:49:20",
																"nodeType": "YulFunctionCall",
																"src": "1620:49:20"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1610:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1610:6:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "1220:455:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1274:9:20",
														"nodeType": "YulTypedName",
														"src": "1274:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1285:7:20",
														"nodeType": "YulTypedName",
														"src": "1285:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1297:6:20",
														"nodeType": "YulTypedName",
														"src": "1297:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1305:6:20",
														"nodeType": "YulTypedName",
														"src": "1305:6:20",
														"type": ""
													}
												],
												"src": "1220:455:20"
											},
											{
												"body": {
													"nativeSrc": "1781:76:20",
													"nodeType": "YulBlock",
													"src": "1781:76:20",
													"statements": [
														{
															"nativeSrc": "1791:26:20",
															"nodeType": "YulAssignment",
															"src": "1791:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1803:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "1803:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1814:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1814:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1799:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1799:3:20"
																},
																"nativeSrc": "1799:18:20",
																"nodeType": "YulFunctionCall",
																"src": "1799:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1791:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "1791:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1833:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "1833:9:20"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1844:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "1844:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1826:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1826:6:20"
																},
																"nativeSrc": "1826:25:20",
																"nodeType": "YulFunctionCall",
																"src": "1826:25:20"
															},
															"nativeSrc": "1826:25:20",
															"nodeType": "YulExpressionStatement",
															"src": "1826:25:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "1680:177:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1750:9:20",
														"nodeType": "YulTypedName",
														"src": "1750:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1761:6:20",
														"nodeType": "YulTypedName",
														"src": "1761:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1772:4:20",
														"nodeType": "YulTypedName",
														"src": "1772:4:20",
														"type": ""
													}
												],
												"src": "1680:177:20"
											},
											{
												"body": {
													"nativeSrc": "1932:177:20",
													"nodeType": "YulBlock",
													"src": "1932:177:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "1978:16:20",
																"nodeType": "YulBlock",
																"src": "1978:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1987:1:20",
																					"nodeType": "YulLiteral",
																					"src": "1987:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1990:1:20",
																					"nodeType": "YulLiteral",
																					"src": "1990:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1980:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "1980:6:20"
																			},
																			"nativeSrc": "1980:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "1980:12:20"
																		},
																		"nativeSrc": "1980:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "1980:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1953:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "1953:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1962:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "1962:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1949:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1949:3:20"
																		},
																		"nativeSrc": "1949:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1949:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1974:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1945:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:20"
																},
																"nativeSrc": "1945:32:20",
																"nodeType": "YulFunctionCall",
																"src": "1945:32:20"
															},
															"nativeSrc": "1942:52:20",
															"nodeType": "YulIf",
															"src": "1942:52:20"
														},
														{
															"nativeSrc": "2003:36:20",
															"nodeType": "YulVariableDeclaration",
															"src": "2003:36:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2029:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "2029:9:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2016:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "2016:12:20"
																},
																"nativeSrc": "2016:23:20",
																"nodeType": "YulFunctionCall",
																"src": "2016:23:20"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2007:5:20",
																	"nodeType": "YulTypedName",
																	"src": "2007:5:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2073:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "2073:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2048:24:20",
																	"nodeType": "YulIdentifier",
																	"src": "2048:24:20"
																},
																"nativeSrc": "2048:31:20",
																"nodeType": "YulFunctionCall",
																"src": "2048:31:20"
															},
															"nativeSrc": "2048:31:20",
															"nodeType": "YulExpressionStatement",
															"src": "2048:31:20"
														},
														{
															"nativeSrc": "2088:15:20",
															"nodeType": "YulAssignment",
															"src": "2088:15:20",
															"value": {
																"name": "value",
																"nativeSrc": "2098:5:20",
																"nodeType": "YulIdentifier",
																"src": "2098:5:20"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2088:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2088:6:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1862:247:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1898:9:20",
														"nodeType": "YulTypedName",
														"src": "1898:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1909:7:20",
														"nodeType": "YulTypedName",
														"src": "1909:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1921:6:20",
														"nodeType": "YulTypedName",
														"src": "1921:6:20",
														"type": ""
													}
												],
												"src": "1862:247:20"
											},
											{
												"body": {
													"nativeSrc": "2209:92:20",
													"nodeType": "YulBlock",
													"src": "2209:92:20",
													"statements": [
														{
															"nativeSrc": "2219:26:20",
															"nodeType": "YulAssignment",
															"src": "2219:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2231:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "2231:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2242:2:20",
																		"nodeType": "YulLiteral",
																		"src": "2242:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2227:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2227:3:20"
																},
																"nativeSrc": "2227:18:20",
																"nodeType": "YulFunctionCall",
																"src": "2227:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2219:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "2219:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2261:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "2261:9:20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "2286:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "2286:6:20"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2279:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "2279:6:20"
																				},
																				"nativeSrc": "2279:14:20",
																				"nodeType": "YulFunctionCall",
																				"src": "2279:14:20"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2272:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "2272:6:20"
																		},
																		"nativeSrc": "2272:22:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2272:22:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2254:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2254:6:20"
																},
																"nativeSrc": "2254:41:20",
																"nodeType": "YulFunctionCall",
																"src": "2254:41:20"
															},
															"nativeSrc": "2254:41:20",
															"nodeType": "YulExpressionStatement",
															"src": "2254:41:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2114:187:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2178:9:20",
														"nodeType": "YulTypedName",
														"src": "2178:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2189:6:20",
														"nodeType": "YulTypedName",
														"src": "2189:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2200:4:20",
														"nodeType": "YulTypedName",
														"src": "2200:4:20",
														"type": ""
													}
												],
												"src": "2114:187:20"
											},
											{
												"body": {
													"nativeSrc": "2407:76:20",
													"nodeType": "YulBlock",
													"src": "2407:76:20",
													"statements": [
														{
															"nativeSrc": "2417:26:20",
															"nodeType": "YulAssignment",
															"src": "2417:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2429:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "2429:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2440:2:20",
																		"nodeType": "YulLiteral",
																		"src": "2440:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2425:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2425:3:20"
																},
																"nativeSrc": "2425:18:20",
																"nodeType": "YulFunctionCall",
																"src": "2425:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2417:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "2417:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2459:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "2459:9:20"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2470:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2470:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2452:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2452:6:20"
																},
																"nativeSrc": "2452:25:20",
																"nodeType": "YulFunctionCall",
																"src": "2452:25:20"
															},
															"nativeSrc": "2452:25:20",
															"nodeType": "YulExpressionStatement",
															"src": "2452:25:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2306:177:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2376:9:20",
														"nodeType": "YulTypedName",
														"src": "2376:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2387:6:20",
														"nodeType": "YulTypedName",
														"src": "2387:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2398:4:20",
														"nodeType": "YulTypedName",
														"src": "2398:4:20",
														"type": ""
													}
												],
												"src": "2306:177:20"
											},
											{
												"body": {
													"nativeSrc": "2554:184:20",
													"nodeType": "YulBlock",
													"src": "2554:184:20",
													"statements": [
														{
															"nativeSrc": "2564:10:20",
															"nodeType": "YulVariableDeclaration",
															"src": "2564:10:20",
															"value": {
																"kind": "number",
																"nativeSrc": "2573:1:20",
																"nodeType": "YulLiteral",
																"src": "2573:1:20",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "2568:1:20",
																	"nodeType": "YulTypedName",
																	"src": "2568:1:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2633:63:20",
																"nodeType": "YulBlock",
																"src": "2633:63:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "2658:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "2658:3:20"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "2663:1:20",
																							"nodeType": "YulIdentifier",
																							"src": "2663:1:20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2654:3:20",
																						"nodeType": "YulIdentifier",
																						"src": "2654:3:20"
																					},
																					"nativeSrc": "2654:11:20",
																					"nodeType": "YulFunctionCall",
																					"src": "2654:11:20"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "2677:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "2677:3:20"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "2682:1:20",
																									"nodeType": "YulIdentifier",
																									"src": "2682:1:20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2673:3:20",
																								"nodeType": "YulIdentifier",
																								"src": "2673:3:20"
																							},
																							"nativeSrc": "2673:11:20",
																							"nodeType": "YulFunctionCall",
																							"src": "2673:11:20"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2667:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "2667:5:20"
																					},
																					"nativeSrc": "2667:18:20",
																					"nodeType": "YulFunctionCall",
																					"src": "2667:18:20"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2647:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:20"
																			},
																			"nativeSrc": "2647:39:20",
																			"nodeType": "YulFunctionCall",
																			"src": "2647:39:20"
																		},
																		"nativeSrc": "2647:39:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "2647:39:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "2594:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "2594:1:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2597:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2597:6:20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2591:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "2591:2:20"
																},
																"nativeSrc": "2591:13:20",
																"nodeType": "YulFunctionCall",
																"src": "2591:13:20"
															},
															"nativeSrc": "2583:113:20",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2605:19:20",
																"nodeType": "YulBlock",
																"src": "2605:19:20",
																"statements": [
																	{
																		"nativeSrc": "2607:15:20",
																		"nodeType": "YulAssignment",
																		"src": "2607:15:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2616:1:20",
																					"nodeType": "YulIdentifier",
																					"src": "2616:1:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2619:2:20",
																					"nodeType": "YulLiteral",
																					"src": "2619:2:20",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2612:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "2612:3:20"
																			},
																			"nativeSrc": "2612:10:20",
																			"nodeType": "YulFunctionCall",
																			"src": "2612:10:20"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2607:1:20",
																				"nodeType": "YulIdentifier",
																				"src": "2607:1:20"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2587:3:20",
																"nodeType": "YulBlock",
																"src": "2587:3:20",
																"statements": []
															},
															"src": "2583:113:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2716:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "2716:3:20"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2721:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "2721:6:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:20"
																		},
																		"nativeSrc": "2712:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:16:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2730:1:20",
																		"nodeType": "YulLiteral",
																		"src": "2730:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:20"
																},
																"nativeSrc": "2705:27:20",
																"nodeType": "YulFunctionCall",
																"src": "2705:27:20"
															},
															"nativeSrc": "2705:27:20",
															"nodeType": "YulExpressionStatement",
															"src": "2705:27:20"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2488:250:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2532:3:20",
														"nodeType": "YulTypedName",
														"src": "2532:3:20",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2537:3:20",
														"nodeType": "YulTypedName",
														"src": "2537:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2542:6:20",
														"nodeType": "YulTypedName",
														"src": "2542:6:20",
														"type": ""
													}
												],
												"src": "2488:250:20"
											},
											{
												"body": {
													"nativeSrc": "2864:275:20",
													"nodeType": "YulBlock",
													"src": "2864:275:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2881:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "2881:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2892:2:20",
																		"nodeType": "YulLiteral",
																		"src": "2892:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2874:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2874:6:20"
																},
																"nativeSrc": "2874:21:20",
																"nodeType": "YulFunctionCall",
																"src": "2874:21:20"
															},
															"nativeSrc": "2874:21:20",
															"nodeType": "YulExpressionStatement",
															"src": "2874:21:20"
														},
														{
															"nativeSrc": "2904:27:20",
															"nodeType": "YulVariableDeclaration",
															"src": "2904:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2924:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2924:6:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2918:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "2918:5:20"
																},
																"nativeSrc": "2918:13:20",
																"nodeType": "YulFunctionCall",
																"src": "2918:13:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2908:6:20",
																	"nodeType": "YulTypedName",
																	"src": "2908:6:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2951:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "2951:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2962:2:20",
																				"nodeType": "YulLiteral",
																				"src": "2962:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2947:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "2947:3:20"
																		},
																		"nativeSrc": "2947:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2947:18:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2967:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2967:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2940:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2940:6:20"
																},
																"nativeSrc": "2940:34:20",
																"nodeType": "YulFunctionCall",
																"src": "2940:34:20"
															},
															"nativeSrc": "2940:34:20",
															"nodeType": "YulExpressionStatement",
															"src": "2940:34:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3022:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "3022:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3030:2:20",
																				"nodeType": "YulLiteral",
																				"src": "3030:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3018:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3018:3:20"
																		},
																		"nativeSrc": "3018:15:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3018:15:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3039:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3039:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3050:2:20",
																				"nodeType": "YulLiteral",
																				"src": "3050:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3035:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3035:3:20"
																		},
																		"nativeSrc": "3035:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3035:18:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3055:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3055:6:20"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2983:34:20",
																	"nodeType": "YulIdentifier",
																	"src": "2983:34:20"
																},
																"nativeSrc": "2983:79:20",
																"nodeType": "YulFunctionCall",
																"src": "2983:79:20"
															},
															"nativeSrc": "2983:79:20",
															"nodeType": "YulExpressionStatement",
															"src": "2983:79:20"
														},
														{
															"nativeSrc": "3071:62:20",
															"nodeType": "YulAssignment",
															"src": "3071:62:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3087:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3087:9:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "3106:6:20",
																								"nodeType": "YulIdentifier",
																								"src": "3106:6:20"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3114:2:20",
																								"nodeType": "YulLiteral",
																								"src": "3114:2:20",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3102:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "3102:3:20"
																						},
																						"nativeSrc": "3102:15:20",
																						"nodeType": "YulFunctionCall",
																						"src": "3102:15:20"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3123:2:20",
																								"nodeType": "YulLiteral",
																								"src": "3123:2:20",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "3119:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "3119:3:20"
																						},
																						"nativeSrc": "3119:7:20",
																						"nodeType": "YulFunctionCall",
																						"src": "3119:7:20"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3098:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "3098:3:20"
																				},
																				"nativeSrc": "3098:29:20",
																				"nodeType": "YulFunctionCall",
																				"src": "3098:29:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3083:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3083:3:20"
																		},
																		"nativeSrc": "3083:45:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3083:45:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3130:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3130:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3079:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3079:3:20"
																},
																"nativeSrc": "3079:54:20",
																"nodeType": "YulFunctionCall",
																"src": "3079:54:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3071:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "3071:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2743:396:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2833:9:20",
														"nodeType": "YulTypedName",
														"src": "2833:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2844:6:20",
														"nodeType": "YulTypedName",
														"src": "2844:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2855:4:20",
														"nodeType": "YulTypedName",
														"src": "2855:4:20",
														"type": ""
													}
												],
												"src": "2743:396:20"
											},
											{
												"body": {
													"nativeSrc": "3250:621:20",
													"nodeType": "YulBlock",
													"src": "3250:621:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "3296:16:20",
																"nodeType": "YulBlock",
																"src": "3296:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3305:1:20",
																					"nodeType": "YulLiteral",
																					"src": "3305:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3308:1:20",
																					"nodeType": "YulLiteral",
																					"src": "3308:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3298:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "3298:6:20"
																			},
																			"nativeSrc": "3298:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3298:12:20"
																		},
																		"nativeSrc": "3298:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "3298:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3271:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "3271:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3280:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3267:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3267:3:20"
																		},
																		"nativeSrc": "3267:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3267:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3292:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3292:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3263:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3263:3:20"
																},
																"nativeSrc": "3263:32:20",
																"nodeType": "YulFunctionCall",
																"src": "3263:32:20"
															},
															"nativeSrc": "3260:52:20",
															"nodeType": "YulIf",
															"src": "3260:52:20"
														},
														{
															"nativeSrc": "3321:37:20",
															"nodeType": "YulVariableDeclaration",
															"src": "3321:37:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3348:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "3348:9:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3335:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "3335:12:20"
																},
																"nativeSrc": "3335:23:20",
																"nodeType": "YulFunctionCall",
																"src": "3335:23:20"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3325:6:20",
																	"nodeType": "YulTypedName",
																	"src": "3325:6:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3401:16:20",
																"nodeType": "YulBlock",
																"src": "3401:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3410:1:20",
																					"nodeType": "YulLiteral",
																					"src": "3410:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3413:1:20",
																					"nodeType": "YulLiteral",
																					"src": "3413:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3403:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "3403:6:20"
																			},
																			"nativeSrc": "3403:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3403:12:20"
																		},
																		"nativeSrc": "3403:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "3403:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3373:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3373:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3381:18:20",
																		"nodeType": "YulLiteral",
																		"src": "3381:18:20",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3370:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "3370:2:20"
																},
																"nativeSrc": "3370:30:20",
																"nodeType": "YulFunctionCall",
																"src": "3370:30:20"
															},
															"nativeSrc": "3367:50:20",
															"nodeType": "YulIf",
															"src": "3367:50:20"
														},
														{
															"nativeSrc": "3426:32:20",
															"nodeType": "YulVariableDeclaration",
															"src": "3426:32:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3440:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "3440:9:20"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3451:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3451:6:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3436:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3436:3:20"
																},
																"nativeSrc": "3436:22:20",
																"nodeType": "YulFunctionCall",
																"src": "3436:22:20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3430:2:20",
																	"nodeType": "YulTypedName",
																	"src": "3430:2:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3506:16:20",
																"nodeType": "YulBlock",
																"src": "3506:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3515:1:20",
																					"nodeType": "YulLiteral",
																					"src": "3515:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3518:1:20",
																					"nodeType": "YulLiteral",
																					"src": "3518:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3508:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "3508:6:20"
																			},
																			"nativeSrc": "3508:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3508:12:20"
																		},
																		"nativeSrc": "3508:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "3508:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "3485:2:20",
																						"nodeType": "YulIdentifier",
																						"src": "3485:2:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3489:4:20",
																						"nodeType": "YulLiteral",
																						"src": "3489:4:20",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3481:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:20"
																				},
																				"nativeSrc": "3481:13:20",
																				"nodeType": "YulFunctionCall",
																				"src": "3481:13:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3496:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "3496:7:20"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3477:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3477:3:20"
																		},
																		"nativeSrc": "3477:27:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3477:27:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3470:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3470:6:20"
																},
																"nativeSrc": "3470:35:20",
																"nodeType": "YulFunctionCall",
																"src": "3470:35:20"
															},
															"nativeSrc": "3467:55:20",
															"nodeType": "YulIf",
															"src": "3467:55:20"
														},
														{
															"nativeSrc": "3531:30:20",
															"nodeType": "YulVariableDeclaration",
															"src": "3531:30:20",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "3558:2:20",
																		"nodeType": "YulIdentifier",
																		"src": "3558:2:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3545:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "3545:12:20"
																},
																"nativeSrc": "3545:16:20",
																"nodeType": "YulFunctionCall",
																"src": "3545:16:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3535:6:20",
																	"nodeType": "YulTypedName",
																	"src": "3535:6:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3604:16:20",
																"nodeType": "YulBlock",
																"src": "3604:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3613:1:20",
																					"nodeType": "YulLiteral",
																					"src": "3613:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3616:1:20",
																					"nodeType": "YulLiteral",
																					"src": "3616:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3606:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "3606:6:20"
																			},
																			"nativeSrc": "3606:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3606:12:20"
																		},
																		"nativeSrc": "3606:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "3606:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3576:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3576:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3584:18:20",
																		"nodeType": "YulLiteral",
																		"src": "3584:18:20",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3573:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "3573:2:20"
																},
																"nativeSrc": "3573:30:20",
																"nodeType": "YulFunctionCall",
																"src": "3573:30:20"
															},
															"nativeSrc": "3570:50:20",
															"nodeType": "YulIf",
															"src": "3570:50:20"
														},
														{
															"body": {
																"nativeSrc": "3672:16:20",
																"nodeType": "YulBlock",
																"src": "3672:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3681:1:20",
																					"nodeType": "YulLiteral",
																					"src": "3681:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3684:1:20",
																					"nodeType": "YulLiteral",
																					"src": "3684:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3674:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "3674:6:20"
																			},
																			"nativeSrc": "3674:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3674:12:20"
																		},
																		"nativeSrc": "3674:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "3674:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "3643:2:20",
																						"nodeType": "YulIdentifier",
																						"src": "3643:2:20"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3647:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "3647:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3639:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "3639:3:20"
																				},
																				"nativeSrc": "3639:15:20",
																				"nodeType": "YulFunctionCall",
																				"src": "3639:15:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3656:4:20",
																				"nodeType": "YulLiteral",
																				"src": "3656:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3635:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3635:3:20"
																		},
																		"nativeSrc": "3635:26:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3635:26:20"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3663:7:20",
																		"nodeType": "YulIdentifier",
																		"src": "3663:7:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3632:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "3632:2:20"
																},
																"nativeSrc": "3632:39:20",
																"nodeType": "YulFunctionCall",
																"src": "3632:39:20"
															},
															"nativeSrc": "3629:59:20",
															"nodeType": "YulIf",
															"src": "3629:59:20"
														},
														{
															"nativeSrc": "3697:23:20",
															"nodeType": "YulAssignment",
															"src": "3697:23:20",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "3711:2:20",
																		"nodeType": "YulIdentifier",
																		"src": "3711:2:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3715:4:20",
																		"nodeType": "YulLiteral",
																		"src": "3715:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3707:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3707:3:20"
																},
																"nativeSrc": "3707:13:20",
																"nodeType": "YulFunctionCall",
																"src": "3707:13:20"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3697:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3697:6:20"
																}
															]
														},
														{
															"nativeSrc": "3729:16:20",
															"nodeType": "YulAssignment",
															"src": "3729:16:20",
															"value": {
																"name": "length",
																"nativeSrc": "3739:6:20",
																"nodeType": "YulIdentifier",
																"src": "3739:6:20"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3729:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3729:6:20"
																}
															]
														},
														{
															"nativeSrc": "3754:47:20",
															"nodeType": "YulVariableDeclaration",
															"src": "3754:47:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3784:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3784:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3795:4:20",
																				"nodeType": "YulLiteral",
																				"src": "3795:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3780:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3780:3:20"
																		},
																		"nativeSrc": "3780:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3780:20:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3767:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "3767:12:20"
																},
																"nativeSrc": "3767:34:20",
																"nodeType": "YulFunctionCall",
																"src": "3767:34:20"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3758:5:20",
																	"nodeType": "YulTypedName",
																	"src": "3758:5:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3835:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "3835:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3810:24:20",
																	"nodeType": "YulIdentifier",
																	"src": "3810:24:20"
																},
																"nativeSrc": "3810:31:20",
																"nodeType": "YulFunctionCall",
																"src": "3810:31:20"
															},
															"nativeSrc": "3810:31:20",
															"nodeType": "YulExpressionStatement",
															"src": "3810:31:20"
														},
														{
															"nativeSrc": "3850:15:20",
															"nodeType": "YulAssignment",
															"src": "3850:15:20",
															"value": {
																"name": "value",
																"nativeSrc": "3860:5:20",
																"nodeType": "YulIdentifier",
																"src": "3860:5:20"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3850:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3850:6:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptrt_address",
												"nativeSrc": "3144:727:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3200:9:20",
														"nodeType": "YulTypedName",
														"src": "3200:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3211:7:20",
														"nodeType": "YulTypedName",
														"src": "3211:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3223:6:20",
														"nodeType": "YulTypedName",
														"src": "3223:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3231:6:20",
														"nodeType": "YulTypedName",
														"src": "3231:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3239:6:20",
														"nodeType": "YulTypedName",
														"src": "3239:6:20",
														"type": ""
													}
												],
												"src": "3144:727:20"
											},
											{
												"body": {
													"nativeSrc": "3946:156:20",
													"nodeType": "YulBlock",
													"src": "3946:156:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "3992:16:20",
																"nodeType": "YulBlock",
																"src": "3992:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4001:1:20",
																					"nodeType": "YulLiteral",
																					"src": "4001:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4004:1:20",
																					"nodeType": "YulLiteral",
																					"src": "4004:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3994:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "3994:6:20"
																			},
																			"nativeSrc": "3994:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3994:12:20"
																		},
																		"nativeSrc": "3994:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "3994:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3967:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "3967:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3976:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3976:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3963:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3963:3:20"
																		},
																		"nativeSrc": "3963:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3963:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3988:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3988:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3959:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3959:3:20"
																},
																"nativeSrc": "3959:32:20",
																"nodeType": "YulFunctionCall",
																"src": "3959:32:20"
															},
															"nativeSrc": "3956:52:20",
															"nodeType": "YulIf",
															"src": "3956:52:20"
														},
														{
															"nativeSrc": "4017:14:20",
															"nodeType": "YulVariableDeclaration",
															"src": "4017:14:20",
															"value": {
																"kind": "number",
																"nativeSrc": "4030:1:20",
																"nodeType": "YulLiteral",
																"src": "4030:1:20",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4021:5:20",
																	"nodeType": "YulTypedName",
																	"src": "4021:5:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4040:32:20",
															"nodeType": "YulAssignment",
															"src": "4040:32:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4062:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "4062:9:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4049:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "4049:12:20"
																},
																"nativeSrc": "4049:23:20",
																"nodeType": "YulFunctionCall",
																"src": "4049:23:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4040:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "4040:5:20"
																}
															]
														},
														{
															"nativeSrc": "4081:15:20",
															"nodeType": "YulAssignment",
															"src": "4081:15:20",
															"value": {
																"name": "value",
																"nativeSrc": "4091:5:20",
																"nodeType": "YulIdentifier",
																"src": "4091:5:20"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4081:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4081:6:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3876:226:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3912:9:20",
														"nodeType": "YulTypedName",
														"src": "3912:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3923:7:20",
														"nodeType": "YulTypedName",
														"src": "3923:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3935:6:20",
														"nodeType": "YulTypedName",
														"src": "3935:6:20",
														"type": ""
													}
												],
												"src": "3876:226:20"
											},
											{
												"body": {
													"nativeSrc": "4281:169:20",
													"nodeType": "YulBlock",
													"src": "4281:169:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4298:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "4298:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4309:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4309:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4291:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4291:6:20"
																},
																"nativeSrc": "4291:21:20",
																"nodeType": "YulFunctionCall",
																"src": "4291:21:20"
															},
															"nativeSrc": "4291:21:20",
															"nodeType": "YulExpressionStatement",
															"src": "4291:21:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4332:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "4332:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4343:2:20",
																				"nodeType": "YulLiteral",
																				"src": "4343:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4328:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "4328:3:20"
																		},
																		"nativeSrc": "4328:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4328:18:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4348:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4348:2:20",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4321:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4321:6:20"
																},
																"nativeSrc": "4321:30:20",
																"nodeType": "YulFunctionCall",
																"src": "4321:30:20"
															},
															"nativeSrc": "4321:30:20",
															"nodeType": "YulExpressionStatement",
															"src": "4321:30:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4371:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "4371:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4382:2:20",
																				"nodeType": "YulLiteral",
																				"src": "4382:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4367:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "4367:3:20"
																		},
																		"nativeSrc": "4367:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4367:18:20"
																	},
																	{
																		"hexValue": "7a65726f206164647265737320706172616d73",
																		"kind": "string",
																		"nativeSrc": "4387:21:20",
																		"nodeType": "YulLiteral",
																		"src": "4387:21:20",
																		"type": "",
																		"value": "zero address params"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4360:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4360:6:20"
																},
																"nativeSrc": "4360:49:20",
																"nodeType": "YulFunctionCall",
																"src": "4360:49:20"
															},
															"nativeSrc": "4360:49:20",
															"nodeType": "YulExpressionStatement",
															"src": "4360:49:20"
														},
														{
															"nativeSrc": "4418:26:20",
															"nodeType": "YulAssignment",
															"src": "4418:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4430:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "4430:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4441:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4441:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4426:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "4426:3:20"
																},
																"nativeSrc": "4426:18:20",
																"nodeType": "YulFunctionCall",
																"src": "4426:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4418:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "4418:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f70c5f7c2b08d32da6024b33d1b4b5ee6bcf0e8e8a5ac32fe66bf794c4d8e476__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4107:343:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4258:9:20",
														"nodeType": "YulTypedName",
														"src": "4258:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4272:4:20",
														"nodeType": "YulTypedName",
														"src": "4272:4:20",
														"type": ""
													}
												],
												"src": "4107:343:20"
											},
											{
												"body": {
													"nativeSrc": "4629:171:20",
													"nodeType": "YulBlock",
													"src": "4629:171:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4646:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "4646:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4657:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4657:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4639:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4639:6:20"
																},
																"nativeSrc": "4639:21:20",
																"nodeType": "YulFunctionCall",
																"src": "4639:21:20"
															},
															"nativeSrc": "4639:21:20",
															"nodeType": "YulExpressionStatement",
															"src": "4639:21:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4680:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "4680:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4691:2:20",
																				"nodeType": "YulLiteral",
																				"src": "4691:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4676:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "4676:3:20"
																		},
																		"nativeSrc": "4676:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4676:18:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4696:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4696:2:20",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4669:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4669:6:20"
																},
																"nativeSrc": "4669:30:20",
																"nodeType": "YulFunctionCall",
																"src": "4669:30:20"
															},
															"nativeSrc": "4669:30:20",
															"nodeType": "YulExpressionStatement",
															"src": "4669:30:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:2:20",
																				"nodeType": "YulLiteral",
																				"src": "4730:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:20"
																		},
																		"nativeSrc": "4715:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:18:20"
																	},
																	{
																		"hexValue": "496e76616c69642061646d696e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "4735:23:20",
																		"nodeType": "YulLiteral",
																		"src": "4735:23:20",
																		"type": "",
																		"value": "Invalid admin address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4708:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4708:6:20"
																},
																"nativeSrc": "4708:51:20",
																"nodeType": "YulFunctionCall",
																"src": "4708:51:20"
															},
															"nativeSrc": "4708:51:20",
															"nodeType": "YulExpressionStatement",
															"src": "4708:51:20"
														},
														{
															"nativeSrc": "4768:26:20",
															"nodeType": "YulAssignment",
															"src": "4768:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4780:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "4780:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4791:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4791:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4776:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "4776:3:20"
																},
																"nativeSrc": "4776:18:20",
																"nodeType": "YulFunctionCall",
																"src": "4776:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4768:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "4768:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4455:345:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4606:9:20",
														"nodeType": "YulTypedName",
														"src": "4606:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4620:4:20",
														"nodeType": "YulTypedName",
														"src": "4620:4:20",
														"type": ""
													}
												],
												"src": "4455:345:20"
											},
											{
												"body": {
													"nativeSrc": "4979:161:20",
													"nodeType": "YulBlock",
													"src": "4979:161:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4996:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "4996:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5007:2:20",
																		"nodeType": "YulLiteral",
																		"src": "5007:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4989:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4989:6:20"
																},
																"nativeSrc": "4989:21:20",
																"nodeType": "YulFunctionCall",
																"src": "4989:21:20"
															},
															"nativeSrc": "4989:21:20",
															"nodeType": "YulExpressionStatement",
															"src": "4989:21:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5030:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "5030:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5041:2:20",
																				"nodeType": "YulLiteral",
																				"src": "5041:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5026:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5026:3:20"
																		},
																		"nativeSrc": "5026:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5026:18:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5046:2:20",
																		"nodeType": "YulLiteral",
																		"src": "5046:2:20",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5019:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5019:6:20"
																},
																"nativeSrc": "5019:30:20",
																"nodeType": "YulFunctionCall",
																"src": "5019:30:20"
															},
															"nativeSrc": "5019:30:20",
															"nodeType": "YulExpressionStatement",
															"src": "5019:30:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5069:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "5069:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5080:2:20",
																				"nodeType": "YulLiteral",
																				"src": "5080:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5065:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5065:3:20"
																		},
																		"nativeSrc": "5065:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5065:18:20"
																	},
																	{
																		"hexValue": "616d6f756e74203d3d2030",
																		"kind": "string",
																		"nativeSrc": "5085:13:20",
																		"nodeType": "YulLiteral",
																		"src": "5085:13:20",
																		"type": "",
																		"value": "amount == 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5058:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5058:6:20"
																},
																"nativeSrc": "5058:41:20",
																"nodeType": "YulFunctionCall",
																"src": "5058:41:20"
															},
															"nativeSrc": "5058:41:20",
															"nodeType": "YulExpressionStatement",
															"src": "5058:41:20"
														},
														{
															"nativeSrc": "5108:26:20",
															"nodeType": "YulAssignment",
															"src": "5108:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5120:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "5120:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5131:2:20",
																		"nodeType": "YulLiteral",
																		"src": "5131:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5116:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "5116:3:20"
																},
																"nativeSrc": "5116:18:20",
																"nodeType": "YulFunctionCall",
																"src": "5116:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5108:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "5108:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_55c2b76370d5d427f52c6d12dc9e48fce27eadb826533977b2f868874e0f017c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4805:335:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4956:9:20",
														"nodeType": "YulTypedName",
														"src": "4956:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4970:4:20",
														"nodeType": "YulTypedName",
														"src": "4970:4:20",
														"type": ""
													}
												],
												"src": "4805:335:20"
											},
											{
												"body": {
													"nativeSrc": "5319:164:20",
													"nodeType": "YulBlock",
													"src": "5319:164:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5336:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "5336:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5347:2:20",
																		"nodeType": "YulLiteral",
																		"src": "5347:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5329:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5329:6:20"
																},
																"nativeSrc": "5329:21:20",
																"nodeType": "YulFunctionCall",
																"src": "5329:21:20"
															},
															"nativeSrc": "5329:21:20",
															"nodeType": "YulExpressionStatement",
															"src": "5329:21:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5370:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "5370:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5381:2:20",
																				"nodeType": "YulLiteral",
																				"src": "5381:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5366:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5366:3:20"
																		},
																		"nativeSrc": "5366:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5366:18:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5386:2:20",
																		"nodeType": "YulLiteral",
																		"src": "5386:2:20",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5359:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5359:6:20"
																},
																"nativeSrc": "5359:30:20",
																"nodeType": "YulFunctionCall",
																"src": "5359:30:20"
															},
															"nativeSrc": "5359:30:20",
															"nodeType": "YulExpressionStatement",
															"src": "5359:30:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5409:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "5409:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5420:2:20",
																				"nodeType": "YulLiteral",
																				"src": "5420:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5405:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5405:3:20"
																		},
																		"nativeSrc": "5405:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5405:18:20"
																	},
																	{
																		"hexValue": "696e76616c696420746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "5425:16:20",
																		"nodeType": "YulLiteral",
																		"src": "5425:16:20",
																		"type": "",
																		"value": "invalid tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5398:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5398:6:20"
																},
																"nativeSrc": "5398:44:20",
																"nodeType": "YulFunctionCall",
																"src": "5398:44:20"
															},
															"nativeSrc": "5398:44:20",
															"nodeType": "YulExpressionStatement",
															"src": "5398:44:20"
														},
														{
															"nativeSrc": "5451:26:20",
															"nodeType": "YulAssignment",
															"src": "5451:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5463:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "5463:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5474:2:20",
																		"nodeType": "YulLiteral",
																		"src": "5474:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5459:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "5459:3:20"
																},
																"nativeSrc": "5459:18:20",
																"nodeType": "YulFunctionCall",
																"src": "5459:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5451:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "5451:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_62cac98c7f03b33e8dddfe58c00dd8211de9f9167c478e0f775c21754a69135a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5145:338:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5296:9:20",
														"nodeType": "YulTypedName",
														"src": "5296:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5310:4:20",
														"nodeType": "YulTypedName",
														"src": "5310:4:20",
														"type": ""
													}
												],
												"src": "5145:338:20"
											},
											{
												"body": {
													"nativeSrc": "5662:172:20",
													"nodeType": "YulBlock",
													"src": "5662:172:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5679:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "5679:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5690:2:20",
																		"nodeType": "YulLiteral",
																		"src": "5690:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5672:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5672:6:20"
																},
																"nativeSrc": "5672:21:20",
																"nodeType": "YulFunctionCall",
																"src": "5672:21:20"
															},
															"nativeSrc": "5672:21:20",
															"nodeType": "YulExpressionStatement",
															"src": "5672:21:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5713:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "5713:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5724:2:20",
																				"nodeType": "YulLiteral",
																				"src": "5724:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5709:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5709:3:20"
																		},
																		"nativeSrc": "5709:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:18:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5729:2:20",
																		"nodeType": "YulLiteral",
																		"src": "5729:2:20",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5702:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5702:6:20"
																},
																"nativeSrc": "5702:30:20",
																"nodeType": "YulFunctionCall",
																"src": "5702:30:20"
															},
															"nativeSrc": "5702:30:20",
															"nodeType": "YulExpressionStatement",
															"src": "5702:30:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5752:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "5752:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5763:2:20",
																				"nodeType": "YulLiteral",
																				"src": "5763:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5748:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5748:3:20"
																		},
																		"nativeSrc": "5748:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5748:18:20"
																	},
																	{
																		"hexValue": "73726320746f6b656e203d3d2064737420746f6b656e",
																		"kind": "string",
																		"nativeSrc": "5768:24:20",
																		"nodeType": "YulLiteral",
																		"src": "5768:24:20",
																		"type": "",
																		"value": "src token == dst token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5741:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5741:6:20"
																},
																"nativeSrc": "5741:52:20",
																"nodeType": "YulFunctionCall",
																"src": "5741:52:20"
															},
															"nativeSrc": "5741:52:20",
															"nodeType": "YulExpressionStatement",
															"src": "5741:52:20"
														},
														{
															"nativeSrc": "5802:26:20",
															"nodeType": "YulAssignment",
															"src": "5802:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5814:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "5814:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5825:2:20",
																		"nodeType": "YulLiteral",
																		"src": "5825:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5810:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "5810:3:20"
																},
																"nativeSrc": "5810:18:20",
																"nodeType": "YulFunctionCall",
																"src": "5810:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5802:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "5802:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9287f6fe4436a085162c38b7c9e1f89cec60c0173d9388e22663028de9128448__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5488:346:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5639:9:20",
														"nodeType": "YulTypedName",
														"src": "5639:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5653:4:20",
														"nodeType": "YulTypedName",
														"src": "5653:4:20",
														"type": ""
													}
												],
												"src": "5488:346:20"
											},
											{
												"body": {
													"nativeSrc": "6013:167:20",
													"nodeType": "YulBlock",
													"src": "6013:167:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6030:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "6030:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6041:2:20",
																		"nodeType": "YulLiteral",
																		"src": "6041:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6023:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6023:6:20"
																},
																"nativeSrc": "6023:21:20",
																"nodeType": "YulFunctionCall",
																"src": "6023:21:20"
															},
															"nativeSrc": "6023:21:20",
															"nodeType": "YulExpressionStatement",
															"src": "6023:21:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6064:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "6064:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6075:2:20",
																				"nodeType": "YulLiteral",
																				"src": "6075:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6060:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6060:3:20"
																		},
																		"nativeSrc": "6060:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6060:18:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6080:2:20",
																		"nodeType": "YulLiteral",
																		"src": "6080:2:20",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6053:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6053:6:20"
																},
																"nativeSrc": "6053:30:20",
																"nodeType": "YulFunctionCall",
																"src": "6053:30:20"
															},
															"nativeSrc": "6053:30:20",
															"nodeType": "YulExpressionStatement",
															"src": "6053:30:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6103:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "6103:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6114:2:20",
																				"nodeType": "YulLiteral",
																				"src": "6114:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6099:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6099:3:20"
																		},
																		"nativeSrc": "6099:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6099:18:20"
																	},
																	{
																		"hexValue": "63616c6c657220213d2073776170706572",
																		"kind": "string",
																		"nativeSrc": "6119:19:20",
																		"nodeType": "YulLiteral",
																		"src": "6119:19:20",
																		"type": "",
																		"value": "caller != swapper"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6092:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6092:6:20"
																},
																"nativeSrc": "6092:47:20",
																"nodeType": "YulFunctionCall",
																"src": "6092:47:20"
															},
															"nativeSrc": "6092:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "6092:47:20"
														},
														{
															"nativeSrc": "6148:26:20",
															"nodeType": "YulAssignment",
															"src": "6148:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6160:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "6160:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6171:2:20",
																		"nodeType": "YulLiteral",
																		"src": "6171:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6156:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6156:3:20"
																},
																"nativeSrc": "6156:18:20",
																"nodeType": "YulFunctionCall",
																"src": "6156:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6148:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "6148:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_797f8a7eb79a2e9138e391d6393592c240f4354ba78950ece5fed1af0d3777f6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5839:341:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5990:9:20",
														"nodeType": "YulTypedName",
														"src": "5990:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6004:4:20",
														"nodeType": "YulTypedName",
														"src": "6004:4:20",
														"type": ""
													}
												],
												"src": "5839:341:20"
											},
											{
												"body": {
													"nativeSrc": "6359:169:20",
													"nodeType": "YulBlock",
													"src": "6359:169:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6376:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "6376:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6387:2:20",
																		"nodeType": "YulLiteral",
																		"src": "6387:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6369:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6369:6:20"
																},
																"nativeSrc": "6369:21:20",
																"nodeType": "YulFunctionCall",
																"src": "6369:21:20"
															},
															"nativeSrc": "6369:21:20",
															"nodeType": "YulExpressionStatement",
															"src": "6369:21:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6410:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "6410:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6421:2:20",
																				"nodeType": "YulLiteral",
																				"src": "6421:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6406:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6406:3:20"
																		},
																		"nativeSrc": "6406:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6406:18:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6426:2:20",
																		"nodeType": "YulLiteral",
																		"src": "6426:2:20",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6399:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6399:6:20"
																},
																"nativeSrc": "6399:30:20",
																"nodeType": "YulFunctionCall",
																"src": "6399:30:20"
															},
															"nativeSrc": "6399:30:20",
															"nodeType": "YulExpressionStatement",
															"src": "6399:30:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6449:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "6449:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6460:2:20",
																				"nodeType": "YulLiteral",
																				"src": "6460:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6445:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6445:3:20"
																		},
																		"nativeSrc": "6445:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6445:18:20"
																	},
																	{
																		"hexValue": "6d73672e76616c756520213d20616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "6465:21:20",
																		"nodeType": "YulLiteral",
																		"src": "6465:21:20",
																		"type": "",
																		"value": "msg.value != amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6438:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6438:6:20"
																},
																"nativeSrc": "6438:49:20",
																"nodeType": "YulFunctionCall",
																"src": "6438:49:20"
															},
															"nativeSrc": "6438:49:20",
															"nodeType": "YulExpressionStatement",
															"src": "6438:49:20"
														},
														{
															"nativeSrc": "6496:26:20",
															"nodeType": "YulAssignment",
															"src": "6496:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6508:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "6508:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6519:2:20",
																		"nodeType": "YulLiteral",
																		"src": "6519:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6504:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6504:3:20"
																},
																"nativeSrc": "6504:18:20",
																"nodeType": "YulFunctionCall",
																"src": "6504:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6496:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "6496:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ce6c4ea39c501f8c7c12a9194d99cb871ed34c46e9c10eeac69413f219aa96cd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6185:343:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6336:9:20",
														"nodeType": "YulTypedName",
														"src": "6336:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6350:4:20",
														"nodeType": "YulTypedName",
														"src": "6350:4:20",
														"type": ""
													}
												],
												"src": "6185:343:20"
											},
											{
												"body": {
													"nativeSrc": "6707:164:20",
													"nodeType": "YulBlock",
													"src": "6707:164:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6724:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "6724:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6735:2:20",
																		"nodeType": "YulLiteral",
																		"src": "6735:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6717:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6717:6:20"
																},
																"nativeSrc": "6717:21:20",
																"nodeType": "YulFunctionCall",
																"src": "6717:21:20"
															},
															"nativeSrc": "6717:21:20",
															"nodeType": "YulExpressionStatement",
															"src": "6717:21:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6758:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "6758:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6769:2:20",
																				"nodeType": "YulLiteral",
																				"src": "6769:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6754:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6754:3:20"
																		},
																		"nativeSrc": "6754:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6754:18:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6774:2:20",
																		"nodeType": "YulLiteral",
																		"src": "6774:2:20",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6747:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6747:6:20"
																},
																"nativeSrc": "6747:30:20",
																"nodeType": "YulFunctionCall",
																"src": "6747:30:20"
															},
															"nativeSrc": "6747:30:20",
															"nodeType": "YulExpressionStatement",
															"src": "6747:30:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6797:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "6797:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6808:2:20",
																				"nodeType": "YulLiteral",
																				"src": "6808:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6793:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6793:3:20"
																		},
																		"nativeSrc": "6793:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6793:18:20"
																	},
																	{
																		"hexValue": "6d73672e76616c756520213d2030",
																		"kind": "string",
																		"nativeSrc": "6813:16:20",
																		"nodeType": "YulLiteral",
																		"src": "6813:16:20",
																		"type": "",
																		"value": "msg.value != 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6786:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6786:6:20"
																},
																"nativeSrc": "6786:44:20",
																"nodeType": "YulFunctionCall",
																"src": "6786:44:20"
															},
															"nativeSrc": "6786:44:20",
															"nodeType": "YulExpressionStatement",
															"src": "6786:44:20"
														},
														{
															"nativeSrc": "6839:26:20",
															"nodeType": "YulAssignment",
															"src": "6839:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6851:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "6851:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6862:2:20",
																		"nodeType": "YulLiteral",
																		"src": "6862:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6847:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6847:3:20"
																},
																"nativeSrc": "6847:18:20",
																"nodeType": "YulFunctionCall",
																"src": "6847:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6839:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "6839:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4aaab178ce62c9aa293f84821bdadc1685de02663fdcdb8a26121ae462ae0e7f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6533:338:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6684:9:20",
														"nodeType": "YulTypedName",
														"src": "6684:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6698:4:20",
														"nodeType": "YulTypedName",
														"src": "6698:4:20",
														"type": ""
													}
												],
												"src": "6533:338:20"
											},
											{
												"body": {
													"nativeSrc": "6957:103:20",
													"nodeType": "YulBlock",
													"src": "6957:103:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "7003:16:20",
																"nodeType": "YulBlock",
																"src": "7003:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7012:1:20",
																					"nodeType": "YulLiteral",
																					"src": "7012:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7015:1:20",
																					"nodeType": "YulLiteral",
																					"src": "7015:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7005:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "7005:6:20"
																			},
																			"nativeSrc": "7005:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7005:12:20"
																		},
																		"nativeSrc": "7005:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "7005:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6978:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "6978:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6987:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "6987:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6974:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6974:3:20"
																		},
																		"nativeSrc": "6974:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6974:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6999:2:20",
																		"nodeType": "YulLiteral",
																		"src": "6999:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6970:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6970:3:20"
																},
																"nativeSrc": "6970:32:20",
																"nodeType": "YulFunctionCall",
																"src": "6970:32:20"
															},
															"nativeSrc": "6967:52:20",
															"nodeType": "YulIf",
															"src": "6967:52:20"
														},
														{
															"nativeSrc": "7028:26:20",
															"nodeType": "YulAssignment",
															"src": "7028:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7044:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "7044:9:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7038:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "7038:5:20"
																},
																"nativeSrc": "7038:16:20",
																"nodeType": "YulFunctionCall",
																"src": "7038:16:20"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7028:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7028:6:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "6876:184:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6923:9:20",
														"nodeType": "YulTypedName",
														"src": "6923:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6934:7:20",
														"nodeType": "YulTypedName",
														"src": "6934:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6946:6:20",
														"nodeType": "YulTypedName",
														"src": "6946:6:20",
														"type": ""
													}
												],
												"src": "6876:184:20"
											},
											{
												"body": {
													"nativeSrc": "7239:170:20",
													"nodeType": "YulBlock",
													"src": "7239:170:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7256:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "7256:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7267:2:20",
																		"nodeType": "YulLiteral",
																		"src": "7267:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7249:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7249:6:20"
																},
																"nativeSrc": "7249:21:20",
																"nodeType": "YulFunctionCall",
																"src": "7249:21:20"
															},
															"nativeSrc": "7249:21:20",
															"nodeType": "YulExpressionStatement",
															"src": "7249:21:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7290:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "7290:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7301:2:20",
																				"nodeType": "YulLiteral",
																				"src": "7301:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7286:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7286:3:20"
																		},
																		"nativeSrc": "7286:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7286:18:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7306:2:20",
																		"nodeType": "YulLiteral",
																		"src": "7306:2:20",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7279:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7279:6:20"
																},
																"nativeSrc": "7279:30:20",
																"nodeType": "YulFunctionCall",
																"src": "7279:30:20"
															},
															"nativeSrc": "7279:30:20",
															"nodeType": "YulExpressionStatement",
															"src": "7279:30:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7329:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "7329:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7340:2:20",
																				"nodeType": "YulLiteral",
																				"src": "7340:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7325:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7325:3:20"
																		},
																		"nativeSrc": "7325:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7325:18:20"
																	},
																	{
																		"hexValue": "696e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "7345:22:20",
																		"nodeType": "YulLiteral",
																		"src": "7345:22:20",
																		"type": "",
																		"value": "insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7318:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:20"
																},
																"nativeSrc": "7318:50:20",
																"nodeType": "YulFunctionCall",
																"src": "7318:50:20"
															},
															"nativeSrc": "7318:50:20",
															"nodeType": "YulExpressionStatement",
															"src": "7318:50:20"
														},
														{
															"nativeSrc": "7377:26:20",
															"nodeType": "YulAssignment",
															"src": "7377:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7389:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "7389:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7400:2:20",
																		"nodeType": "YulLiteral",
																		"src": "7400:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7385:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7385:3:20"
																},
																"nativeSrc": "7385:18:20",
																"nodeType": "YulFunctionCall",
																"src": "7385:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7377:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "7377:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7065:344:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7216:9:20",
														"nodeType": "YulTypedName",
														"src": "7216:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7230:4:20",
														"nodeType": "YulTypedName",
														"src": "7230:4:20",
														"type": ""
													}
												],
												"src": "7065:344:20"
											},
											{
												"body": {
													"nativeSrc": "7446:95:20",
													"nodeType": "YulBlock",
													"src": "7446:95:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7463:1:20",
																		"nodeType": "YulLiteral",
																		"src": "7463:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7470:3:20",
																				"nodeType": "YulLiteral",
																				"src": "7470:3:20",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7475:10:20",
																				"nodeType": "YulLiteral",
																				"src": "7475:10:20",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7466:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7466:3:20"
																		},
																		"nativeSrc": "7466:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7466:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7456:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7456:6:20"
																},
																"nativeSrc": "7456:31:20",
																"nodeType": "YulFunctionCall",
																"src": "7456:31:20"
															},
															"nativeSrc": "7456:31:20",
															"nodeType": "YulExpressionStatement",
															"src": "7456:31:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7503:1:20",
																		"nodeType": "YulLiteral",
																		"src": "7503:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7506:4:20",
																		"nodeType": "YulLiteral",
																		"src": "7506:4:20",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7496:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7496:6:20"
																},
																"nativeSrc": "7496:15:20",
																"nodeType": "YulFunctionCall",
																"src": "7496:15:20"
															},
															"nativeSrc": "7496:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "7496:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7527:1:20",
																		"nodeType": "YulLiteral",
																		"src": "7527:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7530:4:20",
																		"nodeType": "YulLiteral",
																		"src": "7530:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7520:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7520:6:20"
																},
																"nativeSrc": "7520:15:20",
																"nodeType": "YulFunctionCall",
																"src": "7520:15:20"
															},
															"nativeSrc": "7520:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "7520:15:20"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7414:127:20",
												"nodeType": "YulFunctionDefinition",
												"src": "7414:127:20"
											},
											{
												"body": {
													"nativeSrc": "7598:116:20",
													"nodeType": "YulBlock",
													"src": "7598:116:20",
													"statements": [
														{
															"nativeSrc": "7608:20:20",
															"nodeType": "YulAssignment",
															"src": "7608:20:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7623:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "7623:1:20"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7626:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "7626:1:20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7619:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7619:3:20"
																},
																"nativeSrc": "7619:9:20",
																"nodeType": "YulFunctionCall",
																"src": "7619:9:20"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7608:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "7608:7:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7686:22:20",
																"nodeType": "YulBlock",
																"src": "7686:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7688:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "7688:16:20"
																			},
																			"nativeSrc": "7688:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7688:18:20"
																		},
																		"nativeSrc": "7688:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "7688:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7657:1:20",
																						"nodeType": "YulIdentifier",
																						"src": "7657:1:20"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7650:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "7650:6:20"
																				},
																				"nativeSrc": "7650:9:20",
																				"nodeType": "YulFunctionCall",
																				"src": "7650:9:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7664:1:20",
																						"nodeType": "YulIdentifier",
																						"src": "7664:1:20"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7671:7:20",
																								"nodeType": "YulIdentifier",
																								"src": "7671:7:20"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7680:1:20",
																								"nodeType": "YulIdentifier",
																								"src": "7680:1:20"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7667:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "7667:3:20"
																						},
																						"nativeSrc": "7667:15:20",
																						"nodeType": "YulFunctionCall",
																						"src": "7667:15:20"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7661:2:20",
																					"nodeType": "YulIdentifier",
																					"src": "7661:2:20"
																				},
																				"nativeSrc": "7661:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "7661:22:20"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7647:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "7647:2:20"
																		},
																		"nativeSrc": "7647:37:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7647:37:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7640:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7640:6:20"
																},
																"nativeSrc": "7640:45:20",
																"nodeType": "YulFunctionCall",
																"src": "7640:45:20"
															},
															"nativeSrc": "7637:71:20",
															"nodeType": "YulIf",
															"src": "7637:71:20"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7546:168:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7577:1:20",
														"nodeType": "YulTypedName",
														"src": "7577:1:20",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7580:1:20",
														"nodeType": "YulTypedName",
														"src": "7580:1:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7586:7:20",
														"nodeType": "YulTypedName",
														"src": "7586:7:20",
														"type": ""
													}
												],
												"src": "7546:168:20"
											},
											{
												"body": {
													"nativeSrc": "7765:171:20",
													"nodeType": "YulBlock",
													"src": "7765:171:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "7796:111:20",
																"nodeType": "YulBlock",
																"src": "7796:111:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7817:1:20",
																					"nodeType": "YulLiteral",
																					"src": "7817:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7824:3:20",
																							"nodeType": "YulLiteral",
																							"src": "7824:3:20",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7829:10:20",
																							"nodeType": "YulLiteral",
																							"src": "7829:10:20",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "7820:3:20",
																						"nodeType": "YulIdentifier",
																						"src": "7820:3:20"
																					},
																					"nativeSrc": "7820:20:20",
																					"nodeType": "YulFunctionCall",
																					"src": "7820:20:20"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7810:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "7810:6:20"
																			},
																			"nativeSrc": "7810:31:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7810:31:20"
																		},
																		"nativeSrc": "7810:31:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "7810:31:20"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7861:1:20",
																					"nodeType": "YulLiteral",
																					"src": "7861:1:20",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7864:4:20",
																					"nodeType": "YulLiteral",
																					"src": "7864:4:20",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7854:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "7854:6:20"
																			},
																			"nativeSrc": "7854:15:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7854:15:20"
																		},
																		"nativeSrc": "7854:15:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "7854:15:20"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7889:1:20",
																					"nodeType": "YulLiteral",
																					"src": "7889:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7892:4:20",
																					"nodeType": "YulLiteral",
																					"src": "7892:4:20",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7882:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "7882:6:20"
																			},
																			"nativeSrc": "7882:15:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7882:15:20"
																		},
																		"nativeSrc": "7882:15:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "7882:15:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7785:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "7785:1:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7778:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7778:6:20"
																},
																"nativeSrc": "7778:9:20",
																"nodeType": "YulFunctionCall",
																"src": "7778:9:20"
															},
															"nativeSrc": "7775:132:20",
															"nodeType": "YulIf",
															"src": "7775:132:20"
														},
														{
															"nativeSrc": "7916:14:20",
															"nodeType": "YulAssignment",
															"src": "7916:14:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7925:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "7925:1:20"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7928:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "7928:1:20"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7921:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7921:3:20"
																},
																"nativeSrc": "7921:9:20",
																"nodeType": "YulFunctionCall",
																"src": "7921:9:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7916:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "7916:1:20"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7719:217:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7750:1:20",
														"nodeType": "YulTypedName",
														"src": "7750:1:20",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7753:1:20",
														"nodeType": "YulTypedName",
														"src": "7753:1:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7759:1:20",
														"nodeType": "YulTypedName",
														"src": "7759:1:20",
														"type": ""
													}
												],
												"src": "7719:217:20"
											},
											{
												"body": {
													"nativeSrc": "7990:79:20",
													"nodeType": "YulBlock",
													"src": "7990:79:20",
													"statements": [
														{
															"nativeSrc": "8000:17:20",
															"nodeType": "YulAssignment",
															"src": "8000:17:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8012:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "8012:1:20"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8015:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "8015:1:20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8008:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "8008:3:20"
																},
																"nativeSrc": "8008:9:20",
																"nodeType": "YulFunctionCall",
																"src": "8008:9:20"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8000:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "8000:4:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8041:22:20",
																"nodeType": "YulBlock",
																"src": "8041:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8043:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "8043:16:20"
																			},
																			"nativeSrc": "8043:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "8043:18:20"
																		},
																		"nativeSrc": "8043:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "8043:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8032:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "8032:4:20"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8038:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "8038:1:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8029:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "8029:2:20"
																},
																"nativeSrc": "8029:11:20",
																"nodeType": "YulFunctionCall",
																"src": "8029:11:20"
															},
															"nativeSrc": "8026:37:20",
															"nodeType": "YulIf",
															"src": "8026:37:20"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7941:128:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7972:1:20",
														"nodeType": "YulTypedName",
														"src": "7972:1:20",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7975:1:20",
														"nodeType": "YulTypedName",
														"src": "7975:1:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7981:4:20",
														"nodeType": "YulTypedName",
														"src": "7981:4:20",
														"type": ""
													}
												],
												"src": "7941:128:20"
											},
											{
												"body": {
													"nativeSrc": "8231:162:20",
													"nodeType": "YulBlock",
													"src": "8231:162:20",
													"statements": [
														{
															"nativeSrc": "8241:26:20",
															"nodeType": "YulAssignment",
															"src": "8241:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8253:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "8253:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8264:2:20",
																		"nodeType": "YulLiteral",
																		"src": "8264:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8249:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "8249:3:20"
																},
																"nativeSrc": "8249:18:20",
																"nodeType": "YulFunctionCall",
																"src": "8249:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8241:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "8241:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8283:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "8283:9:20"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "8294:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8294:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8276:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8276:6:20"
																},
																"nativeSrc": "8276:25:20",
																"nodeType": "YulFunctionCall",
																"src": "8276:25:20"
															},
															"nativeSrc": "8276:25:20",
															"nodeType": "YulExpressionStatement",
															"src": "8276:25:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8321:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8321:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8332:2:20",
																				"nodeType": "YulLiteral",
																				"src": "8332:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8317:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8317:3:20"
																		},
																		"nativeSrc": "8317:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8317:18:20"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8337:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8337:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8310:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8310:6:20"
																},
																"nativeSrc": "8310:34:20",
																"nodeType": "YulFunctionCall",
																"src": "8310:34:20"
															},
															"nativeSrc": "8310:34:20",
															"nodeType": "YulExpressionStatement",
															"src": "8310:34:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8364:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8364:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8375:2:20",
																				"nodeType": "YulLiteral",
																				"src": "8375:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8360:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8360:3:20"
																		},
																		"nativeSrc": "8360:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8360:18:20"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8380:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8380:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8353:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8353:6:20"
																},
																"nativeSrc": "8353:34:20",
																"nodeType": "YulFunctionCall",
																"src": "8353:34:20"
															},
															"nativeSrc": "8353:34:20",
															"nodeType": "YulExpressionStatement",
															"src": "8353:34:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8074:319:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8184:9:20",
														"nodeType": "YulTypedName",
														"src": "8184:9:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8195:6:20",
														"nodeType": "YulTypedName",
														"src": "8195:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8203:6:20",
														"nodeType": "YulTypedName",
														"src": "8203:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8211:6:20",
														"nodeType": "YulTypedName",
														"src": "8211:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8222:4:20",
														"nodeType": "YulTypedName",
														"src": "8222:4:20",
														"type": ""
													}
												],
												"src": "8074:319:20"
											},
											{
												"body": {
													"nativeSrc": "8506:101:20",
													"nodeType": "YulBlock",
													"src": "8506:101:20",
													"statements": [
														{
															"nativeSrc": "8516:26:20",
															"nodeType": "YulAssignment",
															"src": "8516:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8528:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "8528:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8539:2:20",
																		"nodeType": "YulLiteral",
																		"src": "8539:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8524:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "8524:3:20"
																},
																"nativeSrc": "8524:18:20",
																"nodeType": "YulFunctionCall",
																"src": "8524:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8516:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "8516:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8558:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "8558:9:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8573:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "8573:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8581:18:20",
																				"nodeType": "YulLiteral",
																				"src": "8581:18:20",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8569:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8569:3:20"
																		},
																		"nativeSrc": "8569:31:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8569:31:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8551:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8551:6:20"
																},
																"nativeSrc": "8551:50:20",
																"nodeType": "YulFunctionCall",
																"src": "8551:50:20"
															},
															"nativeSrc": "8551:50:20",
															"nodeType": "YulExpressionStatement",
															"src": "8551:50:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "8398:209:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8475:9:20",
														"nodeType": "YulTypedName",
														"src": "8475:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8486:6:20",
														"nodeType": "YulTypedName",
														"src": "8486:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8497:4:20",
														"nodeType": "YulTypedName",
														"src": "8497:4:20",
														"type": ""
													}
												],
												"src": "8398:209:20"
											},
											{
												"body": {
													"nativeSrc": "8693:103:20",
													"nodeType": "YulBlock",
													"src": "8693:103:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "8739:16:20",
																"nodeType": "YulBlock",
																"src": "8739:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8748:1:20",
																					"nodeType": "YulLiteral",
																					"src": "8748:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8751:1:20",
																					"nodeType": "YulLiteral",
																					"src": "8751:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8741:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "8741:6:20"
																			},
																			"nativeSrc": "8741:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "8741:12:20"
																		},
																		"nativeSrc": "8741:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "8741:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8714:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "8714:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8723:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8723:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8710:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8710:3:20"
																		},
																		"nativeSrc": "8710:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8710:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8735:2:20",
																		"nodeType": "YulLiteral",
																		"src": "8735:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8706:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "8706:3:20"
																},
																"nativeSrc": "8706:32:20",
																"nodeType": "YulFunctionCall",
																"src": "8706:32:20"
															},
															"nativeSrc": "8703:52:20",
															"nodeType": "YulIf",
															"src": "8703:52:20"
														},
														{
															"nativeSrc": "8764:26:20",
															"nodeType": "YulAssignment",
															"src": "8764:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8780:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "8780:9:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8774:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "8774:5:20"
																},
																"nativeSrc": "8774:16:20",
																"nodeType": "YulFunctionCall",
																"src": "8774:16:20"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8764:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8764:6:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "8612:184:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8659:9:20",
														"nodeType": "YulTypedName",
														"src": "8659:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8670:7:20",
														"nodeType": "YulTypedName",
														"src": "8670:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8682:6:20",
														"nodeType": "YulTypedName",
														"src": "8682:6:20",
														"type": ""
													}
												],
												"src": "8612:184:20"
											},
											{
												"body": {
													"nativeSrc": "8947:587:20",
													"nodeType": "YulBlock",
													"src": "8947:587:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "8994:16:20",
																"nodeType": "YulBlock",
																"src": "8994:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9003:1:20",
																					"nodeType": "YulLiteral",
																					"src": "9003:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9006:1:20",
																					"nodeType": "YulLiteral",
																					"src": "9006:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8996:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "8996:6:20"
																			},
																			"nativeSrc": "8996:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "8996:12:20"
																		},
																		"nativeSrc": "8996:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "8996:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8968:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "8968:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8977:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8977:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8964:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8964:3:20"
																		},
																		"nativeSrc": "8964:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8964:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8989:3:20",
																		"nodeType": "YulLiteral",
																		"src": "8989:3:20",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8960:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "8960:3:20"
																},
																"nativeSrc": "8960:33:20",
																"nodeType": "YulFunctionCall",
																"src": "8960:33:20"
															},
															"nativeSrc": "8957:53:20",
															"nodeType": "YulIf",
															"src": "8957:53:20"
														},
														{
															"nativeSrc": "9019:36:20",
															"nodeType": "YulVariableDeclaration",
															"src": "9019:36:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9045:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "9045:9:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9032:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "9032:12:20"
																},
																"nativeSrc": "9032:23:20",
																"nodeType": "YulFunctionCall",
																"src": "9032:23:20"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "9023:5:20",
																	"nodeType": "YulTypedName",
																	"src": "9023:5:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9089:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "9089:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "9064:24:20",
																	"nodeType": "YulIdentifier",
																	"src": "9064:24:20"
																},
																"nativeSrc": "9064:31:20",
																"nodeType": "YulFunctionCall",
																"src": "9064:31:20"
															},
															"nativeSrc": "9064:31:20",
															"nodeType": "YulExpressionStatement",
															"src": "9064:31:20"
														},
														{
															"nativeSrc": "9104:15:20",
															"nodeType": "YulAssignment",
															"src": "9104:15:20",
															"value": {
																"name": "value",
																"nativeSrc": "9114:5:20",
																"nodeType": "YulIdentifier",
																"src": "9114:5:20"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9104:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "9104:6:20"
																}
															]
														},
														{
															"nativeSrc": "9128:47:20",
															"nodeType": "YulVariableDeclaration",
															"src": "9128:47:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9160:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "9160:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9171:2:20",
																				"nodeType": "YulLiteral",
																				"src": "9171:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9156:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9156:3:20"
																		},
																		"nativeSrc": "9156:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9156:18:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9143:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "9143:12:20"
																},
																"nativeSrc": "9143:32:20",
																"nodeType": "YulFunctionCall",
																"src": "9143:32:20"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "9132:7:20",
																	"nodeType": "YulTypedName",
																	"src": "9132:7:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "9209:7:20",
																		"nodeType": "YulIdentifier",
																		"src": "9209:7:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "9184:24:20",
																	"nodeType": "YulIdentifier",
																	"src": "9184:24:20"
																},
																"nativeSrc": "9184:33:20",
																"nodeType": "YulFunctionCall",
																"src": "9184:33:20"
															},
															"nativeSrc": "9184:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "9184:33:20"
														},
														{
															"nativeSrc": "9226:17:20",
															"nodeType": "YulAssignment",
															"src": "9226:17:20",
															"value": {
																"name": "value_1",
																"nativeSrc": "9236:7:20",
																"nodeType": "YulIdentifier",
																"src": "9236:7:20"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "9226:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "9226:6:20"
																}
															]
														},
														{
															"nativeSrc": "9252:16:20",
															"nodeType": "YulVariableDeclaration",
															"src": "9252:16:20",
															"value": {
																"kind": "number",
																"nativeSrc": "9267:1:20",
																"nodeType": "YulLiteral",
																"src": "9267:1:20",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "9256:7:20",
																	"nodeType": "YulTypedName",
																	"src": "9256:7:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9277:43:20",
															"nodeType": "YulAssignment",
															"src": "9277:43:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9305:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "9305:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9316:2:20",
																				"nodeType": "YulLiteral",
																				"src": "9316:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9301:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9301:3:20"
																		},
																		"nativeSrc": "9301:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9301:18:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9288:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "9288:12:20"
																},
																"nativeSrc": "9288:32:20",
																"nodeType": "YulFunctionCall",
																"src": "9288:32:20"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "9277:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "9277:7:20"
																}
															]
														},
														{
															"nativeSrc": "9329:17:20",
															"nodeType": "YulAssignment",
															"src": "9329:17:20",
															"value": {
																"name": "value_2",
																"nativeSrc": "9339:7:20",
																"nodeType": "YulIdentifier",
																"src": "9339:7:20"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "9329:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "9329:6:20"
																}
															]
														},
														{
															"nativeSrc": "9355:46:20",
															"nodeType": "YulVariableDeclaration",
															"src": "9355:46:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9386:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "9386:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9397:2:20",
																				"nodeType": "YulLiteral",
																				"src": "9397:2:20",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9382:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9382:3:20"
																		},
																		"nativeSrc": "9382:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9382:18:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9369:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "9369:12:20"
																},
																"nativeSrc": "9369:32:20",
																"nodeType": "YulFunctionCall",
																"src": "9369:32:20"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "9359:6:20",
																	"nodeType": "YulTypedName",
																	"src": "9359:6:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9444:16:20",
																"nodeType": "YulBlock",
																"src": "9444:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9453:1:20",
																					"nodeType": "YulLiteral",
																					"src": "9453:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9456:1:20",
																					"nodeType": "YulLiteral",
																					"src": "9456:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9446:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "9446:6:20"
																			},
																			"nativeSrc": "9446:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "9446:12:20"
																		},
																		"nativeSrc": "9446:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "9446:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9416:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9416:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9424:18:20",
																		"nodeType": "YulLiteral",
																		"src": "9424:18:20",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9413:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "9413:2:20"
																},
																"nativeSrc": "9413:30:20",
																"nodeType": "YulFunctionCall",
																"src": "9413:30:20"
															},
															"nativeSrc": "9410:50:20",
															"nodeType": "YulIf",
															"src": "9410:50:20"
														},
														{
															"nativeSrc": "9469:59:20",
															"nodeType": "YulAssignment",
															"src": "9469:59:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9500:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "9500:9:20"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "9511:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "9511:6:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9496:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9496:3:20"
																		},
																		"nativeSrc": "9496:22:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9496:22:20"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "9520:7:20",
																		"nodeType": "YulIdentifier",
																		"src": "9520:7:20"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nativeSrc": "9479:16:20",
																	"nodeType": "YulIdentifier",
																	"src": "9479:16:20"
																},
																"nativeSrc": "9479:49:20",
																"nodeType": "YulFunctionCall",
																"src": "9479:49:20"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "9469:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "9469:6:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_address_payablet_uint256t_bytes_memory_ptr",
												"nativeSrc": "8801:733:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8889:9:20",
														"nodeType": "YulTypedName",
														"src": "8889:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8900:7:20",
														"nodeType": "YulTypedName",
														"src": "8900:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8912:6:20",
														"nodeType": "YulTypedName",
														"src": "8912:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8920:6:20",
														"nodeType": "YulTypedName",
														"src": "8920:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8928:6:20",
														"nodeType": "YulTypedName",
														"src": "8928:6:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8936:6:20",
														"nodeType": "YulTypedName",
														"src": "8936:6:20",
														"type": ""
													}
												],
												"src": "8801:733:20"
											},
											{
												"body": {
													"nativeSrc": "9668:171:20",
													"nodeType": "YulBlock",
													"src": "9668:171:20",
													"statements": [
														{
															"nativeSrc": "9678:26:20",
															"nodeType": "YulAssignment",
															"src": "9678:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9690:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "9690:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9701:2:20",
																		"nodeType": "YulLiteral",
																		"src": "9701:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9686:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "9686:3:20"
																},
																"nativeSrc": "9686:18:20",
																"nodeType": "YulFunctionCall",
																"src": "9686:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9678:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "9678:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9720:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "9720:9:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9735:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "9735:6:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9751:3:20",
																								"nodeType": "YulLiteral",
																								"src": "9751:3:20",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9756:1:20",
																								"nodeType": "YulLiteral",
																								"src": "9756:1:20",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9747:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "9747:3:20"
																						},
																						"nativeSrc": "9747:11:20",
																						"nodeType": "YulFunctionCall",
																						"src": "9747:11:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9760:1:20",
																						"nodeType": "YulLiteral",
																						"src": "9760:1:20",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9743:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "9743:3:20"
																				},
																				"nativeSrc": "9743:19:20",
																				"nodeType": "YulFunctionCall",
																				"src": "9743:19:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9731:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9731:3:20"
																		},
																		"nativeSrc": "9731:32:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9731:32:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9713:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "9713:6:20"
																},
																"nativeSrc": "9713:51:20",
																"nodeType": "YulFunctionCall",
																"src": "9713:51:20"
															},
															"nativeSrc": "9713:51:20",
															"nodeType": "YulExpressionStatement",
															"src": "9713:51:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9784:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "9784:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9795:2:20",
																				"nodeType": "YulLiteral",
																				"src": "9795:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9780:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9780:3:20"
																		},
																		"nativeSrc": "9780:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9780:18:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9804:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "9804:6:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9820:3:20",
																								"nodeType": "YulLiteral",
																								"src": "9820:3:20",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9825:1:20",
																								"nodeType": "YulLiteral",
																								"src": "9825:1:20",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9816:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "9816:3:20"
																						},
																						"nativeSrc": "9816:11:20",
																						"nodeType": "YulFunctionCall",
																						"src": "9816:11:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9829:1:20",
																						"nodeType": "YulLiteral",
																						"src": "9829:1:20",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9812:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "9812:3:20"
																				},
																				"nativeSrc": "9812:19:20",
																				"nodeType": "YulFunctionCall",
																				"src": "9812:19:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9800:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9800:3:20"
																		},
																		"nativeSrc": "9800:32:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9800:32:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9773:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "9773:6:20"
																},
																"nativeSrc": "9773:60:20",
																"nodeType": "YulFunctionCall",
																"src": "9773:60:20"
															},
															"nativeSrc": "9773:60:20",
															"nodeType": "YulExpressionStatement",
															"src": "9773:60:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "9539:300:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9629:9:20",
														"nodeType": "YulTypedName",
														"src": "9629:9:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9640:6:20",
														"nodeType": "YulTypedName",
														"src": "9640:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9648:6:20",
														"nodeType": "YulTypedName",
														"src": "9648:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9659:4:20",
														"nodeType": "YulTypedName",
														"src": "9659:4:20",
														"type": ""
													}
												],
												"src": "9539:300:20"
											},
											{
												"body": {
													"nativeSrc": "9973:145:20",
													"nodeType": "YulBlock",
													"src": "9973:145:20",
													"statements": [
														{
															"nativeSrc": "9983:26:20",
															"nodeType": "YulAssignment",
															"src": "9983:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9995:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "9995:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10006:2:20",
																		"nodeType": "YulLiteral",
																		"src": "10006:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9991:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "9991:3:20"
																},
																"nativeSrc": "9991:18:20",
																"nodeType": "YulFunctionCall",
																"src": "9991:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9983:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "9983:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10025:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "10025:9:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10040:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "10040:6:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10056:3:20",
																								"nodeType": "YulLiteral",
																								"src": "10056:3:20",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10061:1:20",
																								"nodeType": "YulLiteral",
																								"src": "10061:1:20",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10052:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "10052:3:20"
																						},
																						"nativeSrc": "10052:11:20",
																						"nodeType": "YulFunctionCall",
																						"src": "10052:11:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10065:1:20",
																						"nodeType": "YulLiteral",
																						"src": "10065:1:20",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10048:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "10048:3:20"
																				},
																				"nativeSrc": "10048:19:20",
																				"nodeType": "YulFunctionCall",
																				"src": "10048:19:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10036:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10036:3:20"
																		},
																		"nativeSrc": "10036:32:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10036:32:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10018:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "10018:6:20"
																},
																"nativeSrc": "10018:51:20",
																"nodeType": "YulFunctionCall",
																"src": "10018:51:20"
															},
															"nativeSrc": "10018:51:20",
															"nodeType": "YulExpressionStatement",
															"src": "10018:51:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10089:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "10089:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10100:2:20",
																				"nodeType": "YulLiteral",
																				"src": "10100:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10085:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10085:3:20"
																		},
																		"nativeSrc": "10085:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10085:18:20"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "10105:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "10105:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10078:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "10078:6:20"
																},
																"nativeSrc": "10078:34:20",
																"nodeType": "YulFunctionCall",
																"src": "10078:34:20"
															},
															"nativeSrc": "10078:34:20",
															"nodeType": "YulExpressionStatement",
															"src": "10078:34:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9844:274:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9934:9:20",
														"nodeType": "YulTypedName",
														"src": "9934:9:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9945:6:20",
														"nodeType": "YulTypedName",
														"src": "9945:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9953:6:20",
														"nodeType": "YulTypedName",
														"src": "9953:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9964:4:20",
														"nodeType": "YulTypedName",
														"src": "9964:4:20",
														"type": ""
													}
												],
												"src": "9844:274:20"
											},
											{
												"body": {
													"nativeSrc": "10201:199:20",
													"nodeType": "YulBlock",
													"src": "10201:199:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "10247:16:20",
																"nodeType": "YulBlock",
																"src": "10247:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10256:1:20",
																					"nodeType": "YulLiteral",
																					"src": "10256:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10259:1:20",
																					"nodeType": "YulLiteral",
																					"src": "10259:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10249:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "10249:6:20"
																			},
																			"nativeSrc": "10249:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "10249:12:20"
																		},
																		"nativeSrc": "10249:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "10249:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10222:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "10222:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10231:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "10231:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10218:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10218:3:20"
																		},
																		"nativeSrc": "10218:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10218:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10243:2:20",
																		"nodeType": "YulLiteral",
																		"src": "10243:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10214:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "10214:3:20"
																},
																"nativeSrc": "10214:32:20",
																"nodeType": "YulFunctionCall",
																"src": "10214:32:20"
															},
															"nativeSrc": "10211:52:20",
															"nodeType": "YulIf",
															"src": "10211:52:20"
														},
														{
															"nativeSrc": "10272:29:20",
															"nodeType": "YulVariableDeclaration",
															"src": "10272:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10291:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "10291:9:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10285:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "10285:5:20"
																},
																"nativeSrc": "10285:16:20",
																"nodeType": "YulFunctionCall",
																"src": "10285:16:20"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "10276:5:20",
																	"nodeType": "YulTypedName",
																	"src": "10276:5:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10354:16:20",
																"nodeType": "YulBlock",
																"src": "10354:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10363:1:20",
																					"nodeType": "YulLiteral",
																					"src": "10363:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10366:1:20",
																					"nodeType": "YulLiteral",
																					"src": "10366:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10356:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "10356:6:20"
																			},
																			"nativeSrc": "10356:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "10356:12:20"
																		},
																		"nativeSrc": "10356:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "10356:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10323:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "10323:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "10344:5:20",
																								"nodeType": "YulIdentifier",
																								"src": "10344:5:20"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "10337:6:20",
																							"nodeType": "YulIdentifier",
																							"src": "10337:6:20"
																						},
																						"nativeSrc": "10337:13:20",
																						"nodeType": "YulFunctionCall",
																						"src": "10337:13:20"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10330:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "10330:6:20"
																				},
																				"nativeSrc": "10330:21:20",
																				"nodeType": "YulFunctionCall",
																				"src": "10330:21:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10320:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "10320:2:20"
																		},
																		"nativeSrc": "10320:32:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10320:32:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10313:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "10313:6:20"
																},
																"nativeSrc": "10313:40:20",
																"nodeType": "YulFunctionCall",
																"src": "10313:40:20"
															},
															"nativeSrc": "10310:60:20",
															"nodeType": "YulIf",
															"src": "10310:60:20"
														},
														{
															"nativeSrc": "10379:15:20",
															"nodeType": "YulAssignment",
															"src": "10379:15:20",
															"value": {
																"name": "value",
																"nativeSrc": "10389:5:20",
																"nodeType": "YulIdentifier",
																"src": "10389:5:20"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "10379:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "10379:6:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "10123:277:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10167:9:20",
														"nodeType": "YulTypedName",
														"src": "10167:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10178:7:20",
														"nodeType": "YulTypedName",
														"src": "10178:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10190:6:20",
														"nodeType": "YulTypedName",
														"src": "10190:6:20",
														"type": ""
													}
												],
												"src": "10123:277:20"
											},
											{
												"body": {
													"nativeSrc": "10542:150:20",
													"nodeType": "YulBlock",
													"src": "10542:150:20",
													"statements": [
														{
															"nativeSrc": "10552:27:20",
															"nodeType": "YulVariableDeclaration",
															"src": "10552:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10572:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "10572:6:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10566:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "10566:5:20"
																},
																"nativeSrc": "10566:13:20",
																"nodeType": "YulFunctionCall",
																"src": "10566:13:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10556:6:20",
																	"nodeType": "YulTypedName",
																	"src": "10556:6:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10627:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "10627:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10635:4:20",
																				"nodeType": "YulLiteral",
																				"src": "10635:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10623:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10623:3:20"
																		},
																		"nativeSrc": "10623:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10623:17:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10642:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "10642:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10647:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "10647:6:20"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10588:34:20",
																	"nodeType": "YulIdentifier",
																	"src": "10588:34:20"
																},
																"nativeSrc": "10588:66:20",
																"nodeType": "YulFunctionCall",
																"src": "10588:66:20"
															},
															"nativeSrc": "10588:66:20",
															"nodeType": "YulExpressionStatement",
															"src": "10588:66:20"
														},
														{
															"nativeSrc": "10663:23:20",
															"nodeType": "YulAssignment",
															"src": "10663:23:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10674:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "10674:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10679:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "10679:6:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10670:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "10670:3:20"
																},
																"nativeSrc": "10670:16:20",
																"nodeType": "YulFunctionCall",
																"src": "10670:16:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10663:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "10663:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10405:287:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10518:3:20",
														"nodeType": "YulTypedName",
														"src": "10518:3:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10523:6:20",
														"nodeType": "YulTypedName",
														"src": "10523:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10534:3:20",
														"nodeType": "YulTypedName",
														"src": "10534:3:20",
														"type": ""
													}
												],
												"src": "10405:287:20"
											},
											{
												"body": {
													"nativeSrc": "10871:161:20",
													"nodeType": "YulBlock",
													"src": "10871:161:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10888:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "10888:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10899:2:20",
																		"nodeType": "YulLiteral",
																		"src": "10899:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10881:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "10881:6:20"
																},
																"nativeSrc": "10881:21:20",
																"nodeType": "YulFunctionCall",
																"src": "10881:21:20"
															},
															"nativeSrc": "10881:21:20",
															"nodeType": "YulExpressionStatement",
															"src": "10881:21:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10922:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "10922:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10933:2:20",
																				"nodeType": "YulLiteral",
																				"src": "10933:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10918:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10918:3:20"
																		},
																		"nativeSrc": "10918:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10918:18:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10938:2:20",
																		"nodeType": "YulLiteral",
																		"src": "10938:2:20",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10911:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "10911:6:20"
																},
																"nativeSrc": "10911:30:20",
																"nodeType": "YulFunctionCall",
																"src": "10911:30:20"
															},
															"nativeSrc": "10911:30:20",
															"nodeType": "YulExpressionStatement",
															"src": "10911:30:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10961:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "10961:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10972:2:20",
																				"nodeType": "YulLiteral",
																				"src": "10972:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10957:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10957:3:20"
																		},
																		"nativeSrc": "10957:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10957:18:20"
																	},
																	{
																		"hexValue": "73776170206661696c6564",
																		"kind": "string",
																		"nativeSrc": "10977:13:20",
																		"nodeType": "YulLiteral",
																		"src": "10977:13:20",
																		"type": "",
																		"value": "swap failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10950:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "10950:6:20"
																},
																"nativeSrc": "10950:41:20",
																"nodeType": "YulFunctionCall",
																"src": "10950:41:20"
															},
															"nativeSrc": "10950:41:20",
															"nodeType": "YulExpressionStatement",
															"src": "10950:41:20"
														},
														{
															"nativeSrc": "11000:26:20",
															"nodeType": "YulAssignment",
															"src": "11000:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11012:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "11012:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11023:2:20",
																		"nodeType": "YulLiteral",
																		"src": "11023:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11008:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "11008:3:20"
																},
																"nativeSrc": "11008:18:20",
																"nodeType": "YulFunctionCall",
																"src": "11008:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11000:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "11000:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ee78873f086b2b9a8a45bd119503afa5de538f219e8ce800bdc0024dff6b2f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10697:335:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10848:9:20",
														"nodeType": "YulTypedName",
														"src": "10848:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10862:4:20",
														"nodeType": "YulTypedName",
														"src": "10862:4:20",
														"type": ""
													}
												],
												"src": "10697:335:20"
											},
											{
												"body": {
													"nativeSrc": "11069:95:20",
													"nodeType": "YulBlock",
													"src": "11069:95:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11086:1:20",
																		"nodeType": "YulLiteral",
																		"src": "11086:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11093:3:20",
																				"nodeType": "YulLiteral",
																				"src": "11093:3:20",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11098:10:20",
																				"nodeType": "YulLiteral",
																				"src": "11098:10:20",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "11089:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "11089:3:20"
																		},
																		"nativeSrc": "11089:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11089:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11079:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11079:6:20"
																},
																"nativeSrc": "11079:31:20",
																"nodeType": "YulFunctionCall",
																"src": "11079:31:20"
															},
															"nativeSrc": "11079:31:20",
															"nodeType": "YulExpressionStatement",
															"src": "11079:31:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11126:1:20",
																		"nodeType": "YulLiteral",
																		"src": "11126:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11129:4:20",
																		"nodeType": "YulLiteral",
																		"src": "11129:4:20",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11119:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11119:6:20"
																},
																"nativeSrc": "11119:15:20",
																"nodeType": "YulFunctionCall",
																"src": "11119:15:20"
															},
															"nativeSrc": "11119:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "11119:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11150:1:20",
																		"nodeType": "YulLiteral",
																		"src": "11150:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11153:4:20",
																		"nodeType": "YulLiteral",
																		"src": "11153:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11143:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11143:6:20"
																},
																"nativeSrc": "11143:15:20",
																"nodeType": "YulFunctionCall",
																"src": "11143:15:20"
															},
															"nativeSrc": "11143:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "11143:15:20"
														}
													]
												},
												"name": "panic_error_0x01",
												"nativeSrc": "11037:127:20",
												"nodeType": "YulFunctionDefinition",
												"src": "11037:127:20"
											},
											{
												"body": {
													"nativeSrc": "11326:214:20",
													"nodeType": "YulBlock",
													"src": "11326:214:20",
													"statements": [
														{
															"nativeSrc": "11336:26:20",
															"nodeType": "YulAssignment",
															"src": "11336:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11348:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "11348:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11359:2:20",
																		"nodeType": "YulLiteral",
																		"src": "11359:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11344:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "11344:3:20"
																},
																"nativeSrc": "11344:18:20",
																"nodeType": "YulFunctionCall",
																"src": "11344:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11336:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "11336:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11378:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "11378:9:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11393:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "11393:6:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11409:3:20",
																								"nodeType": "YulLiteral",
																								"src": "11409:3:20",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11414:1:20",
																								"nodeType": "YulLiteral",
																								"src": "11414:1:20",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11405:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "11405:3:20"
																						},
																						"nativeSrc": "11405:11:20",
																						"nodeType": "YulFunctionCall",
																						"src": "11405:11:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11418:1:20",
																						"nodeType": "YulLiteral",
																						"src": "11418:1:20",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11401:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "11401:3:20"
																				},
																				"nativeSrc": "11401:19:20",
																				"nodeType": "YulFunctionCall",
																				"src": "11401:19:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11389:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "11389:3:20"
																		},
																		"nativeSrc": "11389:32:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11389:32:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11371:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11371:6:20"
																},
																"nativeSrc": "11371:51:20",
																"nodeType": "YulFunctionCall",
																"src": "11371:51:20"
															},
															"nativeSrc": "11371:51:20",
															"nodeType": "YulExpressionStatement",
															"src": "11371:51:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11442:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "11442:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11453:2:20",
																				"nodeType": "YulLiteral",
																				"src": "11453:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11438:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "11438:3:20"
																		},
																		"nativeSrc": "11438:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11438:18:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11462:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "11462:6:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11478:3:20",
																								"nodeType": "YulLiteral",
																								"src": "11478:3:20",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11483:1:20",
																								"nodeType": "YulLiteral",
																								"src": "11483:1:20",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11474:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "11474:3:20"
																						},
																						"nativeSrc": "11474:11:20",
																						"nodeType": "YulFunctionCall",
																						"src": "11474:11:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11487:1:20",
																						"nodeType": "YulLiteral",
																						"src": "11487:1:20",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11470:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "11470:3:20"
																				},
																				"nativeSrc": "11470:19:20",
																				"nodeType": "YulFunctionCall",
																				"src": "11470:19:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11458:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "11458:3:20"
																		},
																		"nativeSrc": "11458:32:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11458:32:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11431:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11431:6:20"
																},
																"nativeSrc": "11431:60:20",
																"nodeType": "YulFunctionCall",
																"src": "11431:60:20"
															},
															"nativeSrc": "11431:60:20",
															"nodeType": "YulExpressionStatement",
															"src": "11431:60:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11511:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "11511:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11522:2:20",
																				"nodeType": "YulLiteral",
																				"src": "11522:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11507:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "11507:3:20"
																		},
																		"nativeSrc": "11507:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11507:18:20"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "11527:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "11527:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11500:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11500:6:20"
																},
																"nativeSrc": "11500:34:20",
																"nodeType": "YulFunctionCall",
																"src": "11500:34:20"
															},
															"nativeSrc": "11500:34:20",
															"nodeType": "YulExpressionStatement",
															"src": "11500:34:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11169:371:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11279:9:20",
														"nodeType": "YulTypedName",
														"src": "11279:9:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11290:6:20",
														"nodeType": "YulTypedName",
														"src": "11290:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11298:6:20",
														"nodeType": "YulTypedName",
														"src": "11298:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11306:6:20",
														"nodeType": "YulTypedName",
														"src": "11306:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11317:4:20",
														"nodeType": "YulTypedName",
														"src": "11317:4:20",
														"type": ""
													}
												],
												"src": "11169:371:20"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptrt_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, length), 0x20), dataEnd) { revert(0, 0) }\n        value0 := add(_1, 0x20)\n        value1 := length\n        let value := calldataload(add(headStart, 0x20))\n        validator_revert_address(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_f70c5f7c2b08d32da6024b33d1b4b5ee6bcf0e8e8a5ac32fe66bf794c4d8e476__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"zero address params\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid admin address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_55c2b76370d5d427f52c6d12dc9e48fce27eadb826533977b2f868874e0f017c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"amount == 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_62cac98c7f03b33e8dddfe58c00dd8211de9f9167c478e0f775c21754a69135a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"invalid tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9287f6fe4436a085162c38b7c9e1f89cec60c0173d9388e22663028de9128448__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"src token == dst token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_797f8a7eb79a2e9138e391d6393592c240f4354ba78950ece5fed1af0d3777f6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"caller != swapper\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ce6c4ea39c501f8c7c12a9194d99cb871ed34c46e9c10eeac69413f219aa96cd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"msg.value != amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4aaab178ce62c9aa293f84821bdadc1685de02663fdcdb8a26121ae462ae0e7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"msg.value != 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_address_payablet_address_payablet_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_ee78873f086b2b9a8a45bd119503afa5de538f219e8ce800bdc0024dff6b2f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"swap failed\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x01()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 20,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"468": [
									{
										"length": 32,
										"start": 3358
									},
									{
										"length": 32,
										"start": 3399
									},
									{
										"length": 32,
										"start": 3720
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106101185760003560e01c8063715018a6116100a0578063ae0caeb311610064578063ae0caeb314610321578063bf16f65a14610334578063c4d66de814610354578063f2fde38b14610374578063f8b2cb4f1461039457600080fd5b8063715018a6146102665780638456cb591461027b5780638da5cb5b14610290578063a4ac0d49146102cd578063ad3cb1cc146102e357600080fd5b806352d1902d116100e757806352d1902d146101b3578063540907bb146101d65780635c975abb146101f65780635dc0b76914610226578063704802751461024657600080fd5b80630380fd031461012457806331f7d964146101615780633f4ba83a146101895780634f1ef286146101a057600080fd5b3661011f57005b600080fd5b34801561013057600080fd5b50600054610144906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561016d57600080fd5b5061014473eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b34801561019557600080fd5b5061019e6103b4565b005b61019e6101ae366004611711565b6103c6565b3480156101bf57600080fd5b506101c86103e5565b604051908152602001610158565b3480156101e257600080fd5b5061019e6101f1366004611761565b610402565b34801561020257600080fd5b506000805160206119d08339815191525460ff166040519015158152602001610158565b34801561023257600080fd5b50600154610144906001600160a01b031681565b34801561025257600080fd5b5061019e610261366004611761565b61047d565b34801561027257600080fd5b5061019e61051d565b34801561028757600080fd5b5061019e61052f565b34801561029c57600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b0316610144565b3480156102d957600080fd5b506101c860025481565b3480156102ef57600080fd5b50610314604051806040016040528060058152602001640352e302e360dc1b81525081565b60405161015891906117a2565b61019e61032f3660046117d5565b61053f565b34801561034057600080fd5b5061019e61034f36600461185b565b6109f8565b34801561036057600080fd5b5061019e61036f366004611761565b610a3c565b34801561038057600080fd5b5061019e61038f366004611761565b610b84565b3480156103a057600080fd5b506101c86103af366004611761565b610bc2565b6103bc610c5e565b6103c4610cb9565b565b6103ce610d13565b6103d782610db8565b6103e18282610dc0565b5050565b60006103ef610e7d565b506000805160206119b083398151915290565b61040a610c5e565b6001600160a01b03811661045b5760405162461bcd60e51b81526020600482015260136024820152727a65726f206164647265737320706172616d7360681b60448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b610485610c5e565b6001600160a01b0381166104d35760405162461bcd60e51b8152602060048201526015602482015274496e76616c69642061646d696e206164647265737360581b6044820152606401610452565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b610525610c5e565b6103c46000610ec6565b610537610c5e565b6103c4610f37565b610547610f80565b61054f610fb1565b600061055b8484610ffb565b9050806040015160000361059f5760405162461bcd60e51b815260206004820152600b60248201526a0616d6f756e74203d3d20360ac1b6044820152606401610452565b80516001600160a01b0316158015906105c4575060208101516001600160a01b031615155b6106015760405162461bcd60e51b815260206004820152600e60248201526d696e76616c696420746f6b656e7360901b6044820152606401610452565b80602001516001600160a01b031681600001516001600160a01b0316036106635760405162461bcd60e51b815260206004820152601660248201527539b931903a37b5b2b7101e9e903239ba103a37b5b2b760511b6044820152606401610452565b3330146106b657336001600160a01b038316146106b65760405162461bcd60e51b815260206004820152601160248201527031b0b63632b910109e9039bbb0b83832b960791b6044820152606401610452565b80516001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed190161072a57806040015134146107255760405162461bcd60e51b81526020600482015260136024820152721b5cd9cb9d985b1d5948084f48185b5bdd5b9d606a1b6044820152606401610452565b610851565b34156107695760405162461bcd60e51b815260206004820152600e60248201526d06d73672e76616c756520213d20360941b6044820152606401610452565b80516040516370a0823160e01b81526001600160a01b038481166004830152909116906370a0823190602401602060405180830381865afa1580156107b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d69190611874565b816040015111156108205760405162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b6044820152606401610452565b6108338160000151838360400151611062565b8051600054604083015161085192916001600160a01b031690611077565b600061085c82611170565b905060006127106002548361087191906118a3565b61087b91906118ba565b905073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b031683602001516001600160a01b031603610932576001546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156108e8573d6000803e3d6000fd5b506108f381836118dc565b6040519092506001600160a01b0385169083156108fc029084906000818181858888f1935050505015801561092c573d6000803e3d6000fd5b50610969565b602083015160015461094e91906001600160a01b031683611262565b61095881836118dc565b915061096983602001518584611262565b6020808401518451604080870151815190815293840186905283018490526001600160a01b0391821692908216918716907fc9163c3bdf7263acf1bb3d24072cc7da025f7181c31e2edc7e1673edf5e0ca329060600160405180910390a45050506109f360017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b505050565b610a00610c5e565b60028190556040518181527f382455f3b749abde7721258dcfa10a22f30d4a28c69151a002dcbd8d1462e4f2906020015b60405180910390a150565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff16600081158015610a825750825b905060008267ffffffffffffffff166001148015610a9f5750303b155b905081158015610aad575080155b15610acb5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610af557845460ff60401b1916600160401b1785555b610afe3361129c565b610b066112ad565b610b0e6112bd565b610b166112cd565b6032600255600180546001600160a01b0319166001600160a01b0388161790558315610b7c57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b610b8c610c5e565b6001600160a01b038116610bb657604051631e4fbdf760e01b815260006004820152602401610452565b610bbf81610ec6565b50565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03831601610bf0575047919050565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610c34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c589190611874565b92915050565b33610c907f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146103c45760405163118cdaa760e01b8152336004820152602401610452565b610cc16112d5565b6000805160206119d0833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b039091168152602001610a31565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610d9a57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610d8e6000805160206119b0833981519152546001600160a01b031690565b6001600160a01b031614155b156103c45760405163703e46dd60e11b815260040160405180910390fd5b610bbf610c5e565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610e1a575060408051601f3d908101601f19168201909252610e1791810190611874565b60015b610e4257604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610452565b6000805160206119b08339815191528114610e7357604051632a87526960e21b815260048101829052602401610452565b6109f38383611305565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103c45760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b610f3f610f80565b6000805160206119d0833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833610cfb565b6000805160206119d08339815191525460ff16156103c45760405163d93c066560e01b815260040160405180910390fd5b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00805460011901610ff557604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b604080516080810182526000808252602082018190529181018290526060808201529080808061102d878701886118ef565b604080516080810182526001600160a01b03958616815294909316602085015291830152606082015294505050505092915050565b6109f36001600160a01b03841683308461135b565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e90604401602060405180830381865afa1580156110c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110eb9190611874565b90508181101561116a5760405163095ea7b360e01b81526001600160a01b0384811660048301526024820184905285169063095ea7b3906044016020604051808303816000875af1158015611144573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611168919061195b565b505b50505050565b6000806111808360200151610bc2565b60008054606086015160405193945091926001600160a01b039091169134916111a9919061197d565b60006040518083038185875af1925050503d80600081146111e6576040519150601f19603f3d011682016040523d82523d6000602084013e6111eb565b606091505b505090508061122a5760405162461bcd60e51b815260206004820152600b60248201526a1cddd85c0819985a5b195960aa1b6044820152606401610452565b60006112398560200151610bc2565b9050600061124784836118dc565b90508060000361125957611259611999565b95945050505050565b6109f36001600160a01b03841683836113c2565b60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b6112a46113f3565b610bbf8161143c565b6112b56113f3565b6103c4611444565b6112c56113f3565b6103c4611465565b6103c46113f3565b6000805160206119d08339815191525460ff166103c457604051638dfc202b60e01b815260040160405180910390fd5b61130e8261146d565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115611353576109f382826114d2565b6103e161153f565b6040516001600160a01b03848116602483015283811660448301526064820183905261116a9186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061155e565b6040516001600160a01b038381166024830152604482018390526109f391859182169063a9059cbb90606401611390565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166103c457604051631afcd79f60e31b815260040160405180910390fd5b610b8c6113f3565b61144c6113f3565b6000805160206119d0833981519152805460ff19169055565b6112766113f3565b806001600160a01b03163b6000036114a357604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610452565b6000805160206119b083398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516114ef919061197d565b600060405180830381855af49150503d806000811461152a576040519150601f19603f3d011682016040523d82523d6000602084013e61152f565b606091505b50915091506112598583836115cf565b34156103c45760405163b398979f60e01b815260040160405180910390fd5b600080602060008451602086016000885af180611581576040513d6000823e3d81fd5b50506000513d915081156115995780600114156115a6565b6001600160a01b0384163b155b1561116a57604051635274afe760e01b81526001600160a01b0385166004820152602401610452565b6060826115e4576115df8261162e565b611627565b81511580156115fb57506001600160a01b0384163b155b1561162457604051639996b31560e01b81526001600160a01b0385166004820152602401610452565b50805b9392505050565b80511561163e5780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b6001600160a01b0381168114610bbf57600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f83011261169357600080fd5b813567ffffffffffffffff8111156116ad576116ad61166c565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156116dc576116dc61166c565b6040528181528382016020018510156116f457600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561172457600080fd5b823561172f81611657565b9150602083013567ffffffffffffffff81111561174b57600080fd5b61175785828601611682565b9150509250929050565b60006020828403121561177357600080fd5b813561162781611657565b60005b83811015611799578181015183820152602001611781565b50506000910152565b60208152600082518060208401526117c181604085016020870161177e565b601f01601f19169190910160400192915050565b6000806000604084860312156117ea57600080fd5b833567ffffffffffffffff81111561180157600080fd5b8401601f8101861361181257600080fd5b803567ffffffffffffffff81111561182957600080fd5b86602082840101111561183b57600080fd5b60209182019450925084013561185081611657565b809150509250925092565b60006020828403121561186d57600080fd5b5035919050565b60006020828403121561188657600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610c5857610c5861188d565b6000826118d757634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610c5857610c5861188d565b6000806000806080858703121561190557600080fd5b843561191081611657565b9350602085013561192081611657565b925060408501359150606085013567ffffffffffffffff81111561194357600080fd5b61194f87828801611682565b91505092959194509250565b60006020828403121561196d57600080fd5b8151801515811461162757600080fd5b6000825161198f81846020870161177e565b9190910192915050565b634e487b7160e01b600052600160045260246000fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbccd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a26469706673582212205eb61123e45b365ff0e02020a54c7491475f5cca535e4a073fefa58ad4137aad64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x118 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xAE0CAEB3 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xAE0CAEB3 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xBF16F65A EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xA4AC0D49 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x540907BB EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x5DC0B769 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x380FD03 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x31F7D964 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x11F JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x144 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x3B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0x3C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x158 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x1F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x402 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x158 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x144 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x47D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x51D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x52F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x144 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x17A2 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x17D5 JUMP JUMPDEST PUSH2 0x53F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x34F CALLDATASIZE PUSH1 0x4 PUSH2 0x185B JUMP JUMPDEST PUSH2 0x9F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x36F CALLDATASIZE PUSH1 0x4 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0xA3C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0xB84 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0xC5E JUMP JUMPDEST PUSH2 0x3C4 PUSH2 0xCB9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3CE PUSH2 0xD13 JUMP JUMPDEST PUSH2 0x3D7 DUP3 PUSH2 0xDB8 JUMP JUMPDEST PUSH2 0x3E1 DUP3 DUP3 PUSH2 0xDC0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EF PUSH2 0xE7D JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19B0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x40A PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x45B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x7A65726F206164647265737320706172616D73 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x485 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642061646D696E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x452 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x44D6D25963F097AD14F29F06854A01F575648A1EF82F30E562CCD3889717E339 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x525 PUSH2 0xC5E JUMP JUMPDEST PUSH2 0x3C4 PUSH1 0x0 PUSH2 0xEC6 JUMP JUMPDEST PUSH2 0x537 PUSH2 0xC5E JUMP JUMPDEST PUSH2 0x3C4 PUSH2 0xF37 JUMP JUMPDEST PUSH2 0x547 PUSH2 0xF80 JUMP JUMPDEST PUSH2 0x54F PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55B DUP5 DUP5 PUSH2 0xFFB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0x0 SUB PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x616D6F756E74203D3D203 PUSH1 0xAC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x452 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x5C4 JUMPI POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST PUSH2 0x601 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x696E76616C696420746F6B656E73 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x452 JUMP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x663 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x39B931903A37B5B2B7101E9E903239BA103A37B5B2B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x452 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x6B6 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0x6B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x31B0B63632B910109E9039BBB0B83832B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x452 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEED NOT ADD PUSH2 0x72A JUMPI DUP1 PUSH1 0x40 ADD MLOAD CALLVALUE EQ PUSH2 0x725 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1B5CD9CB9D985B1D5948084F48185B5BDD5B9D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x452 JUMP JUMPDEST PUSH2 0x851 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x769 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x6D73672E76616C756520213D203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x452 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7D6 SWAP2 SWAP1 PUSH2 0x1874 JUMP JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD GT ISZERO PUSH2 0x820 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x696E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x452 JUMP JUMPDEST PUSH2 0x833 DUP2 PUSH1 0x0 ADD MLOAD DUP4 DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x1062 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x851 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x1077 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x85C DUP3 PUSH2 0x1170 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 PUSH1 0x2 SLOAD DUP4 PUSH2 0x871 SWAP2 SWAP1 PUSH2 0x18A3 JUMP JUMPDEST PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x18BA JUMP JUMPDEST SWAP1 POP PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x932 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x8F3 DUP2 DUP4 PUSH2 0x18DC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x92C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x969 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 SLOAD PUSH2 0x94E SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x1262 JUMP JUMPDEST PUSH2 0x958 DUP2 DUP4 PUSH2 0x18DC JUMP JUMPDEST SWAP2 POP PUSH2 0x969 DUP4 PUSH1 0x20 ADD MLOAD DUP6 DUP5 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP5 ADD MLOAD DUP5 MLOAD PUSH1 0x40 DUP1 DUP8 ADD MLOAD DUP2 MLOAD SWAP1 DUP2 MSTORE SWAP4 DUP5 ADD DUP7 SWAP1 MSTORE DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP1 DUP3 AND SWAP2 DUP8 AND SWAP1 PUSH32 0xC9163C3BDF7263ACF1BB3D24072CC7DA025F7181C31E2EDC7E1673EDF5E0CA32 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP PUSH2 0x9F3 PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA00 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x382455F3B749ABDE7721258DCFA10A22F30D4A28C69151A002DCBD8D1462E4F2 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xA82 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xA9F JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xAAD JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xACB JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xAF5 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0xAFE CALLER PUSH2 0x129C JUMP JUMPDEST PUSH2 0xB06 PUSH2 0x12AD JUMP JUMPDEST PUSH2 0xB0E PUSH2 0x12BD JUMP JUMPDEST PUSH2 0xB16 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x32 PUSH1 0x2 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0xB7C JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB8C PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBB6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x452 JUMP JUMPDEST PUSH2 0xBBF DUP2 PUSH2 0xEC6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEED NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADD PUSH2 0xBF0 JUMPI POP SELFBALANCE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC34 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC58 SWAP2 SWAP1 PUSH2 0x1874 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH2 0xC90 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x452 JUMP JUMPDEST PUSH2 0xCC1 PUSH2 0x12D5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA31 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0xD9A JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD8E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19B0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBBF PUSH2 0xC5E JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xE1A JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xE17 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1874 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE42 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x452 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19B0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0xE73 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x452 JUMP JUMPDEST PUSH2 0x9F3 DUP4 DUP4 PUSH2 0x1305 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xF3F PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 DUP1 SLOAD PUSH1 0x1 NOT ADD PUSH2 0xFF5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE SWAP1 DUP1 DUP1 DUP1 PUSH2 0x102D DUP8 DUP8 ADD DUP9 PUSH2 0x18EF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9F3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 ADDRESS DUP5 PUSH2 0x135B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP6 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10EB SWAP2 SWAP1 PUSH2 0x1874 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x116A JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP6 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1144 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1168 SWAP2 SWAP1 PUSH2 0x195B JUMP JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1180 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP5 POP SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 CALLVALUE SWAP2 PUSH2 0x11A9 SWAP2 SWAP1 PUSH2 0x197D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11E6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11EB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x122A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x1CDDD85C0819985A5B1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x452 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1239 DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0xBC2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1247 DUP5 DUP4 PUSH2 0x18DC JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x1259 JUMPI PUSH2 0x1259 PUSH2 0x1999 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9F3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 DUP4 PUSH2 0x13C2 JUMP JUMPDEST PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST PUSH2 0x12A4 PUSH2 0x13F3 JUMP JUMPDEST PUSH2 0xBBF DUP2 PUSH2 0x143C JUMP JUMPDEST PUSH2 0x12B5 PUSH2 0x13F3 JUMP JUMPDEST PUSH2 0x3C4 PUSH2 0x1444 JUMP JUMPDEST PUSH2 0x12C5 PUSH2 0x13F3 JUMP JUMPDEST PUSH2 0x3C4 PUSH2 0x1465 JUMP JUMPDEST PUSH2 0x3C4 PUSH2 0x13F3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x130E DUP3 PUSH2 0x146D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1353 JUMPI PUSH2 0x9F3 DUP3 DUP3 PUSH2 0x14D2 JUMP JUMPDEST PUSH2 0x3E1 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x116A SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x155E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x9F3 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD PUSH2 0x1390 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB8C PUSH2 0x13F3 JUMP JUMPDEST PUSH2 0x144C PUSH2 0x13F3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1276 PUSH2 0x13F3 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0x14A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x452 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19B0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x14EF SWAP2 SWAP1 PUSH2 0x197D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x152A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x152F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1259 DUP6 DUP4 DUP4 PUSH2 0x15CF JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x1581 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH1 0x0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x1599 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x15A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x116A JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x452 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x15E4 JUMPI PUSH2 0x15DF DUP3 PUSH2 0x162E JUMP JUMPDEST PUSH2 0x1627 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x15FB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1624 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x452 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x163E JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16AD JUMPI PUSH2 0x16AD PUSH2 0x166C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x16DC JUMPI PUSH2 0x16DC PUSH2 0x166C JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x16F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1724 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x172F DUP2 PUSH2 0x1657 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x174B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1757 DUP6 DUP3 DUP7 ADD PUSH2 0x1682 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1773 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1627 DUP2 PUSH2 0x1657 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1799 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1781 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x17C1 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x177E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x1812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1829 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x183B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 DUP3 ADD SWAP5 POP SWAP3 POP DUP5 ADD CALLDATALOAD PUSH2 0x1850 DUP2 PUSH2 0x1657 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x186D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1886 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xC58 JUMPI PUSH2 0xC58 PUSH2 0x188D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x18D7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xC58 JUMPI PUSH2 0xC58 PUSH2 0x188D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1910 DUP2 PUSH2 0x1657 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x1920 DUP2 PUSH2 0x1657 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1943 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x194F DUP8 DUP3 DUP9 ADD PUSH2 0x1682 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x196D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x198F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x177E JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCCD5ED15C6E187E77E9AEE8 DUP2 DUP5 0xC2 0x1F 0x4F 0x21 DUP3 0xAB PC 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F03300A26469706673582212205EB61123E45B365FF0E02020A5 0x4C PUSH21 0x91475F5CCA535E4A073FEFA58AD4137AAD64736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "636:5753:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:26;;;;;;;;;;-1:-1:-1;1023:26:19;;;;-1:-1:-1;;;;;1023:26:19;;;;;;-1:-1:-1;;;;;178:32:20;;;160:51;;148:2;133:18;1023:26:19;;;;;;;;928:89;;;;;;;;;;;;975:42;928:89;;6321:65;;;;;;;;;;;;;:::i;:::-;;4161:214:2;;;;;;:::i;:::-;;:::i;3708:134::-;;;;;;;;;;;;;:::i;:::-;;;1826:25:20;;;1814:2;1799:18;3708:134:2;1680:177:20;4609:176:19;;;;;;;;;;-1:-1:-1;4609:176:19;;;;;:::i;:::-;;:::i;2692:145:4:-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;2821:9:4;;;2692:145;;2279:14:20;;2272:22;2254:41;;2242:2;2227:18;2692:145:4;2114:187:20;1056:25:19;;;;;;;;;;-1:-1:-1;1056:25:19;;;;-1:-1:-1;;;;;1056:25:19;;;4418:185;;;;;;;;;;-1:-1:-1;4418:185:19;;;;;:::i;:::-;;:::i;3155:101:0:-;;;;;;;;;;;;;:::i;6254:61:19:-;;;;;;;;;;;;;:::i;2441:144:0:-;;;;;;;;;;-1:-1:-1;1313:22:0;2570:8;-1:-1:-1;;;;;2570:8:0;2441:144;;1087:32:19;;;;;;;;;;;;;;;;1819:58:2;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:2;;;;;;;;;;;;:::i;2063:1811:19:-;;;;;;:::i;:::-;;:::i;3880:307::-;;;;;;;;;;-1:-1:-1;3880:307:19;;;;;:::i;:::-;;:::i;1596:308::-;;;;;;;;;;-1:-1:-1;1596:308:19;;;;;:::i;:::-;;:::i;3405:215:0:-;;;;;;;;;;-1:-1:-1;3405:215:0;;;;;:::i;:::-;;:::i;4193:219:19:-;;;;;;;;;;-1:-1:-1;4193:219:19;;;;;:::i;:::-;;:::i;6321:65::-;2334:13:0;:11;:13::i;:::-;6369:10:19::1;:8;:10::i;:::-;6321:65::o:0;4161:214:2:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3708:134:2;:::o;4609:176:19:-;2334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;4692:26:19;::::1;4684:58;;;::::0;-1:-1:-1;;;4684:58:19;;4309:2:20;4684:58:19::1;::::0;::::1;4291:21:20::0;4348:2;4328:18;;;4321:30;-1:-1:-1;;;4367:18:20;;;4360:49;4426:18;;4684:58:19::1;;;;;;;;;4752:11;:26:::0;;-1:-1:-1;;;;;;4752:26:19::1;-1:-1:-1::0;;;;;4752:26:19;;;::::1;::::0;;;::::1;::::0;;4609:176::o;4418:185::-;2334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;4489:20:19;::::1;4481:54;;;::::0;-1:-1:-1;;;4481:54:19;;4657:2:20;4481:54:19::1;::::0;::::1;4639:21:20::0;4696:2;4676:18;;;4669:30;-1:-1:-1;;;4715:18:20;;;4708:51;4776:18;;4481:54:19::1;4455:345:20::0;4481:54:19::1;4545:9;:18:::0;;-1:-1:-1;;;;;;4545:18:19::1;-1:-1:-1::0;;;;;4545:18:19;::::1;::::0;;::::1;::::0;;;4578::::1;::::0;::::1;::::0;-1:-1:-1;;4578:18:19::1;4418:185:::0;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;6254:61:19:-:0;2334:13:0;:11;:13::i;:::-;6300:8:19::1;:6;:8::i;2063:1811::-:0;2316:19:4;:17;:19::i;:::-;3395:21:5::1;:19;:21::i;:::-;2207:31:19::2;2241:14;2249:5;;2241:7;:14::i;:::-;2207:48;;2273:8;:15;;;2292:1;2273:20:::0;2265:44:::2;;;::::0;-1:-1:-1;;;2265:44:19;;5007:2:20;2265:44:19::2;::::0;::::2;4989:21:20::0;5046:2;5026:18;;;5019:30;-1:-1:-1;;;5065:18:20;;;5058:41;5116:18;;2265:44:19::2;4805:335:20::0;2265:44:19::2;2340:17:::0;;-1:-1:-1;;;;;2340:31:19::2;::::0;;::::2;::::0;:66:::2;;-1:-1:-1::0;2375:17:19::2;::::0;::::2;::::0;-1:-1:-1;;;;;2375:31:19::2;::::0;::::2;2340:66;2319:127;;;::::0;-1:-1:-1;;;2319:127:19;;5347:2:20;2319:127:19::2;::::0;::::2;5329:21:20::0;5386:2;5366:18;;;5359:30;-1:-1:-1;;;5405:18:20;;;5398:44;5459:18;;2319:127:19::2;5145:338:20::0;2319:127:19::2;2498:8;:17;;;-1:-1:-1::0;;;;;2477:38:19::2;:8;:17;;;-1:-1:-1::0;;;;;2477:38:19::2;::::0;2456:107:::2;;;::::0;-1:-1:-1;;;2456:107:19;;5690:2:20;2456:107:19::2;::::0;::::2;5672:21:20::0;5729:2;5709:18;;;5702:30;-1:-1:-1;;;5748:18:20;;;5741:52;5810:18;;2456:107:19::2;5488:346:20::0;2456:107:19::2;2577:10;2599:4;2577:27;2573:110;;2628:10;-1:-1:-1::0;;;;;2628:22:19;::::2;;2620:52;;;::::0;-1:-1:-1;;;2620:52:19;;6041:2:20;2620:52:19::2;::::0;::::2;6023:21:20::0;6080:2;6060:18;;;6053:30;-1:-1:-1;;;6099:18:20;;;6092:47;6156:18;;2620:52:19::2;5839:341:20::0;2620:52:19::2;2696:17:::0;;-1:-1:-1;;;;;2696:33:19::2;-1:-1:-1::0;;2696:33:19;2692:517:::2;;2766:8;:15;;;2753:9;:28;2745:60;;;::::0;-1:-1:-1;;;2745:60:19;;6387:2:20;2745:60:19::2;::::0;::::2;6369:21:20::0;6426:2;6406:18;;;6399:30;-1:-1:-1;;;6445:18:20;;;6438:49;6504:18;;2745:60:19::2;6185:343:20::0;2745:60:19::2;2692:517;;;2844:9;:14:::0;2836:41:::2;;;::::0;-1:-1:-1;;;2836:41:19;;6735:2:20;2836:41:19::2;::::0;::::2;6717:21:20::0;6774:2;6754:18;;;6747:30;-1:-1:-1;;;6793:18:20;;;6786:44;6847:18;;2836:41:19::2;6533:338:20::0;2836:41:19::2;2962:17:::0;;2955:45:::2;::::0;-1:-1:-1;;;2955:45:19;;-1:-1:-1;;;;;178:32:20;;;2955:45:19::2;::::0;::::2;160:51:20::0;2955:35:19;;::::2;::::0;::::2;::::0;133:18:20;;2955:45:19::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2916:8;:15;;;:84;;2891:163;;;::::0;-1:-1:-1;;;2891:163:19;;7267:2:20;2891:163:19::2;::::0;::::2;7249:21:20::0;7306:2;7286:18;;;7279:30;-1:-1:-1;;;7325:18:20;;;7318:50;7385:18;;2891:163:19::2;7065:344:20::0;2891:163:19::2;3068:59;3082:8;:17;;;3101:8;3111;:15;;;3068:13;:59::i;:::-;3150:17:::0;;::::2;3169:11:::0;3182:15:::2;::::0;::::2;::::0;3141:57:::2;::::0;3150:17;-1:-1:-1;;;;;3169:11:19::2;::::0;3141:8:::2;:57::i;:::-;3219:18;3240:15;3246:8;3240:5;:15::i;:::-;3219:36;;3265:11;3314:5;3293:17;;3280:10;:30;;;;:::i;:::-;3279:40;;;;:::i;:::-;3265:54;;975:42;-1:-1:-1::0;;;;;3334:33:19::2;:8;:17;;;-1:-1:-1::0;;;;;3334:33:19::2;::::0;3330:351:::2;;3392:9;::::0;3383:33:::2;::::0;-1:-1:-1;;;;;3392:9:19;;::::2;::::0;3383:33;::::2;;;::::0;3412:3;;3392:9:::2;3383:33:::0;3392:9;3383:33;3412:3;3392:9;3383:33;::::2;;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;3430:17:19::2;3444:3:::0;3430:17;::::2;:::i;:::-;3461:38;::::0;3430:17;;-1:-1:-1;;;;;;3461:26:19;::::2;::::0;:38;::::2;;;::::0;3430:17;;3461:38:::2;::::0;;;3430:17;3461:26;:38;::::2;;;;;;;;;;;;;::::0;::::2;;;;;;3330:351;;;3540:17;::::0;::::2;::::0;3560:9:::2;::::0;3530:45:::2;::::0;3540:17;-1:-1:-1;;;;;3560:9:19::2;3571:3:::0;3530:9:::2;:45::i;:::-;3589:17;3603:3:::0;3589:17;::::2;:::i;:::-;;;3620:50;3630:8;:17;;;3649:8;3659:10;3620:9;:50::i;:::-;3770:17;::::0;;::::2;::::0;3739;;3801:15:::2;::::0;;::::2;::::0;3696:171;;8276:25:20;;;8317:18;;;8310:34;;;8360:18;;8353:34;;;-1:-1:-1;;;;;3696:171:19;;::::2;::::0;;;::::2;::::0;;::::2;::::0;::::2;::::0;8264:2:20;8249:18;3696:171:19::2;;;;;;;2197:1677;;;3437:20:5::1;1949:1:::0;2532:30;4113:23;3860:283;3437:20:::1;2063:1811:19::0;;;:::o;3880:307::-;2334:13:0;:11;:13::i;:::-;4095:17:19::1;:37:::0;;;4147:33:::1;::::0;1826:25:20;;;4147:33:19::1;::::0;1814:2:20;1799:18;4147:33:19::1;;;;;;;;3880:307:::0;:::o;1596:308::-;8870:21:1;4302:15;;-1:-1:-1;;;4302:15:1;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:1;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:1;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:1;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:1;-1:-1:-1;;;5013:22:1;;;4979:67;1687:26:19::1;1702:10;1687:14;:26::i;:::-;1723:17;:15;:17::i;:::-;1750:24;:22;:24::i;:::-;1786;:22;:24::i;:::-;1840:2;1820:17;:22:::0;1875:9:::1;:22:::0;;-1:-1:-1;;;;;;1875:22:19::1;-1:-1:-1::0;;;;;1875:22:19;::::1;;::::0;;5066:101:1;;;;5100:23;;-1:-1:-1;;;;5100:23:1;;;5142:14;;-1:-1:-1;8551:50:20;;5142:14:1;;8539:2:20;8524:18;5142:14:1;;;;;;;5066:101;4092:1081;;;;;1596:308:19;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:0;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:0;;3562:1:::1;3534:31;::::0;::::1;160:51:20::0;133:18;;3534:31:0::1;14:203:20::0;3485:91:0::1;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;4193:219:19:-;4250:7;-1:-1:-1;;;;;;;4273:22:19;;;4269:81;;-1:-1:-1;4318:21:19;;4193:219;-1:-1:-1;4193:219:19:o;4269:81::-;4366:39;;-1:-1:-1;;;4366:39:19;;4399:4;4366:39;;;160:51:20;-1:-1:-1;;;;;4366:24:19;;;;;133:18:20;;4366:39:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4359:46;4193:219;-1:-1:-1;;4193:219:19:o;2658:162:0:-;966:10:3;2717:7:0;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:0;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:0;;966:10:3;2763:40:0;;;160:51:20;133:18;;2763:40:0;14:203:20;3674:178:4;2563:16;:14;:16::i;:::-;-1:-1:-1;;;;;;;;;;;3791:17:4;;-1:-1:-1;;3791:17:4::1;::::0;;3823:22:::1;966:10:3::0;3832:12:4::1;3823:22;::::0;-1:-1:-1;;;;;178:32:20;;;160:51;;148:2;133:18;3823:22:4::1;14:203:20::0;4603:312:2;4683:4;-1:-1:-1;;;;;4692:6:2;4675:23;;;:120;;;4789:6;-1:-1:-1;;;;;4753:42:2;:32;-1:-1:-1;;;;;;;;;;;1519:53:11;-1:-1:-1;;;;;1519:53:11;;1441:138;4753:32:2;-1:-1:-1;;;;;4753:42:2;;;4675:120;4658:251;;;4869:29;;-1:-1:-1;;;4869:29:2;;;;;;;;;;;1910:112:19;2334:13:0;:11;:13::i;6057:538:2:-;6174:17;-1:-1:-1;;;;;6156:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6156:52:2;;;;;;;;-1:-1:-1;;6156:52:2;;;;;;;;;;;;:::i;:::-;;;6152:437;;6518:60;;-1:-1:-1;;;6518:60:2;;-1:-1:-1;;;;;178:32:20;;6518:60:2;;;160:51:20;133:18;;6518:60:2;14:203:20;6152:437:2;-1:-1:-1;;;;;;;;;;;6250:40:2;;6246:120;;6317:34;;-1:-1:-1;;;6317:34:2;;;;;1826:25:20;;;1799:18;;6317:34:2;1680:177:20;6246:120:2;6379:54;6409:17;6428:4;6379:29;:54::i;5032:213::-;5106:4;-1:-1:-1;;;;;5115:6:2;5098:23;;5094:145;;5199:29;;-1:-1:-1;;;5199:29:2;;;;;;;;;;;3774:248:0;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:0;;-1:-1:-1;;;;;3941:19:0;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;3366:176:4:-;2316:19;:17;:19::i;:::-;-1:-1:-1;;;;;;;;;;;3484:16:4;;-1:-1:-1;;3484:16:4::1;3496:4;3484:16;::::0;;3515:20:::1;966:10:3::0;3522:12:4::1;887:96:3::0;2905:128:4;-1:-1:-1;;;;;;;;;;;2821:9:4;;;2966:61;;;3001:15;;-1:-1:-1;;;3001:15:4;;;;;;;;;;;3470:384:5;2532:30;3670:9;;-1:-1:-1;;3670:20:5;3666:88;;3713:30;;-1:-1:-1;;;3713:30:5;;;;;;;;;;;3666:88;1991:1;3828:19;;3470:384::o;4792:313:19:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4967:87:19;;;;;;:::i;:::-;5071:27;;;;;;;;-1:-1:-1;;;;;5071:27:19;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4792:313:19;;;;:::o;6060:188::-;6179:62;-1:-1:-1;;;;;6179:31:19;;6211:5;6226:4;6233:7;6179:31;:62::i;5581:306::-;5718:49;;-1:-1:-1;;;5718:49:19;;5751:4;5718:49;;;9713:51:20;-1:-1:-1;;;;;9800:32:20;;;9780:18;;;9773:60;5698:17:19;;5718:24;;;;;;9686:18:20;;5718:49:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5698:69;;5793:7;5781:9;:19;5777:104;;;5829:41;;-1:-1:-1;;;5829:41:19;;-1:-1:-1;;;;;10036:32:20;;;5829:41:19;;;10018:51:20;10085:18;;;10078:34;;;5829:22:19;;;;;9991:18:20;;5829:41:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5777:104;5688:199;5581:306;;;:::o;5111:464::-;5177:7;5196:25;5224:30;5235:9;:18;;;5224:10;:30::i;:::-;5265:12;5283:11;;5318:14;;;;5283:50;;5196:58;;-1:-1:-1;5265:12:19;;-1:-1:-1;;;;;5283:11:19;;;;5307:9;;5283:50;;5318:14;5283:50;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5264:69;;;5351:7;5343:31;;;;-1:-1:-1;;;5343:31:19;;10899:2:20;5343:31:19;;;10881:21:20;10938:2;10918:18;;;10911:30;-1:-1:-1;;;10957:18:20;;;10950:41;11008:18;;5343:31:19;10697:335:20;5343:31:19;5384:24;5411:30;5422:9;:18;;;5411:10;:30::i;:::-;5384:57;-1:-1:-1;5451:18:19;5472:36;5491:17;5384:57;5472:36;:::i;:::-;5451:57;;5525:10;5539:1;5525:15;5518:23;;;;:::i;:::-;5558:10;5111:464;-1:-1:-1;;;;;5111:464:19:o;5893:161::-;6006:41;-1:-1:-1;;;;;6006:27:19;;6034:3;6039:7;6006:27;:41::i;3860:283:5:-;1949:1;2532:30;4113:23;3860:283::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;1836:97:4:-:0;6931:20:1;:18;:20::i;:::-;1899:27:4::1;:25;:27::i;2684:111:5:-:0;6931:20:1;:18;:20::i;:::-;2754:34:5::1;:32;:34::i;2970:67:2:-:0;6931:20:1;:18;:20::i;3105:126:4:-;-1:-1:-1;;;;;;;;;;;2821:9:4;;;3163:62;;3199:15;;-1:-1:-1;;;3199:15:4;;;;;;;;;;;2264:344:11;2355:37;2374:17;2355:18;:37::i;:::-;2407:36;;-1:-1:-1;;;;;2407:36:11;;;;;;;;2458:11;;:15;2454:148;;2489:53;2518:17;2537:4;2489:28;:53::i;2454:148::-;2573:18;:16;:18::i;1670:188:14:-;1797:53;;-1:-1:-1;;;;;11389:32:20;;;1797:53:14;;;11371:51:20;11458:32;;;11438:18;;;11431:60;11507:18;;;11500:34;;;1770:81:14;;1790:5;;1812:18;;;;;11344::20;;1797:53:14;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1797:53:14;;;;;;;;;;;1770:19;:81::i;1271:160::-;1380:43;;-1:-1:-1;;;;;10036:32:20;;;1380:43:14;;;10018:51:20;10085:18;;;10078:34;;;1353:71:14;;1373:5;;1395:14;;;;;9991:18:20;;1380:43:14;9844:274:20;7084:141:1;8870:21;8560:40;-1:-1:-1;;;8560:40:1;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:1;;;;;;;;;;;1980:235:0;6931:20:1;:18;:20::i;1939:156:4:-;6931:20:1;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;2071:17:4;;-1:-1:-1;;2071:17:4::1;::::0;;1939:156::o;2801:183:5:-;6931:20:1;:18;:20::i;1671:281:11:-;1748:17;-1:-1:-1;;;;;1748:29:11;;1781:1;1748:34;1744:119;;1805:47;;-1:-1:-1;;;1805:47:11;;-1:-1:-1;;;;;178:32:20;;1805:47:11;;;160:51:20;133:18;;1805:47:11;14:203:20;1744:119:11;-1:-1:-1;;;;;;;;;;;1872:73:11;;-1:-1:-1;;;;;;1872:73:11;-1:-1:-1;;;;;1872:73:11;;;;;;;;;;1671:281::o;3900:253:15:-;3983:12;4008;4022:23;4049:6;-1:-1:-1;;;;;4049:19:15;4069:4;4049:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4007:67;;;;4091:55;4118:6;4126:7;4135:10;4091:26;:55::i;6113:122:11:-;6163:9;:13;6159:70;;6199:19;;-1:-1:-1;;;6199:19:11;;;;;;;;;;;7738:720:14;7818:18;7846:19;7984:4;7981:1;7974:4;7968:11;7961:4;7955;7951:15;7948:1;7941:5;7934;7929:60;8041:7;8031:176;;8085:4;8079:11;8130:16;8127:1;8122:3;8107:40;8176:16;8171:3;8164:29;8031:176;-1:-1:-1;;8284:1:14;8278:8;8234:16;;-1:-1:-1;8310:15:14;;:68;;8362:11;8377:1;8362:16;;8310:68;;;-1:-1:-1;;;;;8328:26:14;;;:31;8310:68;8306:146;;;8401:40;;-1:-1:-1;;;8401:40:14;;-1:-1:-1;;;;;178:32:20;;8401:40:14;;;160:51:20;133:18;;8401:40:14;14:203:20;4421:582:15;4565:12;4594:7;4589:408;;4617:19;4625:10;4617:7;:19::i;:::-;4589:408;;;4841:17;;:22;:49;;;;-1:-1:-1;;;;;;4867:18:15;;;:23;4841:49;4837:119;;;4917:24;;-1:-1:-1;;;4917:24:15;;-1:-1:-1;;;;;178:32:20;;4917:24:15;;;160:51:20;133:18;;4917:24:15;14:203:20;4837:119:15;-1:-1:-1;4976:10:15;4589:408;4421:582;;;;;:::o;5543:487::-;5674:17;;:21;5670:354;;5871:10;5865:17;5927:15;5914:10;5910:2;5906:19;5899:44;5670:354;5994:19;;-1:-1:-1;;;5994:19:15;;;;;;;;;;;222:131:20;-1:-1:-1;;;;;297:31:20;;287:42;;277:70;;343:1;340;333:12;358:127;419:10;414:3;410:20;407:1;400:31;450:4;447:1;440:15;474:4;471:1;464:15;490:725;532:5;585:3;578:4;570:6;566:17;562:27;552:55;;603:1;600;593:12;552:55;643:6;630:20;673:18;665:6;662:30;659:56;;;695:18;;:::i;:::-;744:2;738:9;836:2;798:17;;-1:-1:-1;;794:31:20;;;827:2;790:40;786:54;774:67;;871:18;856:34;;892:22;;;853:62;850:88;;;918:18;;:::i;:::-;954:2;947:22;978;;;1019:19;;;1040:4;1015:30;1012:39;-1:-1:-1;1009:59:20;;;1064:1;1061;1054:12;1009:59;1128:6;1121:4;1113:6;1109:17;1102:4;1094:6;1090:17;1077:58;1183:1;1155:19;;;1176:4;1151:30;1144:41;;;;1159:6;490:725;-1:-1:-1;;;490:725:20:o;1220:455::-;1297:6;1305;1358:2;1346:9;1337:7;1333:23;1329:32;1326:52;;;1374:1;1371;1364:12;1326:52;1413:9;1400:23;1432:31;1457:5;1432:31;:::i;:::-;1482:5;-1:-1:-1;1538:2:20;1523:18;;1510:32;1565:18;1554:30;;1551:50;;;1597:1;1594;1587:12;1551:50;1620:49;1661:7;1652:6;1641:9;1637:22;1620:49;:::i;:::-;1610:59;;;1220:455;;;;;:::o;1862:247::-;1921:6;1974:2;1962:9;1953:7;1949:23;1945:32;1942:52;;;1990:1;1987;1980:12;1942:52;2029:9;2016:23;2048:31;2073:5;2048:31;:::i;2488:250::-;2573:1;2583:113;2597:6;2594:1;2591:13;2583:113;;;2673:11;;;2667:18;2654:11;;;2647:39;2619:2;2612:10;2583:113;;;-1:-1:-1;;2730:1:20;2712:16;;2705:27;2488:250::o;2743:396::-;2892:2;2881:9;2874:21;2855:4;2924:6;2918:13;2967:6;2962:2;2951:9;2947:18;2940:34;2983:79;3055:6;3050:2;3039:9;3035:18;3030:2;3022:6;3018:15;2983:79;:::i;:::-;3123:2;3102:15;-1:-1:-1;;3098:29:20;3083:45;;;;3130:2;3079:54;;2743:396;-1:-1:-1;;2743:396:20:o;3144:727::-;3223:6;3231;3239;3292:2;3280:9;3271:7;3267:23;3263:32;3260:52;;;3308:1;3305;3298:12;3260:52;3348:9;3335:23;3381:18;3373:6;3370:30;3367:50;;;3413:1;3410;3403:12;3367:50;3436:22;;3489:4;3481:13;;3477:27;-1:-1:-1;3467:55:20;;3518:1;3515;3508:12;3467:55;3558:2;3545:16;3584:18;3576:6;3573:30;3570:50;;;3616:1;3613;3606:12;3570:50;3663:7;3656:4;3647:6;3643:2;3639:15;3635:26;3632:39;3629:59;;;3684:1;3681;3674:12;3629:59;3715:4;3707:13;;;;-1:-1:-1;3739:6:20;-1:-1:-1;3780:20:20;;3767:34;3810:31;3767:34;3810:31;:::i;:::-;3860:5;3850:15;;;3144:727;;;;;:::o;3876:226::-;3935:6;3988:2;3976:9;3967:7;3963:23;3959:32;3956:52;;;4004:1;4001;3994:12;3956:52;-1:-1:-1;4049:23:20;;3876:226;-1:-1:-1;3876:226:20:o;6876:184::-;6946:6;6999:2;6987:9;6978:7;6974:23;6970:32;6967:52;;;7015:1;7012;7005:12;6967:52;-1:-1:-1;7038:16:20;;6876:184;-1:-1:-1;6876:184:20:o;7414:127::-;7475:10;7470:3;7466:20;7463:1;7456:31;7506:4;7503:1;7496:15;7530:4;7527:1;7520:15;7546:168;7619:9;;;7650;;7667:15;;;7661:22;;7647:37;7637:71;;7688:18;;:::i;7719:217::-;7759:1;7785;7775:132;;7829:10;7824:3;7820:20;7817:1;7810:31;7864:4;7861:1;7854:15;7892:4;7889:1;7882:15;7775:132;-1:-1:-1;7921:9:20;;7719:217::o;7941:128::-;8008:9;;;8029:11;;;8026:37;;;8043:18;;:::i;8801:733::-;8912:6;8920;8928;8936;8989:3;8977:9;8968:7;8964:23;8960:33;8957:53;;;9006:1;9003;8996:12;8957:53;9045:9;9032:23;9064:31;9089:5;9064:31;:::i;:::-;9114:5;-1:-1:-1;9171:2:20;9156:18;;9143:32;9184:33;9143:32;9184:33;:::i;:::-;9236:7;-1:-1:-1;9316:2:20;9301:18;;9288:32;;-1:-1:-1;9397:2:20;9382:18;;9369:32;9424:18;9413:30;;9410:50;;;9456:1;9453;9446:12;9410:50;9479:49;9520:7;9511:6;9500:9;9496:22;9479:49;:::i;:::-;9469:59;;;8801:733;;;;;;;:::o;10123:277::-;10190:6;10243:2;10231:9;10222:7;10218:23;10214:32;10211:52;;;10259:1;10256;10249:12;10211:52;10291:9;10285:16;10344:5;10337:13;10330:21;10323:5;10320:32;10310:60;;10366:1;10363;10356:12;10405:287;10534:3;10572:6;10566:13;10588:66;10647:6;10642:3;10635:4;10627:6;10623:17;10588:66;:::i;:::-;10670:16;;;;;10405:287;-1:-1:-1;;10405:287:20:o;11037:127::-;11098:10;11093:3;11089:20;11086:1;11079:31;11129:4;11126:1;11119:15;11153:4;11150:1;11143:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1338600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"NATIVE_TOKEN()": "251",
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"addAdmin(address)": "23347",
								"getBalance(address)": "infinite",
								"initialize(address)": "infinite",
								"newExchange()": "1050",
								"owner()": "1087",
								"pause()": "infinite",
								"paused()": "infinite",
								"proxiableUUID()": "infinite",
								"renounceOwnership()": "infinite",
								"setNewExchange(address)": "22142",
								"swap(bytes,address)": "infinite",
								"swapAdmin()": "1115",
								"swapFeePercentage()": "1084",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"updateSwapFee(uint256)": "22231",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_authorizeUpgrade(address)": "infinite",
								"_decode(bytes calldata)": "infinite",
								"_swap(struct Swapper.SwapDescription memory)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 636,
									"end": 6389,
									"name": "PUSH",
									"source": 19,
									"value": "A0"
								},
								{
									"begin": 636,
									"end": 6389,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 636,
									"end": 6389,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 636,
									"end": 6389,
									"name": "CALLVALUE",
									"source": 19
								},
								{
									"begin": 636,
									"end": 6389,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 636,
									"end": 6389,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 636,
									"end": 6389,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 636,
									"end": 6389,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 636,
									"end": 6389,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 636,
									"end": 6389,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 636,
									"end": 6389,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 636,
									"end": 6389,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 636,
									"end": 6389,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 636,
									"end": 6389,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 636,
									"end": 6389,
									"name": "PUSH",
									"source": 19,
									"value": "80"
								},
								{
									"begin": 636,
									"end": 6389,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 636,
									"end": 6389,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 636,
									"end": 6389,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 636,
									"end": 6389,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 636,
									"end": 6389,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 636,
									"end": 6389,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 636,
									"end": 6389,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "468"
								},
								{
									"begin": 636,
									"end": 6389,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 636,
									"end": 6389,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 636,
									"end": 6389,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205eb61123e45b365ff0e02020a54c7491475f5cca535e4a073fefa58ad4137aad64736f6c634300081a0033",
									".code": [
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "715018A6"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "22"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "AE0CAEB3"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "23"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "AE0CAEB3"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "17"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "BF16F65A"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "18"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "C4D66DE8"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "19"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "F2FDE38B"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "F8B2CB4F"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "21"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "tag",
											"source": 19,
											"value": "23"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "715018A6"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "8456CB59"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "13"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "8DA5CB5B"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "14"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "A4AC0D49"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "15"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "AD3CB1CC"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "16"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "tag",
											"source": 19,
											"value": "22"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "52D1902D"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "52D1902D"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "7"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "540907BB"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "5C975ABB"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "9"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "5DC0B769"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "10"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "70480275"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "tag",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "380FD03"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "31F7D964"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "3F4BA83A"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "5"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "4F1EF286"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "6"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "tag",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "STOP",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "tag",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 636,
											"end": 6389,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "tag",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "27"
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "tag",
											"source": 19,
											"value": "27"
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "28"
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "tag",
											"source": 19,
											"value": "28"
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "tag",
											"source": 19,
											"value": "30"
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1023,
											"end": 1049,
											"name": "RETURN",
											"source": 19
										},
										{
											"begin": 928,
											"end": 1017,
											"name": "tag",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 928,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 928,
											"end": 1017,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 928,
											"end": 1017,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 928,
											"end": 1017,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 928,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "32"
										},
										{
											"begin": 928,
											"end": 1017,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 928,
											"end": 1017,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 1017,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 928,
											"end": 1017,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 928,
											"end": 1017,
											"name": "tag",
											"source": 19,
											"value": "32"
										},
										{
											"begin": 928,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 928,
											"end": 1017,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 928,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "28"
										},
										{
											"begin": 975,
											"end": 1017,
											"name": "PUSH",
											"source": 19,
											"value": "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
										},
										{
											"begin": 928,
											"end": 1017,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 928,
											"end": 1017,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6321,
											"end": 6386,
											"name": "tag",
											"source": 19,
											"value": "5"
										},
										{
											"begin": 6321,
											"end": 6386,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6321,
											"end": 6386,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 6321,
											"end": 6386,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6321,
											"end": 6386,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6321,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "36"
										},
										{
											"begin": 6321,
											"end": 6386,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6321,
											"end": 6386,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6321,
											"end": 6386,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6321,
											"end": 6386,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 6321,
											"end": 6386,
											"name": "tag",
											"source": 19,
											"value": "36"
										},
										{
											"begin": 6321,
											"end": 6386,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6321,
											"end": 6386,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6321,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "37"
										},
										{
											"begin": 6321,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "38"
										},
										{
											"begin": 6321,
											"end": 6386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6321,
											"end": 6386,
											"name": "tag",
											"source": 19,
											"value": "37"
										},
										{
											"begin": 6321,
											"end": 6386,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6321,
											"end": 6386,
											"name": "STOP",
											"source": 19
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1814,
											"end": 1816,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1680,
											"end": 1857,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4609,
											"end": 4785,
											"name": "tag",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 4609,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4609,
											"end": 4785,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 4609,
											"end": 4785,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4609,
											"end": 4785,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4609,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "48"
										},
										{
											"begin": 4609,
											"end": 4785,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4609,
											"end": 4785,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4609,
											"end": 4785,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4609,
											"end": 4785,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4609,
											"end": 4785,
											"name": "tag",
											"source": 19,
											"value": "48"
										},
										{
											"begin": 4609,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4609,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "37"
										},
										{
											"begin": 4609,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "50"
										},
										{
											"begin": 4609,
											"end": 4785,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 4609,
											"end": 4785,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 4609,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "51"
										},
										{
											"begin": 4609,
											"end": 4785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4609,
											"end": 4785,
											"name": "tag",
											"source": 19,
											"value": "50"
										},
										{
											"begin": 4609,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4609,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "52"
										},
										{
											"begin": 4609,
											"end": 4785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2293,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2279,
											"end": 2293,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2272,
											"end": 2294,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2254,
											"end": 2295,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2254,
											"end": 2295,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2242,
											"end": 2244,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2227,
											"end": 2245,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2114,
											"end": 2301,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1056,
											"end": 1081,
											"name": "tag",
											"source": 19,
											"value": "10"
										},
										{
											"begin": 1056,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1056,
											"end": 1081,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 1056,
											"end": 1081,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1056,
											"end": 1081,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1056,
											"end": 1081,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "58"
										},
										{
											"begin": 1056,
											"end": 1081,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1056,
											"end": 1081,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1056,
											"end": 1081,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1056,
											"end": 1081,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1056,
											"end": 1081,
											"name": "tag",
											"source": 19,
											"value": "58"
										},
										{
											"begin": 1056,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1056,
											"end": 1081,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 1056,
											"end": 1081,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1056,
											"end": 1081,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "28"
										},
										{
											"begin": 1056,
											"end": 1081,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1056,
											"end": 1081,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1056,
											"end": 1081,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1056,
											"end": 1081,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4418,
											"end": 4603,
											"name": "tag",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 4418,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4418,
											"end": 4603,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 4418,
											"end": 4603,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4418,
											"end": 4603,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4418,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "62"
										},
										{
											"begin": 4418,
											"end": 4603,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4418,
											"end": 4603,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4418,
											"end": 4603,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4418,
											"end": 4603,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4418,
											"end": 4603,
											"name": "tag",
											"source": 19,
											"value": "62"
										},
										{
											"begin": 4418,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4418,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "37"
										},
										{
											"begin": 4418,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 4418,
											"end": 4603,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 4418,
											"end": 4603,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 4418,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "51"
										},
										{
											"begin": 4418,
											"end": 4603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4418,
											"end": 4603,
											"name": "tag",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 4418,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4418,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "65"
										},
										{
											"begin": 4418,
											"end": 4603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6254,
											"end": 6315,
											"name": "tag",
											"source": 19,
											"value": "13"
										},
										{
											"begin": 6254,
											"end": 6315,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6254,
											"end": 6315,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 6254,
											"end": 6315,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6254,
											"end": 6315,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6254,
											"end": 6315,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "69"
										},
										{
											"begin": 6254,
											"end": 6315,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6254,
											"end": 6315,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6254,
											"end": 6315,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6254,
											"end": 6315,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 6254,
											"end": 6315,
											"name": "tag",
											"source": 19,
											"value": "69"
										},
										{
											"begin": 6254,
											"end": 6315,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6254,
											"end": 6315,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6254,
											"end": 6315,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "37"
										},
										{
											"begin": 6254,
											"end": 6315,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "71"
										},
										{
											"begin": 6254,
											"end": 6315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1119,
											"name": "tag",
											"source": 19,
											"value": "15"
										},
										{
											"begin": 1087,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1087,
											"end": 1119,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 1087,
											"end": 1119,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1087,
											"end": 1119,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1087,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "76"
										},
										{
											"begin": 1087,
											"end": 1119,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1087,
											"end": 1119,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1119,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1087,
											"end": 1119,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1087,
											"end": 1119,
											"name": "tag",
											"source": 19,
											"value": "76"
										},
										{
											"begin": 1087,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1087,
											"end": 1119,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1087,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 1087,
											"end": 1119,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 1087,
											"end": 1119,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1087,
											"end": 1119,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1087,
											"end": 1119,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "352E302E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2063,
											"end": 3874,
											"name": "tag",
											"source": 19,
											"value": "17"
										},
										{
											"begin": 2063,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2063,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "37"
										},
										{
											"begin": 2063,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "87"
										},
										{
											"begin": 2063,
											"end": 3874,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 2063,
											"end": 3874,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 2063,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "88"
										},
										{
											"begin": 2063,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2063,
											"end": 3874,
											"name": "tag",
											"source": 19,
											"value": "87"
										},
										{
											"begin": 2063,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2063,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "89"
										},
										{
											"begin": 2063,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3880,
											"end": 4187,
											"name": "tag",
											"source": 19,
											"value": "18"
										},
										{
											"begin": 3880,
											"end": 4187,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3880,
											"end": 4187,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 3880,
											"end": 4187,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3880,
											"end": 4187,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3880,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "90"
										},
										{
											"begin": 3880,
											"end": 4187,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3880,
											"end": 4187,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 4187,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3880,
											"end": 4187,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3880,
											"end": 4187,
											"name": "tag",
											"source": 19,
											"value": "90"
										},
										{
											"begin": 3880,
											"end": 4187,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3880,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "37"
										},
										{
											"begin": 3880,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "92"
										},
										{
											"begin": 3880,
											"end": 4187,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 3880,
											"end": 4187,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 3880,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "93"
										},
										{
											"begin": 3880,
											"end": 4187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3880,
											"end": 4187,
											"name": "tag",
											"source": 19,
											"value": "92"
										},
										{
											"begin": 3880,
											"end": 4187,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3880,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "94"
										},
										{
											"begin": 3880,
											"end": 4187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1596,
											"end": 1904,
											"name": "tag",
											"source": 19,
											"value": "19"
										},
										{
											"begin": 1596,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1596,
											"end": 1904,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 1596,
											"end": 1904,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1596,
											"end": 1904,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1596,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "95"
										},
										{
											"begin": 1596,
											"end": 1904,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1596,
											"end": 1904,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1596,
											"end": 1904,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1596,
											"end": 1904,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1596,
											"end": 1904,
											"name": "tag",
											"source": 19,
											"value": "95"
										},
										{
											"begin": 1596,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1596,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "37"
										},
										{
											"begin": 1596,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "97"
										},
										{
											"begin": 1596,
											"end": 1904,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 1596,
											"end": 1904,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1596,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "51"
										},
										{
											"begin": 1596,
											"end": 1904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1596,
											"end": 1904,
											"name": "tag",
											"source": 19,
											"value": "97"
										},
										{
											"begin": 1596,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1596,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "98"
										},
										{
											"begin": 1596,
											"end": 1904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4193,
											"end": 4412,
											"name": "tag",
											"source": 19,
											"value": "21"
										},
										{
											"begin": 4193,
											"end": 4412,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4193,
											"end": 4412,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 4193,
											"end": 4412,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4193,
											"end": 4412,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4193,
											"end": 4412,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "103"
										},
										{
											"begin": 4193,
											"end": 4412,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4193,
											"end": 4412,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4193,
											"end": 4412,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4193,
											"end": 4412,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4193,
											"end": 4412,
											"name": "tag",
											"source": 19,
											"value": "103"
										},
										{
											"begin": 4193,
											"end": 4412,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4193,
											"end": 4412,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 4193,
											"end": 4412,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "105"
										},
										{
											"begin": 4193,
											"end": 4412,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 4193,
											"end": 4412,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 4193,
											"end": 4412,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "51"
										},
										{
											"begin": 4193,
											"end": 4412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4193,
											"end": 4412,
											"name": "tag",
											"source": 19,
											"value": "105"
										},
										{
											"begin": 4193,
											"end": 4412,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4193,
											"end": 4412,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "106"
										},
										{
											"begin": 4193,
											"end": 4412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6321,
											"end": 6386,
											"name": "tag",
											"source": 19,
											"value": "38"
										},
										{
											"begin": 6321,
											"end": 6386,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6369,
											"end": 6379,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "112"
										},
										{
											"begin": 6369,
											"end": 6377,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "113"
										},
										{
											"begin": 6369,
											"end": 6379,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6369,
											"end": 6379,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "112"
										},
										{
											"begin": 6369,
											"end": 6379,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6321,
											"end": 6386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2655,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4294,
											"end": 4311,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4276,
											"end": 4312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 4344,
											"end": 4361,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4363,
											"end": 4367,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4322,
											"end": 4368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2926,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2926,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4609,
											"end": 4785,
											"name": "tag",
											"source": 19,
											"value": "52"
										},
										{
											"begin": 4609,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4692,
											"end": 4718,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4692,
											"end": 4718,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 4684,
											"end": 4742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "129"
										},
										{
											"begin": 4684,
											"end": 4742,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4684,
											"end": 4742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4684,
											"end": 4742,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4684,
											"end": 4742,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4684,
											"end": 4742,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4309,
											"end": 4311,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 4684,
											"end": 4742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 4684,
											"end": 4742,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4684,
											"end": 4742,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4291,
											"end": 4312,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4348,
											"end": 4350,
											"name": "PUSH",
											"source": 20,
											"value": "13"
										},
										{
											"begin": 4328,
											"end": 4346,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 4328,
											"end": 4346,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4328,
											"end": 4346,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4321,
											"end": 4351,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A65726F206164647265737320706172616D73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4367,
											"end": 4385,
											"name": "PUSH",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 4367,
											"end": 4385,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4367,
											"end": 4385,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4360,
											"end": 4409,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4426,
											"end": 4444,
											"name": "PUSH",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 4426,
											"end": 4444,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4684,
											"end": 4742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "130"
										},
										{
											"begin": 4684,
											"end": 4742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4684,
											"end": 4742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4684,
											"end": 4742,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 4684,
											"end": 4742,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4684,
											"end": 4742,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4684,
											"end": 4742,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 4684,
											"end": 4742,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4684,
											"end": 4742,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4684,
											"end": 4742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "129"
										},
										{
											"begin": 4684,
											"end": 4742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4752,
											"end": 4763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4752,
											"end": 4778,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4752,
											"end": 4778,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4752,
											"end": 4778,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4752,
											"end": 4778,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4752,
											"end": 4778,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4752,
											"end": 4778,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4752,
											"end": 4778,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 4752,
											"end": 4778,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4752,
											"end": 4778,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4752,
											"end": 4778,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4752,
											"end": 4778,
											"modifierDepth": 1,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 4752,
											"end": 4778,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4752,
											"end": 4778,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 4609,
											"end": 4785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4418,
											"end": 4603,
											"name": "tag",
											"source": 19,
											"value": "65"
										},
										{
											"begin": 4418,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4489,
											"end": 4509,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4489,
											"end": 4509,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 4481,
											"end": 4535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "138"
										},
										{
											"begin": 4481,
											"end": 4535,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4481,
											"end": 4535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4481,
											"end": 4535,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4481,
											"end": 4535,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4481,
											"end": 4535,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4657,
											"end": 4659,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 4481,
											"end": 4535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 4481,
											"end": 4535,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4481,
											"end": 4535,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4639,
											"end": 4660,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4696,
											"end": 4698,
											"name": "PUSH",
											"source": 20,
											"value": "15"
										},
										{
											"begin": 4676,
											"end": 4694,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 4676,
											"end": 4694,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4676,
											"end": 4694,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4669,
											"end": 4699,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642061646D696E2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4715,
											"end": 4733,
											"name": "PUSH",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 4715,
											"end": 4733,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4715,
											"end": 4733,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4708,
											"end": 4759,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4776,
											"end": 4794,
											"name": "PUSH",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 4776,
											"end": 4794,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4481,
											"end": 4535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "130"
										},
										{
											"begin": 4455,
											"end": 4800,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4481,
											"end": 4535,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "138"
										},
										{
											"begin": 4481,
											"end": 4535,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4545,
											"end": 4554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 4545,
											"end": 4563,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4545,
											"end": 4563,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4545,
											"end": 4563,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4545,
											"end": 4563,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4545,
											"end": 4563,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 4545,
											"end": 4563,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4545,
											"end": 4563,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4545,
											"end": 4563,
											"modifierDepth": 1,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 4545,
											"end": 4563,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4545,
											"end": 4563,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4545,
											"end": 4563,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 4578,
											"end": 4596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4578,
											"end": 4596,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 4578,
											"end": 4596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "44D6D25963F097AD14F29F06854A01F575648A1EF82F30E562CCD3889717E339"
										},
										{
											"begin": 4578,
											"end": 4596,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4578,
											"end": 4596,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 19
										},
										{
											"begin": 4418,
											"end": 4603,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4418,
											"end": 4603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6254,
											"end": 6315,
											"name": "tag",
											"source": 19,
											"value": "71"
										},
										{
											"begin": 6254,
											"end": 6315,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6300,
											"end": 6308,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "112"
										},
										{
											"begin": 6300,
											"end": 6306,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "150"
										},
										{
											"begin": 6300,
											"end": 6308,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2063,
											"end": 3874,
											"name": "tag",
											"source": 19,
											"value": "89"
										},
										{
											"begin": 2063,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3416,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3395,
											"end": 3414,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 3395,
											"end": 3416,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3416,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3395,
											"end": 3416,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2207,
											"end": 2238,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2255,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "161"
										},
										{
											"begin": 2249,
											"end": 2254,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2249,
											"end": 2254,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2241,
											"end": 2248,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "162"
										},
										{
											"begin": 2241,
											"end": 2255,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2241,
											"end": 2255,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "161"
										},
										{
											"begin": 2241,
											"end": 2255,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2207,
											"end": 2255,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2207,
											"end": 2255,
											"modifierDepth": 2,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2273,
											"end": 2281,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2273,
											"end": 2288,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2273,
											"end": 2288,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2273,
											"end": 2288,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2293,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2265,
											"end": 2309,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "163"
										},
										{
											"begin": 2265,
											"end": 2309,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2265,
											"end": 2309,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2265,
											"end": 2309,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2265,
											"end": 2309,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2265,
											"end": 2309,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5007,
											"end": 5009,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2265,
											"end": 2309,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 2265,
											"end": 2309,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2265,
											"end": 2309,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4989,
											"end": 5010,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5046,
											"end": 5048,
											"name": "PUSH",
											"source": 20,
											"value": "B"
										},
										{
											"begin": 5026,
											"end": 5044,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 5026,
											"end": 5044,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5026,
											"end": 5044,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5019,
											"end": 5049,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616D6F756E74203D3D203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5065,
											"end": 5083,
											"name": "PUSH",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 5065,
											"end": 5083,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5065,
											"end": 5083,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5058,
											"end": 5099,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5116,
											"end": 5134,
											"name": "PUSH",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 5116,
											"end": 5134,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2265,
											"end": 2309,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "130"
										},
										{
											"begin": 4805,
											"end": 5140,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2265,
											"end": 2309,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "163"
										},
										{
											"begin": 2265,
											"end": 2309,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2340,
											"end": 2357,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2340,
											"end": 2357,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2340,
											"end": 2371,
											"modifierDepth": 2,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2340,
											"end": 2371,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2340,
											"end": 2371,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2340,
											"end": 2371,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2340,
											"end": 2371,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2340,
											"end": 2406,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "166"
										},
										{
											"begin": 2340,
											"end": 2406,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2375,
											"end": 2392,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2375,
											"end": 2392,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2375,
											"end": 2392,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2375,
											"end": 2392,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2375,
											"end": 2406,
											"modifierDepth": 2,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2375,
											"end": 2406,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2375,
											"end": 2406,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2340,
											"end": 2406,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "166"
										},
										{
											"begin": 2340,
											"end": 2406,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2319,
											"end": 2446,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "167"
										},
										{
											"begin": 2319,
											"end": 2446,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2319,
											"end": 2446,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2446,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2319,
											"end": 2446,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2319,
											"end": 2446,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5347,
											"end": 5349,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2319,
											"end": 2446,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 2319,
											"end": 2446,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2319,
											"end": 2446,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5329,
											"end": 5350,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5386,
											"end": 5388,
											"name": "PUSH",
											"source": 20,
											"value": "E"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5359,
											"end": 5389,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E76616C696420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5405,
											"end": 5423,
											"name": "PUSH",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 5405,
											"end": 5423,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5405,
											"end": 5423,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5398,
											"end": 5442,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5459,
											"end": 5477,
											"name": "PUSH",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 5459,
											"end": 5477,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2319,
											"end": 2446,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "130"
										},
										{
											"begin": 5145,
											"end": 5483,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2319,
											"end": 2446,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "167"
										},
										{
											"begin": 2319,
											"end": 2446,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2498,
											"end": 2506,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2498,
											"end": 2515,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2498,
											"end": 2515,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2498,
											"end": 2515,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2477,
											"end": 2515,
											"modifierDepth": 2,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2477,
											"end": 2485,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2477,
											"end": 2494,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2477,
											"end": 2494,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2477,
											"end": 2494,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2477,
											"end": 2515,
											"modifierDepth": 2,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2456,
											"end": 2563,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "170"
										},
										{
											"begin": 2456,
											"end": 2563,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2456,
											"end": 2563,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2456,
											"end": 2563,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2456,
											"end": 2563,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2456,
											"end": 2563,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5690,
											"end": 5692,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2456,
											"end": 2563,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 2456,
											"end": 2563,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2456,
											"end": 2563,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5672,
											"end": 5693,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5729,
											"end": 5731,
											"name": "PUSH",
											"source": 20,
											"value": "16"
										},
										{
											"begin": 5709,
											"end": 5727,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 5709,
											"end": 5727,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5709,
											"end": 5727,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5702,
											"end": 5732,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39B931903A37B5B2B7101E9E903239BA103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5748,
											"end": 5766,
											"name": "PUSH",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 5748,
											"end": 5766,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5748,
											"end": 5766,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5741,
											"end": 5793,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "PUSH",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2456,
											"end": 2563,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "130"
										},
										{
											"begin": 5488,
											"end": 5834,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2456,
											"end": 2563,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "170"
										},
										{
											"begin": 2456,
											"end": 2563,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2577,
											"end": 2587,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 19
										},
										{
											"begin": 2599,
											"end": 2603,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 2577,
											"end": 2604,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 2573,
											"end": 2683,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "174"
										},
										{
											"begin": 2573,
											"end": 2683,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2628,
											"end": 2638,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2628,
											"end": 2650,
											"modifierDepth": 2,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2628,
											"end": 2650,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 2620,
											"end": 2672,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "174"
										},
										{
											"begin": 2620,
											"end": 2672,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2620,
											"end": 2672,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2620,
											"end": 2672,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2620,
											"end": 2672,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2620,
											"end": 2672,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6041,
											"end": 6043,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2620,
											"end": 2672,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 2620,
											"end": 2672,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2620,
											"end": 2672,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6023,
											"end": 6044,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6080,
											"end": 6082,
											"name": "PUSH",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 6060,
											"end": 6078,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 6060,
											"end": 6078,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6060,
											"end": 6078,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6053,
											"end": 6083,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B0B63632B910109E9039BBB0B83832B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6099,
											"end": 6117,
											"name": "PUSH",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 6099,
											"end": 6117,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6099,
											"end": 6117,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6092,
											"end": 6139,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6156,
											"end": 6174,
											"name": "PUSH",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 6156,
											"end": 6174,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2620,
											"end": 2672,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "130"
										},
										{
											"begin": 5839,
											"end": 6180,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2620,
											"end": 2672,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "174"
										},
										{
											"begin": 2620,
											"end": 2672,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2696,
											"end": 2713,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2696,
											"end": 2713,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2696,
											"end": 2729,
											"modifierDepth": 2,
											"name": "AND",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2696,
											"end": 2729,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2692,
											"end": 3209,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "177"
										},
										{
											"begin": 2692,
											"end": 3209,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2766,
											"end": 2774,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2766,
											"end": 2781,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2766,
											"end": 2781,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2766,
											"end": 2781,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2753,
											"end": 2762,
											"modifierDepth": 2,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 2753,
											"end": 2781,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 2745,
											"end": 2805,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "178"
										},
										{
											"begin": 2745,
											"end": 2805,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2745,
											"end": 2805,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2745,
											"end": 2805,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2745,
											"end": 2805,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2745,
											"end": 2805,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6387,
											"end": 6389,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2745,
											"end": 2805,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 2745,
											"end": 2805,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2745,
											"end": 2805,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6369,
											"end": 6390,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6426,
											"end": 6428,
											"name": "PUSH",
											"source": 20,
											"value": "13"
										},
										{
											"begin": 6406,
											"end": 6424,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 6406,
											"end": 6424,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6406,
											"end": 6424,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6399,
											"end": 6429,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B5CD9CB9D985B1D5948084F48185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6445,
											"end": 6463,
											"name": "PUSH",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 6445,
											"end": 6463,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6445,
											"end": 6463,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6438,
											"end": 6487,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6504,
											"end": 6522,
											"name": "PUSH",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 6504,
											"end": 6522,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2745,
											"end": 2805,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "130"
										},
										{
											"begin": 6185,
											"end": 6528,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2745,
											"end": 2805,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "178"
										},
										{
											"begin": 2745,
											"end": 2805,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2692,
											"end": 3209,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "195"
										},
										{
											"begin": 2692,
											"end": 3209,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2692,
											"end": 3209,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "177"
										},
										{
											"begin": 2692,
											"end": 3209,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2844,
											"end": 2853,
											"modifierDepth": 2,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 2844,
											"end": 2858,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2836,
											"end": 2877,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "182"
										},
										{
											"begin": 2836,
											"end": 2877,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2836,
											"end": 2877,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2836,
											"end": 2877,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2836,
											"end": 2877,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2836,
											"end": 2877,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6735,
											"end": 6737,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2877,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 2836,
											"end": 2877,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2836,
											"end": 2877,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6717,
											"end": 6738,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6774,
											"end": 6776,
											"name": "PUSH",
											"source": 20,
											"value": "E"
										},
										{
											"begin": 6754,
											"end": 6772,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 6754,
											"end": 6772,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6754,
											"end": 6772,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6747,
											"end": 6777,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6D73672E76616C756520213D203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "94"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6793,
											"end": 6811,
											"name": "PUSH",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 6793,
											"end": 6811,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6793,
											"end": 6811,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6786,
											"end": 6830,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6847,
											"end": 6865,
											"name": "PUSH",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 6847,
											"end": 6865,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2836,
											"end": 2877,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "130"
										},
										{
											"begin": 6533,
											"end": 6871,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2836,
											"end": 2877,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "182"
										},
										{
											"begin": 2836,
											"end": 2877,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2962,
											"end": 2979,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2962,
											"end": 2979,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 3000,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2955,
											"end": 3000,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 178,
											"end": 210,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 2955,
											"end": 3000,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2955,
											"end": 2990,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 2990,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 2990,
											"modifierDepth": 2,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 2990,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 2990,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "70A08231"
										},
										{
											"begin": 2955,
											"end": 2990,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "187"
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 3000,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "187"
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "188"
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "189"
										},
										{
											"begin": 2955,
											"end": 3000,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "188"
										},
										{
											"begin": 2955,
											"end": 3000,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2916,
											"end": 2924,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2916,
											"end": 2931,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2916,
											"end": 2931,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2916,
											"end": 2931,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2916,
											"end": 3000,
											"modifierDepth": 2,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 2916,
											"end": 3000,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2891,
											"end": 3054,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "190"
										},
										{
											"begin": 2891,
											"end": 3054,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2891,
											"end": 3054,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2891,
											"end": 3054,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2891,
											"end": 3054,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2891,
											"end": 3054,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7267,
											"end": 7269,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2891,
											"end": 3054,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 2891,
											"end": 3054,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2891,
											"end": 3054,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7249,
											"end": 7270,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7306,
											"end": 7308,
											"name": "PUSH",
											"source": 20,
											"value": "14"
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7279,
											"end": 7309,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E73756666696369656E742062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7325,
											"end": 7343,
											"name": "PUSH",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 7325,
											"end": 7343,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7325,
											"end": 7343,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7318,
											"end": 7368,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7385,
											"end": 7403,
											"name": "PUSH",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 7385,
											"end": 7403,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2891,
											"end": 3054,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "130"
										},
										{
											"begin": 7065,
											"end": 7409,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2891,
											"end": 3054,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "190"
										},
										{
											"begin": 2891,
											"end": 3054,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3068,
											"end": 3127,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "193"
										},
										{
											"begin": 3082,
											"end": 3090,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3082,
											"end": 3099,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3099,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3082,
											"end": 3099,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3101,
											"end": 3109,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3111,
											"end": 3119,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3111,
											"end": 3126,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3111,
											"end": 3126,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3111,
											"end": 3126,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3068,
											"end": 3081,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "194"
										},
										{
											"begin": 3068,
											"end": 3127,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3068,
											"end": 3127,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "193"
										},
										{
											"begin": 3068,
											"end": 3127,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3150,
											"end": 3167,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3150,
											"end": 3167,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3150,
											"end": 3167,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3169,
											"end": 3180,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 3182,
											"end": 3197,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3182,
											"end": 3197,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3182,
											"end": 3197,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3182,
											"end": 3197,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3141,
											"end": 3198,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "195"
										},
										{
											"begin": 3141,
											"end": 3198,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3150,
											"end": 3167,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3169,
											"end": 3180,
											"modifierDepth": 2,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3169,
											"end": 3180,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3141,
											"end": 3149,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "196"
										},
										{
											"begin": 3141,
											"end": 3198,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3141,
											"end": 3198,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "195"
										},
										{
											"begin": 3141,
											"end": 3198,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3240,
											"end": 3255,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "197"
										},
										{
											"begin": 3246,
											"end": 3254,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3240,
											"end": 3245,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "198"
										},
										{
											"begin": 3240,
											"end": 3255,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3240,
											"end": 3255,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "197"
										},
										{
											"begin": 3240,
											"end": 3255,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3219,
											"end": 3255,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3219,
											"end": 3255,
											"modifierDepth": 2,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3265,
											"end": 3276,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3314,
											"end": 3319,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "2710"
										},
										{
											"begin": 3293,
											"end": 3310,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 3293,
											"end": 3310,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 3280,
											"end": 3290,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3280,
											"end": 3310,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "199"
										},
										{
											"begin": 3280,
											"end": 3310,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3280,
											"end": 3310,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3280,
											"end": 3310,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "200"
										},
										{
											"begin": 3280,
											"end": 3310,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3280,
											"end": 3310,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "199"
										},
										{
											"begin": 3280,
											"end": 3310,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3279,
											"end": 3319,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "201"
										},
										{
											"begin": 3279,
											"end": 3319,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3279,
											"end": 3319,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3279,
											"end": 3319,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "202"
										},
										{
											"begin": 3279,
											"end": 3319,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3279,
											"end": 3319,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "201"
										},
										{
											"begin": 3279,
											"end": 3319,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3265,
											"end": 3319,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3265,
											"end": 3319,
											"modifierDepth": 2,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 975,
											"end": 1017,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3334,
											"end": 3367,
											"modifierDepth": 2,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3334,
											"end": 3342,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3334,
											"end": 3351,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3334,
											"end": 3351,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3334,
											"end": 3351,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3334,
											"end": 3367,
											"modifierDepth": 2,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3334,
											"end": 3367,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3330,
											"end": 3681,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "203"
										},
										{
											"begin": 3330,
											"end": 3681,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3392,
											"end": 3401,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 3392,
											"end": 3401,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 3383,
											"end": 3416,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3383,
											"end": 3416,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3392,
											"end": 3401,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3392,
											"end": 3401,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3392,
											"end": 3401,
											"modifierDepth": 2,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3392,
											"end": 3401,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3383,
											"end": 3416,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3383,
											"end": 3416,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3383,
											"end": 3416,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "8FC"
										},
										{
											"begin": 3383,
											"end": 3416,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 3383,
											"end": 3416,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3412,
											"end": 3415,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3412,
											"end": 3415,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3392,
											"end": 3401,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3416,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3392,
											"end": 3401,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3383,
											"end": 3416,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3412,
											"end": 3415,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3392,
											"end": 3401,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 3383,
											"end": 3416,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 3383,
											"end": 3416,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 19
										},
										{
											"begin": 3383,
											"end": 3416,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 3383,
											"end": 3416,
											"modifierDepth": 2,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3383,
											"end": 3416,
											"modifierDepth": 2,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3383,
											"end": 3416,
											"modifierDepth": 2,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3383,
											"end": 3416,
											"modifierDepth": 2,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3383,
											"end": 3416,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3383,
											"end": 3416,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3383,
											"end": 3416,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3383,
											"end": 3416,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "205"
										},
										{
											"begin": 3383,
											"end": 3416,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3383,
											"end": 3416,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 3383,
											"end": 3416,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3416,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3383,
											"end": 3416,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 3383,
											"end": 3416,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 3383,
											"end": 3416,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3416,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3383,
											"end": 3416,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "205"
										},
										{
											"begin": 3383,
											"end": 3416,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3430,
											"end": 3447,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "206"
										},
										{
											"begin": 3444,
											"end": 3447,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3430,
											"end": 3447,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3430,
											"end": 3447,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "207"
										},
										{
											"begin": 3430,
											"end": 3447,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3430,
											"end": 3447,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "206"
										},
										{
											"begin": 3430,
											"end": 3447,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3499,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3461,
											"end": 3499,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3430,
											"end": 3447,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3430,
											"end": 3447,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3461,
											"end": 3487,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3487,
											"modifierDepth": 2,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3487,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3499,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3499,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3499,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "8FC"
										},
										{
											"begin": 3461,
											"end": 3499,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3499,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3430,
											"end": 3447,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3430,
											"end": 3447,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3499,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3461,
											"end": 3499,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3499,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3499,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3430,
											"end": 3447,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3487,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3499,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3499,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3499,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3499,
											"modifierDepth": 2,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3499,
											"modifierDepth": 2,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3499,
											"modifierDepth": 2,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3499,
											"modifierDepth": 2,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3499,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3499,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3499,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3499,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "209"
										},
										{
											"begin": 3461,
											"end": 3499,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3499,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3499,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3461,
											"end": 3499,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3499,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3499,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3499,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3461,
											"end": 3499,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3499,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "209"
										},
										{
											"begin": 3461,
											"end": 3499,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3461,
											"end": 3499,
											"modifierDepth": 2,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3330,
											"end": 3681,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "214"
										},
										{
											"begin": 3330,
											"end": 3681,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3330,
											"end": 3681,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "203"
										},
										{
											"begin": 3330,
											"end": 3681,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3540,
											"end": 3557,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3540,
											"end": 3557,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3540,
											"end": 3557,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3540,
											"end": 3557,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3560,
											"end": 3569,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 3560,
											"end": 3569,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 3530,
											"end": 3575,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "211"
										},
										{
											"begin": 3530,
											"end": 3575,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3540,
											"end": 3557,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3560,
											"end": 3569,
											"modifierDepth": 2,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3571,
											"end": 3574,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3530,
											"end": 3539,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "212"
										},
										{
											"begin": 3530,
											"end": 3575,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3530,
											"end": 3575,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "211"
										},
										{
											"begin": 3530,
											"end": 3575,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3589,
											"end": 3606,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "213"
										},
										{
											"begin": 3603,
											"end": 3606,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3589,
											"end": 3606,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3589,
											"end": 3606,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "207"
										},
										{
											"begin": 3589,
											"end": 3606,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3589,
											"end": 3606,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "213"
										},
										{
											"begin": 3589,
											"end": 3606,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3589,
											"end": 3606,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3589,
											"end": 3606,
											"modifierDepth": 2,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3620,
											"end": 3670,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "214"
										},
										{
											"begin": 3630,
											"end": 3638,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3630,
											"end": 3647,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3630,
											"end": 3647,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3630,
											"end": 3647,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3649,
											"end": 3657,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3659,
											"end": 3669,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3620,
											"end": 3629,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "212"
										},
										{
											"begin": 3620,
											"end": 3670,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3620,
											"end": 3670,
											"modifierDepth": 2,
											"name": "tag",
											"source": 19,
											"value": "214"
										},
										{
											"begin": 3620,
											"end": 3670,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3770,
											"end": 3787,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3770,
											"end": 3787,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3770,
											"end": 3787,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3770,
											"end": 3787,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3770,
											"end": 3787,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3739,
											"end": 3756,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3739,
											"end": 3756,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3801,
											"end": 3816,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3801,
											"end": 3816,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3801,
											"end": 3816,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 3801,
											"end": 3816,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3801,
											"end": 3816,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3696,
											"end": 3867,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3696,
											"end": 3867,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 8276,
											"end": 8301,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8276,
											"end": 8301,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8276,
											"end": 8301,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8317,
											"end": 8335,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 8317,
											"end": 8335,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 8317,
											"end": 8335,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8310,
											"end": 8344,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 8310,
											"end": 8344,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8310,
											"end": 8344,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8360,
											"end": 8378,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8360,
											"end": 8378,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8353,
											"end": 8387,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 8353,
											"end": 8387,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8353,
											"end": 8387,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3696,
											"end": 3867,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3696,
											"end": 3867,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3696,
											"end": 3867,
											"modifierDepth": 2,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3696,
											"end": 3867,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3696,
											"end": 3867,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3696,
											"end": 3867,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3696,
											"end": 3867,
											"modifierDepth": 2,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3696,
											"end": 3867,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3696,
											"end": 3867,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 3696,
											"end": 3867,
											"modifierDepth": 2,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3696,
											"end": 3867,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3696,
											"end": 3867,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "C9163C3BDF7263ACF1BB3D24072CC7DA025F7181C31E2EDC7E1673EDF5E0CA32"
										},
										{
											"begin": 3696,
											"end": 3867,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8264,
											"end": 8266,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 8249,
											"end": 8267,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3696,
											"end": 3867,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3696,
											"end": 3867,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3696,
											"end": 3867,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3696,
											"end": 3867,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3696,
											"end": 3867,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3696,
											"end": 3867,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3696,
											"end": 3867,
											"modifierDepth": 2,
											"name": "LOG4",
											"source": 19
										},
										{
											"begin": 2197,
											"end": 3874,
											"modifierDepth": 2,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2197,
											"end": 3874,
											"modifierDepth": 2,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2197,
											"end": 3874,
											"modifierDepth": 2,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3437,
											"end": 3457,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 1949,
											"end": 1950,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2532,
											"end": 2562,
											"name": "PUSH",
											"source": 5,
											"value": "9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00"
										},
										{
											"begin": 4113,
											"end": 4136,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3860,
											"end": 4143,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3437,
											"end": 3457,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 3437,
											"end": 3457,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2063,
											"end": 3874,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2063,
											"end": 3874,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2063,
											"end": 3874,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2063,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3880,
											"end": 4187,
											"name": "tag",
											"source": 19,
											"value": "94"
										},
										{
											"begin": 3880,
											"end": 4187,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4095,
											"end": 4112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 4095,
											"end": 4132,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4095,
											"end": 4132,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4095,
											"end": 4132,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 4147,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4147,
											"end": 4180,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4147,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "382455F3B749ABDE7721258DCFA10A22F30D4A28C69151A002DCBD8D1462E4F2"
										},
										{
											"begin": 4147,
											"end": 4180,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1814,
											"end": 1816,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4147,
											"end": 4180,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "222"
										},
										{
											"begin": 4147,
											"end": 4180,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4147,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4147,
											"end": 4180,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 4147,
											"end": 4180,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4147,
											"end": 4180,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4147,
											"end": 4180,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 4147,
											"end": 4180,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4147,
											"end": 4180,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 19
										},
										{
											"begin": 3880,
											"end": 4187,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3880,
											"end": 4187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1596,
											"end": 1904,
											"name": "tag",
											"source": 19,
											"value": "98"
										},
										{
											"begin": 1596,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1713,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "232"
										},
										{
											"begin": 1702,
											"end": 1712,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 19
										},
										{
											"begin": 1687,
											"end": 1701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "233"
										},
										{
											"begin": 1687,
											"end": 1713,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1687,
											"end": 1713,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "232"
										},
										{
											"begin": 1687,
											"end": 1713,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1723,
											"end": 1740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "234"
										},
										{
											"begin": 1723,
											"end": 1738,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "235"
										},
										{
											"begin": 1723,
											"end": 1740,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1723,
											"end": 1740,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "234"
										},
										{
											"begin": 1723,
											"end": 1740,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1750,
											"end": 1774,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "236"
										},
										{
											"begin": 1750,
											"end": 1772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "237"
										},
										{
											"begin": 1750,
											"end": 1774,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1750,
											"end": 1774,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "236"
										},
										{
											"begin": 1750,
											"end": 1774,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1786,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "238"
										},
										{
											"begin": 1786,
											"end": 1808,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "239"
										},
										{
											"begin": 1786,
											"end": 1810,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1786,
											"end": 1810,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "238"
										},
										{
											"begin": 1786,
											"end": 1810,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1840,
											"end": 1842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "32"
										},
										{
											"begin": 1820,
											"end": 1837,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 1820,
											"end": 1842,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 1875,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 1875,
											"end": 1897,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1875,
											"end": 1897,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1875,
											"end": 1897,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1875,
											"end": 1897,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 1875,
											"end": 1897,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1875,
											"end": 1897,
											"modifierDepth": 1,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 1875,
											"end": 1897,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1875,
											"end": 1897,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 8551,
											"end": 8601,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8551,
											"end": 8601,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8539,
											"end": 8541,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 8524,
											"end": 8542,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1596,
											"end": 1904,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1596,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4193,
											"end": 4412,
											"name": "tag",
											"source": 19,
											"value": "106"
										},
										{
											"begin": 4193,
											"end": 4412,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4250,
											"end": 4257,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4273,
											"end": 4295,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4273,
											"end": 4295,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 4273,
											"end": 4295,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4269,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "250"
										},
										{
											"begin": 4269,
											"end": 4350,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4318,
											"end": 4339,
											"name": "SELFBALANCE",
											"source": 19
										},
										{
											"begin": 4318,
											"end": 4339,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4193,
											"end": 4412,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4193,
											"end": 4412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4269,
											"end": 4350,
											"name": "tag",
											"source": 19,
											"value": "250"
										},
										{
											"begin": 4269,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4399,
											"end": 4403,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4366,
											"end": 4390,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4390,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4390,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4390,
											"name": "PUSH",
											"source": 19,
											"value": "70A08231"
										},
										{
											"begin": 4366,
											"end": 4390,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "STATICCALL",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "253"
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "tag",
											"source": 19,
											"value": "253"
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "254"
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "189"
										},
										{
											"begin": 4366,
											"end": 4405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "tag",
											"source": 19,
											"value": "254"
										},
										{
											"begin": 4366,
											"end": 4405,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4359,
											"end": 4405,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4193,
											"end": 4412,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4193,
											"end": 4412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3674,
											"end": 3852,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3674,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 2563,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 2563,
											"end": 2579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3832,
											"end": 3844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 3832,
											"end": 3844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3845,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4603,
											"end": 4915,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4603,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4683,
											"end": 4687,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4692,
											"end": 4698,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2022,
											"name": "tag",
											"source": 19,
											"value": "119"
										},
										{
											"begin": 1910,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6174,
											"end": 6191,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 6156,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A875269"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1680,
											"end": 1857,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 6409,
											"end": 6426,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6432,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 6379,
											"end": 6433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5032,
											"end": 5245,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 5032,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5106,
											"end": 5110,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3542,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 3366,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3496,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3522,
											"end": 3534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2905,
											"end": 3033,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2905,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D93C0665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3854,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 3470,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2532,
											"end": 2562,
											"name": "PUSH",
											"source": 5,
											"value": "9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00"
										},
										{
											"begin": 3670,
											"end": 3679,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3670,
											"end": 3679,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3670,
											"end": 3690,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3666,
											"end": 3754,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 3666,
											"end": 3754,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3EE5AEB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3666,
											"end": 3754,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 3666,
											"end": 3754,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 1992,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3828,
											"end": 3847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3828,
											"end": 3847,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4792,
											"end": 5105,
											"name": "tag",
											"source": 19,
											"value": "162"
										},
										{
											"begin": 4792,
											"end": 5105,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 4967,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "313"
										},
										{
											"begin": 4967,
											"end": 5054,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 4967,
											"end": 5054,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 4967,
											"end": 5054,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4967,
											"end": 5054,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 4967,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "314"
										},
										{
											"begin": 4967,
											"end": 5054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4967,
											"end": 5054,
											"name": "tag",
											"source": 19,
											"value": "313"
										},
										{
											"begin": 4967,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5071,
											"end": 5098,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4792,
											"end": 5105,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4792,
											"end": 5105,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4792,
											"end": 5105,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4792,
											"end": 5105,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4792,
											"end": 5105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6060,
											"end": 6248,
											"name": "tag",
											"source": 19,
											"value": "194"
										},
										{
											"begin": 6060,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6179,
											"end": 6241,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6179,
											"end": 6210,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6179,
											"end": 6210,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 6211,
											"end": 6216,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6226,
											"end": 6230,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 6233,
											"end": 6240,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6179,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "317"
										},
										{
											"begin": 6179,
											"end": 6241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5581,
											"end": 5887,
											"name": "tag",
											"source": 19,
											"value": "196"
										},
										{
											"begin": 5581,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5751,
											"end": 5755,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9713,
											"end": 9764,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9800,
											"end": 9832,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 9800,
											"end": 9832,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9800,
											"end": 9832,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 9780,
											"end": 9798,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 9780,
											"end": 9798,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 9780,
											"end": 9798,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9773,
											"end": 9833,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5698,
											"end": 5715,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5698,
											"end": 5715,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5742,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5742,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5742,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5742,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5742,
											"name": "PUSH",
											"source": 19,
											"value": "DD62ED3E"
										},
										{
											"begin": 5718,
											"end": 5742,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "PUSH",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "STATICCALL",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "322"
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "tag",
											"source": 19,
											"value": "322"
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "189"
										},
										{
											"begin": 5718,
											"end": 5767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "tag",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 5718,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5698,
											"end": 5767,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5698,
											"end": 5767,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5793,
											"end": 5800,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5781,
											"end": 5790,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5781,
											"end": 5800,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 5777,
											"end": 5881,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5777,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "324"
										},
										{
											"begin": 5777,
											"end": 5881,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10036,
											"end": 10068,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 10036,
											"end": 10068,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10036,
											"end": 10068,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10018,
											"end": 10069,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 10085,
											"end": 10103,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 10085,
											"end": 10103,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10085,
											"end": 10103,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10078,
											"end": 10112,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 10078,
											"end": 10112,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10078,
											"end": 10112,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5829,
											"end": 5851,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5851,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5851,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5851,
											"name": "PUSH",
											"source": 19,
											"value": "95EA7B3"
										},
										{
											"begin": 5829,
											"end": 5851,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9991,
											"end": 10009,
											"name": "PUSH",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 9991,
											"end": 10009,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "CALL",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "tag",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "329"
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 5829,
											"end": 5870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "tag",
											"source": 19,
											"value": "329"
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5777,
											"end": 5881,
											"name": "tag",
											"source": 19,
											"value": "324"
										},
										{
											"begin": 5777,
											"end": 5881,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5688,
											"end": 5887,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5581,
											"end": 5887,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5581,
											"end": 5887,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5581,
											"end": 5887,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5581,
											"end": 5887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5111,
											"end": 5575,
											"name": "tag",
											"source": 19,
											"value": "198"
										},
										{
											"begin": 5111,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5177,
											"end": 5184,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5196,
											"end": 5221,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5224,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "332"
										},
										{
											"begin": 5235,
											"end": 5244,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5235,
											"end": 5253,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5235,
											"end": 5253,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5235,
											"end": 5253,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5224,
											"end": 5234,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "106"
										},
										{
											"begin": 5224,
											"end": 5254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5224,
											"end": 5254,
											"name": "tag",
											"source": 19,
											"value": "332"
										},
										{
											"begin": 5224,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5265,
											"end": 5277,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5283,
											"end": 5294,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5294,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 5318,
											"end": 5332,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 5318,
											"end": 5332,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5318,
											"end": 5332,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5318,
											"end": 5332,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5196,
											"end": 5254,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 5196,
											"end": 5254,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5265,
											"end": 5277,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5265,
											"end": 5277,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5283,
											"end": 5294,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5294,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5294,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5294,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5307,
											"end": 5316,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 5307,
											"end": 5316,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5318,
											"end": 5332,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 5283,
											"end": 5333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "tag",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "CALL",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "337"
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "PUSH",
											"source": 19,
											"value": "3F"
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "tag",
											"source": 19,
											"value": "337"
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "tag",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5283,
											"end": 5333,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5264,
											"end": 5333,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5264,
											"end": 5333,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5264,
											"end": 5333,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5351,
											"end": 5358,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5343,
											"end": 5374,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 5343,
											"end": 5374,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5343,
											"end": 5374,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5343,
											"end": 5374,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5343,
											"end": 5374,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5343,
											"end": 5374,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10899,
											"end": 10901,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 5343,
											"end": 5374,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 5343,
											"end": 5374,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5343,
											"end": 5374,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10881,
											"end": 10902,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 10938,
											"end": 10940,
											"name": "PUSH",
											"source": 20,
											"value": "B"
										},
										{
											"begin": 10918,
											"end": 10936,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 10918,
											"end": 10936,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10918,
											"end": 10936,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10911,
											"end": 10941,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CDDD85C0819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10957,
											"end": 10975,
											"name": "PUSH",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 10957,
											"end": 10975,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10957,
											"end": 10975,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10950,
											"end": 10991,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11008,
											"end": 11026,
											"name": "PUSH",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 11008,
											"end": 11026,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5343,
											"end": 5374,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "130"
										},
										{
											"begin": 10697,
											"end": 11032,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5343,
											"end": 5374,
											"name": "tag",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 5343,
											"end": 5374,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5384,
											"end": 5408,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5411,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 5422,
											"end": 5431,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 5422,
											"end": 5440,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5422,
											"end": 5440,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5422,
											"end": 5440,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5411,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "106"
										},
										{
											"begin": 5411,
											"end": 5441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5411,
											"end": 5441,
											"name": "tag",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 5411,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5384,
											"end": 5441,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5451,
											"end": 5469,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5472,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 5491,
											"end": 5508,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5384,
											"end": 5441,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5472,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "207"
										},
										{
											"begin": 5472,
											"end": 5508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5472,
											"end": 5508,
											"name": "tag",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 5472,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5451,
											"end": 5508,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5451,
											"end": 5508,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5525,
											"end": 5535,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5539,
											"end": 5540,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5525,
											"end": 5540,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 5518,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "344"
										},
										{
											"begin": 5518,
											"end": 5541,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5518,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "344"
										},
										{
											"begin": 5518,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "345"
										},
										{
											"begin": 5518,
											"end": 5541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5518,
											"end": 5541,
											"name": "tag",
											"source": 19,
											"value": "344"
										},
										{
											"begin": 5518,
											"end": 5541,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5558,
											"end": 5568,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 5111,
											"end": 5575,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5111,
											"end": 5575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "tag",
											"source": 19,
											"value": "212"
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6006,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6006,
											"end": 6033,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6006,
											"end": 6033,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 6034,
											"end": 6037,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6039,
											"end": 6046,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6006,
											"end": 6033,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 6006,
											"end": 6047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3860,
											"end": 4143,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 3860,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1950,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2532,
											"end": 2562,
											"name": "PUSH",
											"source": 5,
											"value": "9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00"
										},
										{
											"begin": 4113,
											"end": 4136,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3860,
											"end": 4143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1933,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 1836,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 1926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1899,
											"end": 1924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "362"
										},
										{
											"begin": 1899,
											"end": 1926,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2684,
											"end": 2795,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2684,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2754,
											"end": 2786,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 2754,
											"end": 2788,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3231,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 3105,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8DFC202B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 2374,
											"end": 2391,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 2355,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 11,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2458,
											"end": 2473,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 2518,
											"end": 2535,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2537,
											"end": 2541,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2489,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 2489,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 2573,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 2573,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11389,
											"end": 11421,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 11389,
											"end": 11421,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 11389,
											"end": 11421,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11371,
											"end": 11422,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11458,
											"end": 11490,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 11458,
											"end": 11490,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 11458,
											"end": 11490,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 11438,
											"end": 11456,
											"name": "PUSH",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 11438,
											"end": 11456,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 11438,
											"end": 11456,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11431,
											"end": 11491,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11507,
											"end": 11525,
											"name": "PUSH",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 11507,
											"end": 11525,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11507,
											"end": 11525,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11500,
											"end": 11534,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 11500,
											"end": 11534,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11500,
											"end": 11534,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1790,
											"end": 1795,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1790,
											"end": 1795,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11344,
											"end": 11362,
											"name": "PUSH",
											"source": 20,
											"value": "84"
										},
										{
											"begin": 11344,
											"end": 11362,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "tag",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 1770,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "tag",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10036,
											"end": 10068,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 10036,
											"end": 10068,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10036,
											"end": 10068,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10018,
											"end": 10069,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 10085,
											"end": 10103,
											"name": "PUSH",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 10085,
											"end": 10103,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10085,
											"end": 10103,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10078,
											"end": 10112,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 10078,
											"end": 10112,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10078,
											"end": 10112,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "217"
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 14,
											"value": "A9059CBB"
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9991,
											"end": 10009,
											"name": "PUSH",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 9991,
											"end": 10009,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 9844,
											"end": 10118,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 2095,
											"name": "tag",
											"source": 4,
											"value": "362"
										},
										{
											"begin": 1939,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2071,
											"end": 2088,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1939,
											"end": 2095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2801,
											"end": 2984,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 2801,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1748,
											"end": 1765,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1782,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "tag",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1671,
											"end": 1952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "tag",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4022,
											"end": 4045,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4055,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4049,
											"end": 4068,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4069,
											"end": 4073,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 4049,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DELEGATECALL",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 15,
											"value": "3F"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 4118,
											"end": 4124,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4126,
											"end": 4133,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4135,
											"end": 4145,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4091,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 4091,
											"end": 4146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "tag",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6163,
											"end": 6172,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 6163,
											"end": 6176,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B398979F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "tag",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7818,
											"end": 7836,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7865,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7984,
											"end": 7988,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7981,
											"end": 7982,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7974,
											"end": 7978,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7968,
											"end": 7979,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7961,
											"end": 7965,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7955,
											"end": 7959,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7951,
											"end": 7966,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7948,
											"end": 7949,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7946,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 7934,
											"end": 7939,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 7929,
											"end": 7989,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 8041,
											"end": 8048,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8085,
											"end": 8089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8090,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 8130,
											"end": 8146,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 8127,
											"end": 8128,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8107,
											"end": 8147,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 8176,
											"end": 8192,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8164,
											"end": 8193,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "tag",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8284,
											"end": 8285,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8278,
											"end": 8286,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 8234,
											"end": 8250,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 8234,
											"end": 8250,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8310,
											"end": 8325,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8310,
											"end": 8325,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8377,
											"end": 8378,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 8328,
											"end": 8359,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "tag",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4565,
											"end": 4577,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 4594,
											"end": 4601,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "437"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 4625,
											"end": 4635,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4617,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 4617,
											"end": 4636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "tag",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "tag",
											"source": 15,
											"value": "437"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4841,
											"end": 4858,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4841,
											"end": 4858,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4841,
											"end": 4863,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "441"
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "EXTCODESIZE",
											"source": 15
										},
										{
											"begin": 4867,
											"end": 4890,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "tag",
											"source": 15,
											"value": "441"
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "tag",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4976,
											"end": 4986,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "tag",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4421,
											"end": 5003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5543,
											"end": 6030,
											"name": "tag",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 5543,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5674,
											"end": 5691,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5674,
											"end": 5691,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5674,
											"end": 5695,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5871,
											"end": 5881,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5865,
											"end": 5882,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5927,
											"end": 5942,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5914,
											"end": 5924,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5910,
											"end": 5912,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5906,
											"end": 5925,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5899,
											"end": 5943,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "tag",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D6BDA275"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 222,
											"end": 353,
											"name": "tag",
											"source": 20,
											"value": "447"
										},
										{
											"begin": 222,
											"end": 353,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 297,
											"end": 328,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 297,
											"end": 328,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 287,
											"end": 329,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 287,
											"end": 329,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 277,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "248"
										},
										{
											"begin": 277,
											"end": 347,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 341,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 333,
											"end": 345,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 358,
											"end": 485,
											"name": "tag",
											"source": 20,
											"value": "448"
										},
										{
											"begin": 358,
											"end": 485,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 419,
											"end": 429,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B71"
										},
										{
											"begin": 414,
											"end": 417,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 410,
											"end": 430,
											"name": "SHL",
											"source": 20
										},
										{
											"begin": 407,
											"end": 408,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 431,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 450,
											"end": 454,
											"name": "PUSH",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 447,
											"end": 448,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 440,
											"end": 455,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 474,
											"end": 478,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 471,
											"end": 472,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 490,
											"end": 1215,
											"name": "tag",
											"source": 20,
											"value": "449"
										},
										{
											"begin": 490,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 532,
											"end": 537,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 588,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 578,
											"end": 582,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 570,
											"end": 576,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 566,
											"end": 583,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 562,
											"end": 589,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 552,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "458"
										},
										{
											"begin": 552,
											"end": 607,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 603,
											"end": 604,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 601,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 593,
											"end": 605,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 552,
											"end": 607,
											"name": "tag",
											"source": 20,
											"value": "458"
										},
										{
											"begin": 552,
											"end": 607,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 643,
											"end": 649,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 630,
											"end": 650,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 673,
											"end": 691,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 662,
											"end": 692,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 659,
											"end": 715,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 659,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "460"
										},
										{
											"begin": 659,
											"end": 715,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 695,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "460"
										},
										{
											"begin": 695,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "448"
										},
										{
											"begin": 695,
											"end": 713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 695,
											"end": 713,
											"name": "tag",
											"source": 20,
											"value": "460"
										},
										{
											"begin": 695,
											"end": 713,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 738,
											"end": 747,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 836,
											"end": 838,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 798,
											"end": 815,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 798,
											"end": 815,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 794,
											"end": 825,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 794,
											"end": 825,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 794,
											"end": 825,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 827,
											"end": 829,
											"name": "PUSH",
											"source": 20,
											"value": "3F"
										},
										{
											"begin": 790,
											"end": 830,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 786,
											"end": 840,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 774,
											"end": 841,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 774,
											"end": 841,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 871,
											"end": 889,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 856,
											"end": 890,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 856,
											"end": 890,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 892,
											"end": 914,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 892,
											"end": 914,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 892,
											"end": 914,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 853,
											"end": 915,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 850,
											"end": 938,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 850,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "462"
										},
										{
											"begin": 850,
											"end": 938,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 918,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "462"
										},
										{
											"begin": 918,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "448"
										},
										{
											"begin": 918,
											"end": 936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 918,
											"end": 936,
											"name": "tag",
											"source": 20,
											"value": "462"
										},
										{
											"begin": 918,
											"end": 936,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 954,
											"end": 956,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 947,
											"end": 969,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 978,
											"end": 1000,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 978,
											"end": 1000,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 978,
											"end": 1000,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1040,
											"end": 1044,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1015,
											"end": 1045,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1009,
											"end": 1068,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1009,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "463"
										},
										{
											"begin": 1009,
											"end": 1068,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1065,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1061,
											"end": 1062,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1054,
											"end": 1066,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1009,
											"end": 1068,
											"name": "tag",
											"source": 20,
											"value": "463"
										},
										{
											"begin": 1009,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1121,
											"end": 1125,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1113,
											"end": 1119,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 1109,
											"end": 1126,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1102,
											"end": 1106,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1100,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1090,
											"end": 1107,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1077,
											"end": 1135,
											"name": "CALLDATACOPY",
											"source": 20
										},
										{
											"begin": 1183,
											"end": 1184,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 1174,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1155,
											"end": 1174,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1155,
											"end": 1174,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1176,
											"end": 1180,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1151,
											"end": 1181,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1159,
											"end": 1165,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 490,
											"end": 1215,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 490,
											"end": 1215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1220,
											"end": 1675,
											"name": "tag",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 1220,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1297,
											"end": 1303,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1311,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1358,
											"end": 1360,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1346,
											"end": 1355,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1337,
											"end": 1344,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 1333,
											"end": 1356,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1329,
											"end": 1361,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 1326,
											"end": 1378,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1326,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "465"
										},
										{
											"begin": 1326,
											"end": 1378,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1374,
											"end": 1375,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1371,
											"end": 1372,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1364,
											"end": 1376,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1326,
											"end": 1378,
											"name": "tag",
											"source": 20,
											"value": "465"
										},
										{
											"begin": 1326,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1413,
											"end": 1422,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1400,
											"end": 1423,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 1432,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "466"
										},
										{
											"begin": 1457,
											"end": 1462,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1432,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "447"
										},
										{
											"begin": 1432,
											"end": 1463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1432,
											"end": 1463,
											"name": "tag",
											"source": 20,
											"value": "466"
										},
										{
											"begin": 1432,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1482,
											"end": 1487,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1538,
											"end": 1540,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1510,
											"end": 1542,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 1565,
											"end": 1583,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1554,
											"end": 1584,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1554,
											"end": 1584,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 1551,
											"end": 1601,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1551,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "467"
										},
										{
											"begin": 1551,
											"end": 1601,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1597,
											"end": 1598,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1595,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1587,
											"end": 1599,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1551,
											"end": 1601,
											"name": "tag",
											"source": 20,
											"value": "467"
										},
										{
											"begin": 1551,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1620,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "468"
										},
										{
											"begin": 1661,
											"end": 1668,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 1652,
											"end": 1658,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1641,
											"end": 1650,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 1637,
											"end": 1659,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1620,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "449"
										},
										{
											"begin": 1620,
											"end": 1669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1620,
											"end": 1669,
											"name": "tag",
											"source": 20,
											"value": "468"
										},
										{
											"begin": 1620,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1610,
											"end": 1669,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1610,
											"end": 1669,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1610,
											"end": 1669,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1220,
											"end": 1675,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1220,
											"end": 1675,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1220,
											"end": 1675,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1220,
											"end": 1675,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1220,
											"end": 1675,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1220,
											"end": 1675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1862,
											"end": 2109,
											"name": "tag",
											"source": 20,
											"value": "51"
										},
										{
											"begin": 1862,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1921,
											"end": 1927,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1976,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1953,
											"end": 1960,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1949,
											"end": 1972,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1945,
											"end": 1977,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "471"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "tag",
											"source": 20,
											"value": "471"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2029,
											"end": 2038,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2016,
											"end": 2039,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 2048,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "440"
										},
										{
											"begin": 2073,
											"end": 2078,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2048,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "447"
										},
										{
											"begin": 2048,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2488,
											"end": 2738,
											"name": "tag",
											"source": 20,
											"value": "450"
										},
										{
											"begin": 2488,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2573,
											"end": 2574,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2583,
											"end": 2696,
											"name": "tag",
											"source": 20,
											"value": "476"
										},
										{
											"begin": 2583,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2597,
											"end": 2603,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 2594,
											"end": 2595,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2591,
											"end": 2604,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 2583,
											"end": 2696,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2583,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "478"
										},
										{
											"begin": 2583,
											"end": 2696,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2667,
											"end": 2685,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2654,
											"end": 2665,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 2654,
											"end": 2665,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2654,
											"end": 2665,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2647,
											"end": 2686,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2619,
											"end": 2621,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2612,
											"end": 2622,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2583,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "476"
										},
										{
											"begin": 2583,
											"end": 2696,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2583,
											"end": 2696,
											"name": "tag",
											"source": 20,
											"value": "478"
										},
										{
											"begin": 2583,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2730,
											"end": 2731,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2728,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2712,
											"end": 2728,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2705,
											"end": 2732,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2488,
											"end": 2738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2743,
											"end": 3139,
											"name": "tag",
											"source": 20,
											"value": "85"
										},
										{
											"begin": 2743,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2892,
											"end": 2894,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2881,
											"end": 2890,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2855,
											"end": 2859,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2930,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2918,
											"end": 2931,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2967,
											"end": 2973,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2962,
											"end": 2964,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2951,
											"end": 2960,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 2947,
											"end": 2965,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2940,
											"end": 2974,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2983,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "480"
										},
										{
											"begin": 3055,
											"end": 3061,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3050,
											"end": 3052,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3039,
											"end": 3048,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 3035,
											"end": 3053,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3030,
											"end": 3032,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 3018,
											"end": 3033,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2983,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "450"
										},
										{
											"begin": 2983,
											"end": 3062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2983,
											"end": 3062,
											"name": "tag",
											"source": 20,
											"value": "480"
										},
										{
											"begin": 2983,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3123,
											"end": 3125,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 3102,
											"end": 3117,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3098,
											"end": 3127,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3083,
											"end": 3128,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3083,
											"end": 3128,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3083,
											"end": 3128,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3083,
											"end": 3128,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3130,
											"end": 3132,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3133,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3079,
											"end": 3133,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2743,
											"end": 3139,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2743,
											"end": 3139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3144,
											"end": 3871,
											"name": "tag",
											"source": 20,
											"value": "88"
										},
										{
											"begin": 3144,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3223,
											"end": 3229,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3231,
											"end": 3237,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3239,
											"end": 3245,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3292,
											"end": 3294,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3280,
											"end": 3289,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3271,
											"end": 3278,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 3267,
											"end": 3290,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3263,
											"end": 3295,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 3260,
											"end": 3312,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3260,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "482"
										},
										{
											"begin": 3260,
											"end": 3312,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3308,
											"end": 3309,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3305,
											"end": 3306,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3298,
											"end": 3310,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3260,
											"end": 3312,
											"name": "tag",
											"source": 20,
											"value": "482"
										},
										{
											"begin": 3260,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3348,
											"end": 3357,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3335,
											"end": 3358,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 3381,
											"end": 3399,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3373,
											"end": 3379,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3370,
											"end": 3400,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 3367,
											"end": 3417,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3367,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "483"
										},
										{
											"begin": 3367,
											"end": 3417,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3413,
											"end": 3414,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3411,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3403,
											"end": 3415,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3367,
											"end": 3417,
											"name": "tag",
											"source": 20,
											"value": "483"
										},
										{
											"begin": 3367,
											"end": 3417,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3436,
											"end": 3458,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3436,
											"end": 3458,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3489,
											"end": 3493,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 3481,
											"end": 3494,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3481,
											"end": 3494,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3477,
											"end": 3504,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 3467,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "484"
										},
										{
											"begin": 3467,
											"end": 3522,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3518,
											"end": 3519,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3515,
											"end": 3516,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3467,
											"end": 3522,
											"name": "tag",
											"source": 20,
											"value": "484"
										},
										{
											"begin": 3467,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3558,
											"end": 3560,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3545,
											"end": 3561,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 3584,
											"end": 3602,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3576,
											"end": 3582,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3573,
											"end": 3603,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 3570,
											"end": 3620,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3570,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "485"
										},
										{
											"begin": 3570,
											"end": 3620,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3616,
											"end": 3617,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3613,
											"end": 3614,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3570,
											"end": 3620,
											"name": "tag",
											"source": 20,
											"value": "485"
										},
										{
											"begin": 3570,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3663,
											"end": 3670,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 3656,
											"end": 3660,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3647,
											"end": 3653,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3643,
											"end": 3645,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3639,
											"end": 3654,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3635,
											"end": 3661,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3632,
											"end": 3671,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 3629,
											"end": 3688,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3629,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "486"
										},
										{
											"begin": 3629,
											"end": 3688,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3684,
											"end": 3685,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3682,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3674,
											"end": 3686,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3629,
											"end": 3688,
											"name": "tag",
											"source": 20,
											"value": "486"
										},
										{
											"begin": 3629,
											"end": 3688,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3715,
											"end": 3719,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3707,
											"end": 3720,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3707,
											"end": 3720,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3707,
											"end": 3720,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3707,
											"end": 3720,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3739,
											"end": 3745,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3780,
											"end": 3800,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3780,
											"end": 3800,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3767,
											"end": 3801,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "487"
										},
										{
											"begin": 3767,
											"end": 3801,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "447"
										},
										{
											"begin": 3810,
											"end": 3841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "tag",
											"source": 20,
											"value": "487"
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3860,
											"end": 3865,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3144,
											"end": 3871,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3144,
											"end": 3871,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3144,
											"end": 3871,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3144,
											"end": 3871,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3144,
											"end": 3871,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3144,
											"end": 3871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3876,
											"end": 4102,
											"name": "tag",
											"source": 20,
											"value": "93"
										},
										{
											"begin": 3876,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3935,
											"end": 3941,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3988,
											"end": 3990,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3976,
											"end": 3985,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3967,
											"end": 3974,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3963,
											"end": 3986,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3959,
											"end": 3991,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 3956,
											"end": 4008,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3956,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "489"
										},
										{
											"begin": 3956,
											"end": 4008,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 4004,
											"end": 4005,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4001,
											"end": 4002,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3956,
											"end": 4008,
											"name": "tag",
											"source": 20,
											"value": "489"
										},
										{
											"begin": 3956,
											"end": 4008,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4049,
											"end": 4072,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 4049,
											"end": 4072,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3876,
											"end": 4102,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3876,
											"end": 4102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6876,
											"end": 7060,
											"name": "tag",
											"source": 20,
											"value": "189"
										},
										{
											"begin": 6876,
											"end": 7060,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6946,
											"end": 6952,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6999,
											"end": 7001,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6987,
											"end": 6996,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6978,
											"end": 6985,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 6974,
											"end": 6997,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 6970,
											"end": 7002,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 6967,
											"end": 7019,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 6967,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "499"
										},
										{
											"begin": 6967,
											"end": 7019,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 7015,
											"end": 7016,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7012,
											"end": 7013,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7005,
											"end": 7017,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 6967,
											"end": 7019,
											"name": "tag",
											"source": 20,
											"value": "499"
										},
										{
											"begin": 6967,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7038,
											"end": 7054,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 7038,
											"end": 7054,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6876,
											"end": 7060,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6876,
											"end": 7060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7414,
											"end": 7541,
											"name": "tag",
											"source": 20,
											"value": "451"
										},
										{
											"begin": 7414,
											"end": 7541,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7475,
											"end": 7485,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B71"
										},
										{
											"begin": 7470,
											"end": 7473,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 7466,
											"end": 7486,
											"name": "SHL",
											"source": 20
										},
										{
											"begin": 7463,
											"end": 7464,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7456,
											"end": 7487,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7506,
											"end": 7510,
											"name": "PUSH",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 7503,
											"end": 7504,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 7496,
											"end": 7511,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7530,
											"end": 7534,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 7527,
											"end": 7528,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7520,
											"end": 7535,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 7546,
											"end": 7714,
											"name": "tag",
											"source": 20,
											"value": "200"
										},
										{
											"begin": 7546,
											"end": 7714,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7619,
											"end": 7628,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7619,
											"end": 7628,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7619,
											"end": 7628,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 7650,
											"end": 7659,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7650,
											"end": 7659,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 7667,
											"end": 7682,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7667,
											"end": 7682,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7667,
											"end": 7682,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 7661,
											"end": 7683,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 7661,
											"end": 7683,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 7647,
											"end": 7684,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 7637,
											"end": 7708,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "254"
										},
										{
											"begin": 7637,
											"end": 7708,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 7688,
											"end": 7706,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "254"
										},
										{
											"begin": 7688,
											"end": 7706,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "451"
										},
										{
											"begin": 7688,
											"end": 7706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7719,
											"end": 7936,
											"name": "tag",
											"source": 20,
											"value": "202"
										},
										{
											"begin": 7719,
											"end": 7936,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7759,
											"end": 7760,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7785,
											"end": 7786,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7775,
											"end": 7907,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "506"
										},
										{
											"begin": 7775,
											"end": 7907,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 7829,
											"end": 7839,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B71"
										},
										{
											"begin": 7824,
											"end": 7827,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 7820,
											"end": 7840,
											"name": "SHL",
											"source": 20
										},
										{
											"begin": 7817,
											"end": 7818,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7810,
											"end": 7841,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7864,
											"end": 7868,
											"name": "PUSH",
											"source": 20,
											"value": "12"
										},
										{
											"begin": 7861,
											"end": 7862,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 7854,
											"end": 7869,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7892,
											"end": 7896,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 7889,
											"end": 7890,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7882,
											"end": 7897,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 7775,
											"end": 7907,
											"name": "tag",
											"source": 20,
											"value": "506"
										},
										{
											"begin": 7775,
											"end": 7907,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7921,
											"end": 7930,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 7921,
											"end": 7930,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7719,
											"end": 7936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7941,
											"end": 8069,
											"name": "tag",
											"source": 20,
											"value": "207"
										},
										{
											"begin": 7941,
											"end": 8069,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8008,
											"end": 8017,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8008,
											"end": 8017,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8008,
											"end": 8017,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 8029,
											"end": 8040,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8029,
											"end": 8040,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8029,
											"end": 8040,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 8026,
											"end": 8063,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 8026,
											"end": 8063,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "254"
										},
										{
											"begin": 8026,
											"end": 8063,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 8043,
											"end": 8061,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "254"
										},
										{
											"begin": 8043,
											"end": 8061,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "451"
										},
										{
											"begin": 8043,
											"end": 8061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8801,
											"end": 9534,
											"name": "tag",
											"source": 20,
											"value": "314"
										},
										{
											"begin": 8801,
											"end": 9534,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8912,
											"end": 8918,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8920,
											"end": 8926,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8928,
											"end": 8934,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8936,
											"end": 8942,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8989,
											"end": 8992,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 8977,
											"end": 8986,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 8968,
											"end": 8975,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 8964,
											"end": 8987,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 8960,
											"end": 8993,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 8957,
											"end": 9010,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 8957,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "515"
										},
										{
											"begin": 8957,
											"end": 9010,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 9006,
											"end": 9007,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9003,
											"end": 9004,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 8996,
											"end": 9008,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 8957,
											"end": 9010,
											"name": "tag",
											"source": 20,
											"value": "515"
										},
										{
											"begin": 8957,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9045,
											"end": 9054,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 9032,
											"end": 9055,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 9064,
											"end": 9095,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "516"
										},
										{
											"begin": 9089,
											"end": 9094,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9064,
											"end": 9095,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "447"
										},
										{
											"begin": 9064,
											"end": 9095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9064,
											"end": 9095,
											"name": "tag",
											"source": 20,
											"value": "516"
										},
										{
											"begin": 9064,
											"end": 9095,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9114,
											"end": 9119,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9171,
											"end": 9173,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 9156,
											"end": 9174,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 9156,
											"end": 9174,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9143,
											"end": 9175,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 9184,
											"end": 9217,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "517"
										},
										{
											"begin": 9143,
											"end": 9175,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9184,
											"end": 9217,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "447"
										},
										{
											"begin": 9184,
											"end": 9217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9184,
											"end": 9217,
											"name": "tag",
											"source": 20,
											"value": "517"
										},
										{
											"begin": 9184,
											"end": 9217,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9236,
											"end": 9243,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9316,
											"end": 9318,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 9301,
											"end": 9319,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 9301,
											"end": 9319,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9288,
											"end": 9320,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 9288,
											"end": 9320,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9397,
											"end": 9399,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 9382,
											"end": 9400,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 9382,
											"end": 9400,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9369,
											"end": 9401,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 9424,
											"end": 9442,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9413,
											"end": 9443,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9413,
											"end": 9443,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 9410,
											"end": 9460,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 9410,
											"end": 9460,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "518"
										},
										{
											"begin": 9410,
											"end": 9460,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 9456,
											"end": 9457,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9453,
											"end": 9454,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9446,
											"end": 9458,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 9410,
											"end": 9460,
											"name": "tag",
											"source": 20,
											"value": "518"
										},
										{
											"begin": 9410,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9479,
											"end": 9528,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "519"
										},
										{
											"begin": 9520,
											"end": 9527,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 9511,
											"end": 9517,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9500,
											"end": 9509,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 9496,
											"end": 9518,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9479,
											"end": 9528,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "449"
										},
										{
											"begin": 9479,
											"end": 9528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9479,
											"end": 9528,
											"name": "tag",
											"source": 20,
											"value": "519"
										},
										{
											"begin": 9479,
											"end": 9528,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9469,
											"end": 9528,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9469,
											"end": 9528,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9469,
											"end": 9528,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8801,
											"end": 9534,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 8801,
											"end": 9534,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 8801,
											"end": 9534,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 8801,
											"end": 9534,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 8801,
											"end": 9534,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8801,
											"end": 9534,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 8801,
											"end": 9534,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8801,
											"end": 9534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10123,
											"end": 10400,
											"name": "tag",
											"source": 20,
											"value": "330"
										},
										{
											"begin": 10123,
											"end": 10400,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10190,
											"end": 10196,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10243,
											"end": 10245,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 10231,
											"end": 10240,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10222,
											"end": 10229,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 10218,
											"end": 10241,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 10214,
											"end": 10246,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 10211,
											"end": 10263,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 10211,
											"end": 10263,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "523"
										},
										{
											"begin": 10211,
											"end": 10263,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 10259,
											"end": 10260,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10256,
											"end": 10257,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10249,
											"end": 10261,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 10211,
											"end": 10263,
											"name": "tag",
											"source": 20,
											"value": "523"
										},
										{
											"begin": 10211,
											"end": 10263,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10291,
											"end": 10300,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10285,
											"end": 10301,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 10344,
											"end": 10349,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10337,
											"end": 10350,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 10330,
											"end": 10351,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 10323,
											"end": 10328,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10320,
											"end": 10352,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 10310,
											"end": 10370,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "440"
										},
										{
											"begin": 10310,
											"end": 10370,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 10366,
											"end": 10367,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10363,
											"end": 10364,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 10356,
											"end": 10368,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 10405,
											"end": 10692,
											"name": "tag",
											"source": 20,
											"value": "334"
										},
										{
											"begin": 10405,
											"end": 10692,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10534,
											"end": 10537,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10572,
											"end": 10578,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10566,
											"end": 10579,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 10588,
											"end": 10654,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "526"
										},
										{
											"begin": 10647,
											"end": 10653,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 10642,
											"end": 10645,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 10635,
											"end": 10639,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 10627,
											"end": 10633,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 10623,
											"end": 10640,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10588,
											"end": 10654,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "450"
										},
										{
											"begin": 10588,
											"end": 10654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10588,
											"end": 10654,
											"name": "tag",
											"source": 20,
											"value": "526"
										},
										{
											"begin": 10588,
											"end": 10654,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10670,
											"end": 10686,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 10670,
											"end": 10686,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10670,
											"end": 10686,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 10670,
											"end": 10686,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10670,
											"end": 10686,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 10405,
											"end": 10692,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10405,
											"end": 10692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11037,
											"end": 11164,
											"name": "tag",
											"source": 20,
											"value": "345"
										},
										{
											"begin": 11037,
											"end": 11164,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11098,
											"end": 11108,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B71"
										},
										{
											"begin": 11093,
											"end": 11096,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 11089,
											"end": 11109,
											"name": "SHL",
											"source": 20
										},
										{
											"begin": 11086,
											"end": 11087,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11079,
											"end": 11110,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11129,
											"end": 11133,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 11126,
											"end": 11127,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 11119,
											"end": 11134,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11153,
											"end": 11157,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 11150,
											"end": 11151,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11143,
											"end": 11158,
											"name": "REVERT",
											"source": 20
										}
									],
									".data": {
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
										"C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F": "cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Swapper.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"NATIVE_TOKEN()": "31f7d964",
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"addAdmin(address)": "70480275",
							"getBalance(address)": "f8b2cb4f",
							"initialize(address)": "c4d66de8",
							"newExchange()": "0380fd03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"proxiableUUID()": "52d1902d",
							"renounceOwnership()": "715018a6",
							"setNewExchange(address)": "540907bb",
							"swap(bytes,address)": "ae0caeb3",
							"swapAdmin()": "5dc0b769",
							"swapFeePercentage()": "a4ac0d49",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"updateSwapFee(uint256)": "bf16f65a",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"AdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"AdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFeePercentage\",\"type\":\"uint256\"}],\"name\":\"SwapFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"Swapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NATIVE_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_swapAdmin\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newExchange\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newExchange\",\"type\":\"address\"}],\"name\":\"setNewExchange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_swapper\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFeePercentage\",\"type\":\"uint256\"}],\"name\":\"updateSwapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Swapper.sol\":\"Swapper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/Swapper.sol\":{\"keccak256\":\"0x9e57702cd22c69f1daec2fda2ab1a4c1ed436b6c443f41509f25cb1b75d60189\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2669703aff547dcc1e16a40cfb7a9a8b1d5751a156b4d8cb6dec847d6823367\",\"dweb:/ipfs/QmP8wAXQFZMP1h4yhJW6nFHUhZdo6e8FnPNegHBFhhdrZR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2352,
								"contract": "contracts/Swapper.sol:Swapper",
								"label": "newExchange",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2354,
								"contract": "contracts/Swapper.sol:Swapper",
								"label": "swapAdmin",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 2356,
								"contract": "contracts/Swapper.sol:Swapper",
								"label": "swapFeePercentage",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							676
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 677,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 676,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 676,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								676,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 658,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1396
						],
						"IERC1822Proxiable": [
							1102
						],
						"Initializable": [
							448
						],
						"UUPSUpgradeable": [
							630
						]
					},
					"id": 631,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 1103,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1102,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 454,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 1397,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 453,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1396,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 456,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 449,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 455,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 458,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1023:13:2"
									},
									"id": 459,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 460,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1102,
										"src": "1038:17:2"
									},
									"id": 461,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 457,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 630,
							"linearizedBaseContracts": [
								630,
								1102,
								448
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 468,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 463,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 466,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 465,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 464,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 467,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 472,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 470,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 471,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 475,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 480,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 477,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "2645:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 483,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "2655:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "2655:13:2"
											},
											{
												"id": 486,
												"nodeType": "PlaceholderStatement",
												"src": "2678:1:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2124:495:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 488,
									"name": "onlyProxy",
									"nameLocation": "2633:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:2:2"
									},
									"src": "2624:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2916:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 491,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "2926:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "2926:20:2"
											},
											{
												"id": 494,
												"nodeType": "PlaceholderStatement",
												"src": "2956:1:2"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "2692:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 496,
									"name": "notDelegated",
									"nameLocation": "2901:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2913:2:2"
									},
									"src": "2892:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "3030:7:2",
										"statements": []
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 499,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 498,
												"name": "onlyInitializing",
												"nameLocations": [
													"3013:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3013:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3013:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2979:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3001:2:2"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3030:0:2"
									},
									"scope": 630,
									"src": "2970:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "3113:7:2",
										"statements": []
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 505,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 504,
												"name": "onlyInitializing",
												"nameLocations": [
													"3096:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3096:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3096:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3052:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3084:2:2"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:2"
									},
									"scope": 630,
									"src": "3043:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1101
									],
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "3786:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 516,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1396,
														"src": "3803:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1396_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3816:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1117,
													"src": "3803:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 515,
												"id": 518,
												"nodeType": "Return",
												"src": "3796:39:2"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "3125:578:2",
										"text": " @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 512,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 511,
												"name": "notDelegated",
												"nameLocations": [
													"3755:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 496,
												"src": "3755:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3755:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3717:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:2:2"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "3777:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 513,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:9:2"
									},
									"scope": 630,
									"src": "3708:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "4266:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 531,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4294:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 530,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "4276:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "4276:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4344:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "4363:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 534,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "4322:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4322:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "4322:46:2"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "3848:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 528,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 527,
												"name": "onlyProxy",
												"nameLocations": [
													"4256:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 488,
												"src": "4256:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4256:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4170:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4195:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4187:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4227:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4214:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4214:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:46:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4266:0:2"
									},
									"scope": 630,
									"src": "4161:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "4648:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 546,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4683:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4675:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 544,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4675:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4675:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 548,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4692:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4675:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 550,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1396,
																	"src": "4753:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1396_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4766:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1148,
																"src": "4753:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4753:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 553,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4789:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4753:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4675:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "IfStatement",
												"src": "4658:251:2",
												"trueBody": {
													"id": 559,
													"nodeType": "Block",
													"src": "4848:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 556,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "4869:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4869:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 558,
															"nodeType": "RevertStatement",
															"src": "4862:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "4381:217:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4612:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:2:2"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4648:0:2"
									},
									"scope": 630,
									"src": "4603:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "5084:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 568,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5106:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5098:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 566,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5098:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5098:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 570,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "5115:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5098:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 576,
												"nodeType": "IfStatement",
												"src": "5094:145:2",
												"trueBody": {
													"id": 575,
													"nodeType": "Block",
													"src": "5123:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 572,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "5199:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5199:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 574,
															"nodeType": "RevertStatement",
															"src": "5192:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "4921:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5041:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5059:2:2"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5084:0:2"
									},
									"scope": 630,
									"src": "5032:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "5251:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5637:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5663:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "5655:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5655:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5654:27:2"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5698:0:2"
									},
									"scope": 630,
									"src": "5628:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "6142:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 617,
															"nodeType": "Block",
															"src": "6232:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 600,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "6250:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 601,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1396,
																				"src": "6258:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1396_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6271:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1117,
																			"src": "6258:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6250:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 609,
																	"nodeType": "IfStatement",
																	"src": "6246:120:2",
																	"trueBody": {
																		"id": 608,
																		"nodeType": "Block",
																		"src": "6292:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 605,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 598,
																							"src": "6346:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 604,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 480,
																						"src": "6317:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 606,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6317:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 607,
																				"nodeType": "RevertStatement",
																				"src": "6310:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 613,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "6409:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 614,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "6428:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 610,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1396,
																				"src": "6379:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1396_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6392:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1211,
																			"src": "6379:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6379:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 616,
																	"nodeType": "ExpressionStatement",
																	"src": "6379:54:2"
																}
															]
														},
														"errorName": "",
														"id": 618,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 599,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 598,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6226:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 618,
																	"src": "6218:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 597,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6217:14:2"
														},
														"src": "6209:235:2"
													},
													{
														"block": {
															"id": 625,
															"nodeType": "Block",
															"src": "6451:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 622,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "6560:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 619,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1396,
																				"src": "6518:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1396_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6531:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1122,
																			"src": "6518:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6518:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 624,
																	"nodeType": "RevertStatement",
																	"src": "6511:67:2"
																}
															]
														},
														"errorName": "",
														"id": 626,
														"nodeType": "TryCatchClause",
														"src": "6445:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 593,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "6174:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 592,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1102,
																"src": "6156:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$1102_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6156:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$1102",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6193:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1101,
														"src": "6156:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6156:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 627,
												"nodeType": "TryStatement",
												"src": "6152:437:2"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "5705:347:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6066:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6096:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "6088:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6128:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "6115:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 588,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6087:46:2"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6142:0:2"
									},
									"scope": 630,
									"src": "6057:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 631,
							"src": "986:5611:2",
							"usedErrors": [
								211,
								214,
								475,
								480,
								1122,
								1135,
								1905,
								2167
							],
							"usedEvents": [
								219,
								1075
							]
						}
					],
					"src": "115:6483:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							676
						],
						"Initializable": [
							448
						]
					},
					"id": 677,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 632,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 634,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 449,
							"src": "126:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 633,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 636,
										"name": "Initializable",
										"nameLocations": [
											"728:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:3"
									},
									"id": 637,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:3"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 635,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 676,
							"linearizedBaseContracts": [
								676,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "800:7:3",
										"statements": []
									},
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 640,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 639,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:3"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:3"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:3"
									},
									"scope": 676,
									"src": "748:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "875:7:3",
										"statements": []
									},
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 646,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 645,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:3"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:3"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:3"
									},
									"scope": 676,
									"src": "813:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "949:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 654,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 653,
												"id": 656,
												"nodeType": "Return",
												"src": "959:17:3"
											}
										]
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:3"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "940:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:3"
									},
									"scope": 676,
									"src": "887:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "1056:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 663,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 662,
												"id": 665,
												"nodeType": "Return",
												"src": "1066:15:3"
											}
										]
									},
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:3"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "1040:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 660,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:3"
									},
									"scope": 676,
									"src": "989:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "1166:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 671,
												"id": 673,
												"nodeType": "Return",
												"src": "1176:8:3"
											}
										]
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:3"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "1157:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:3"
									},
									"scope": 676,
									"src": "1094:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 677,
							"src": "688:505:3",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							676
						],
						"Initializable": [
							448
						],
						"PausableUpgradeable": [
							852
						]
					},
					"id": 853,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 678,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 680,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 853,
							"sourceUnit": 677,
							"src": "128:67:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 679,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 676,
										"src": "136:18:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 682,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 853,
							"sourceUnit": 449,
							"src": "196:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 681,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 684,
										"name": "Initializable",
										"nameLocations": [
											"742:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "742:13:4"
									},
									"id": 685,
									"nodeType": "InheritanceSpecifier",
									"src": "742:13:4"
								},
								{
									"baseName": {
										"id": 686,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"757:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 676,
										"src": "757:18:4"
									},
									"id": 687,
									"nodeType": "InheritanceSpecifier",
									"src": "757:18:4"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 683,
								"nodeType": "StructuredDocumentation",
								"src": "261:439:4",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 852,
							"linearizedBaseContracts": [
								852,
								676,
								448
							],
							"name": "PausableUpgradeable",
							"nameLocation": "719:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "PausableUpgradeable.PausableStorage",
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "782:66:4",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Pausable"
									},
									"id": 691,
									"members": [
										{
											"constant": false,
											"id": 690,
											"mutability": "mutable",
											"name": "_paused",
											"nameLocation": "891:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 691,
											"src": "886:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 689,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "886:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PausableStorage",
									"nameLocation": "860:15:4",
									"nodeType": "StructDefinition",
									"scope": 852,
									"src": "853:52:4",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 694,
									"mutability": "constant",
									"name": "PausableStorageLocation",
									"nameLocation": "1048:23:4",
									"nodeType": "VariableDeclaration",
									"scope": 852,
									"src": "1023:117:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 692,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1023:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030",
										"id": 693,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1074:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1",
											"typeString": "int_const 9289...(69 digits omitted)...6832"
										},
										"value": "0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "1227:82:4",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1246:57:4",
													"nodeType": "YulBlock",
													"src": "1246:57:4",
													"statements": [
														{
															"nativeSrc": "1260:33:4",
															"nodeType": "YulAssignment",
															"src": "1260:33:4",
															"value": {
																"name": "PausableStorageLocation",
																"nativeSrc": "1270:23:4",
																"nodeType": "YulIdentifier",
																"src": "1270:23:4"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1260:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1260:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 698,
														"isOffset": false,
														"isSlot": true,
														"src": "1260:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 694,
														"isOffset": false,
														"isSlot": false,
														"src": "1270:23:4",
														"valueSize": 1
													}
												],
												"id": 700,
												"nodeType": "InlineAssembly",
												"src": "1237:66:4"
											}
										]
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPausableStorage",
									"nameLocation": "1156:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1175:2:4"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1224:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "1200:25:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
													"typeString": "struct PausableUpgradeable.PausableStorage"
												},
												"typeName": {
													"id": 697,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 696,
														"name": "PausableStorage",
														"nameLocations": [
															"1200:15:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 691,
														"src": "1200:15:4"
													},
													"referencedDeclaration": 691,
													"src": "1200:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1199:27:4"
									},
									"scope": 852,
									"src": "1147:162:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "1315:73:4",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 707,
									"name": "Paused",
									"nameLocation": "1399:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1414:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "1406:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1405:17:4"
									},
									"src": "1393:30:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "1429:70:4",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 712,
									"name": "Unpaused",
									"nameLocation": "1510:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1527:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "1519:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1518:17:4"
									},
									"src": "1504:32:4"
								},
								{
									"documentation": {
										"id": 713,
										"nodeType": "StructuredDocumentation",
										"src": "1542:76:4",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 715,
									"name": "EnforcedPause",
									"nameLocation": "1629:13:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1642:2:4"
									},
									"src": "1623:22:4"
								},
								{
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "1651:80:4",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 718,
									"name": "ExpectedPause",
									"nameLocation": "1742:13:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1755:2:4"
									},
									"src": "1736:22:4"
								},
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "1889:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 724,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "1899:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1899:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "1899:27:4"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "1764:67:4",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 722,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 721,
												"name": "onlyInitializing",
												"nameLocations": [
													"1872:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1872:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1872:16:4"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "1845:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1860:2:4"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1889:0:4"
									},
									"scope": 852,
									"src": "1836:97:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "2002:93:4",
										"statements": [
											{
												"assignments": [
													735
												],
												"declarations": [
													{
														"constant": false,
														"id": 735,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2036:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 745,
														"src": "2012:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 734,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 733,
																"name": "PausableStorage",
																"nameLocations": [
																	"2012:15:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 691,
																"src": "2012:15:4"
															},
															"referencedDeclaration": 691,
															"src": "2012:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 736,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "2040:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$691_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2040:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2012:49:4"
											},
											{
												"expression": {
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 739,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "2071:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 741,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2073:7:4",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 690,
														"src": "2071:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2083:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2071:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "2071:17:4"
											}
										]
									},
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 731,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 730,
												"name": "onlyInitializing",
												"nameLocations": [
													"1985:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1985:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1985:16:4"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "1948:25:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1973:2:4"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2002:0:4"
									},
									"scope": 852,
									"src": "1939:156:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "2306:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 749,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "2316:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2316:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "2316:19:4"
											},
											{
												"id": 752,
												"nodeType": "PlaceholderStatement",
												"src": "2345:1:4"
											}
										]
									},
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "2101:175:4",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 754,
									"name": "whenNotPaused",
									"nameLocation": "2290:13:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2303:2:4"
									},
									"src": "2281:72:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "2553:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 757,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "2563:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2563:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "2563:16:4"
											},
											{
												"id": 760,
												"nodeType": "PlaceholderStatement",
												"src": "2589:1:4"
											}
										]
									},
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "2359:167:4",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 762,
									"name": "whenPaused",
									"nameLocation": "2540:10:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2550:2:4"
									},
									"src": "2531:66:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "2745:92:4",
										"statements": [
											{
												"assignments": [
													770
												],
												"declarations": [
													{
														"constant": false,
														"id": 770,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2779:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "2755:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 769,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 768,
																"name": "PausableStorage",
																"nameLocations": [
																	"2755:15:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 691,
																"src": "2755:15:4"
															},
															"referencedDeclaration": 691,
															"src": "2755:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 773,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 771,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "2783:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$691_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2783:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2755:49:4"
											},
											{
												"expression": {
													"expression": {
														"id": 774,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "2821:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2823:7:4",
													"memberName": "_paused",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 690,
													"src": "2821:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 767,
												"id": 776,
												"nodeType": "Return",
												"src": "2814:16:4"
											}
										]
									},
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "2603:84:4",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "2701:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2707:2:4"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "2739:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 765,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2739:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:6:4"
									},
									"scope": 852,
									"src": "2692:145:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "2956:77:4",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 782,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2970:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2970:8:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 788,
												"nodeType": "IfStatement",
												"src": "2966:61:4",
												"trueBody": {
													"id": 787,
													"nodeType": "Block",
													"src": "2980:47:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 784,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "3001:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3001:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 786,
															"nodeType": "RevertStatement",
															"src": "2994:22:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "2843:57:4",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2914:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2931:2:4"
									},
									"returnParameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2956:0:4"
									},
									"scope": 852,
									"src": "2905:128:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "3153:78:4",
										"statements": [
											{
												"condition": {
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3167:9:4",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 794,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "3168:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3168:8:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 801,
												"nodeType": "IfStatement",
												"src": "3163:62:4",
												"trueBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "3178:47:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 797,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "3199:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3199:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 799,
															"nodeType": "RevertStatement",
															"src": "3192:22:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "3039:61:4",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "3114:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3128:2:4"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3153:0:4"
									},
									"scope": 852,
									"src": "3105:126:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "3415:127:4",
										"statements": [
											{
												"assignments": [
													811
												],
												"declarations": [
													{
														"constant": false,
														"id": 811,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3449:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 826,
														"src": "3425:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 810,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 809,
																"name": "PausableStorage",
																"nameLocations": [
																	"3425:15:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 691,
																"src": "3425:15:4"
															},
															"referencedDeclaration": 691,
															"src": "3425:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 814,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 812,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "3453:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$691_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3453:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3425:49:4"
											},
											{
												"expression": {
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 815,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "3484:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3486:7:4",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 690,
														"src": "3484:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3496:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3484:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 820,
												"nodeType": "ExpressionStatement",
												"src": "3484:16:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 822,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "3522:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3522:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 821,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "3515:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3515:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 825,
												"nodeType": "EmitStatement",
												"src": "3510:25:4"
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "3237:124:4",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 807,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 806,
												"name": "whenNotPaused",
												"nameLocations": [
													"3401:13:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 754,
												"src": "3401:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3401:13:4"
										}
									],
									"name": "_pause",
									"nameLocation": "3375:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3381:2:4"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3415:0:4"
									},
									"scope": 852,
									"src": "3366:176:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 850,
										"nodeType": "Block",
										"src": "3722:130:4",
										"statements": [
											{
												"assignments": [
													835
												],
												"declarations": [
													{
														"constant": false,
														"id": 835,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3756:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 850,
														"src": "3732:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 834,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 833,
																"name": "PausableStorage",
																"nameLocations": [
																	"3732:15:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 691,
																"src": "3732:15:4"
															},
															"referencedDeclaration": 691,
															"src": "3732:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 838,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 836,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "3760:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$691_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3760:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3732:49:4"
											},
											{
												"expression": {
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 839,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "3791:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3793:7:4",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 690,
														"src": "3791:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 842,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3803:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3791:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "3791:17:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 846,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "3832:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3832:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 845,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "3823:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3823:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 849,
												"nodeType": "EmitStatement",
												"src": "3818:27:4"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "3548:121:4",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 851,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 831,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 830,
												"name": "whenPaused",
												"nameLocations": [
													"3711:10:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 762,
												"src": "3711:10:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3711:10:4"
										}
									],
									"name": "_unpause",
									"nameLocation": "3683:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3691:2:4"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3722:0:4"
									},
									"scope": 852,
									"src": "3674:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 853,
							"src": "701:3153:4",
							"usedErrors": [
								211,
								214,
								715,
								718
							],
							"usedEvents": [
								219,
								707,
								712
							]
						}
					],
					"src": "102:3753:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						],
						"ReentrancyGuardUpgradeable": [
							981
						]
					},
					"id": 982,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 854,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 856,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 982,
							"sourceUnit": 449,
							"src": "134:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 855,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "142:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 858,
										"name": "Initializable",
										"nameLocations": [
											"1142:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1142:13:5"
									},
									"id": 859,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:13:5"
								}
							],
							"canonicalName": "ReentrancyGuardUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 857,
								"nodeType": "StructuredDocumentation",
								"src": "199:894:5",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 981,
							"linearizedBaseContracts": [
								981,
								448
							],
							"name": "ReentrancyGuardUpgradeable",
							"nameLocation": "1112:26:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 862,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1935:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 981,
									"src": "1910:40:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 860,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1910:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 861,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1949:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 865,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1981:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 981,
									"src": "1956:36:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 863,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1956:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 864,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1991:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"canonicalName": "ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "1999:73:5",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard"
									},
									"id": 869,
									"members": [
										{
											"constant": false,
											"id": 868,
											"mutability": "mutable",
											"name": "_status",
											"nameLocation": "2125:7:5",
											"nodeType": "VariableDeclaration",
											"scope": 869,
											"src": "2117:15:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 867,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2117:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReentrancyGuardStorage",
									"nameLocation": "2084:22:5",
									"nodeType": "StructDefinition",
									"scope": 981,
									"src": "2077:62:5",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 872,
									"mutability": "constant",
									"name": "ReentrancyGuardStorageLocation",
									"nameLocation": "2289:30:5",
									"nodeType": "VariableDeclaration",
									"scope": 981,
									"src": "2264:124:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 870,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2264:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839623737396231373432326430646639323232333031386233326234643166613436653037313732336436383137653234383664303033626563633535663030",
										"id": 871,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2322:66:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_70319816728846589445362000750570655803700195216363692647688146666176345628416_by_1",
											"typeString": "int_const 7031...(69 digits omitted)...8416"
										},
										"value": "0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "2489:89:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2508:64:5",
													"nodeType": "YulBlock",
													"src": "2508:64:5",
													"statements": [
														{
															"nativeSrc": "2522:40:5",
															"nodeType": "YulAssignment",
															"src": "2522:40:5",
															"value": {
																"name": "ReentrancyGuardStorageLocation",
																"nativeSrc": "2532:30:5",
																"nodeType": "YulIdentifier",
																"src": "2532:30:5"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2522:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2522:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 876,
														"isOffset": false,
														"isSlot": true,
														"src": "2522:6:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 872,
														"isOffset": false,
														"isSlot": false,
														"src": "2532:30:5",
														"valueSize": 1
													}
												],
												"id": 878,
												"nodeType": "InlineAssembly",
												"src": "2499:73:5"
											}
										]
									},
									"id": 880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getReentrancyGuardStorage",
									"nameLocation": "2404:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2430:2:5"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2486:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "2455:32:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$869_storage_ptr",
													"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
												},
												"typeName": {
													"id": 875,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 874,
														"name": "ReentrancyGuardStorage",
														"nameLocations": [
															"2455:22:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 869,
														"src": "2455:22:5"
													},
													"referencedDeclaration": 869,
													"src": "2455:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$869_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2454:34:5"
									},
									"scope": 981,
									"src": "2395:183:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 881,
										"nodeType": "StructuredDocumentation",
										"src": "2584:52:5",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 883,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2647:28:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2675:2:5"
									},
									"src": "2641:37:5"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "2744:51:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 888,
														"name": "__ReentrancyGuard_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "2754:32:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2754:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "2754:34:5"
											}
										]
									},
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 886,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 885,
												"name": "onlyInitializing",
												"nameLocations": [
													"2727:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2727:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2727:16:5"
										}
									],
									"name": "__ReentrancyGuard_init",
									"nameLocation": "2693:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2715:2:5"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2744:0:5"
									},
									"scope": 981,
									"src": "2684:111:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 909,
										"nodeType": "Block",
										"src": "2871:113:5",
										"statements": [
											{
												"assignments": [
													899
												],
												"declarations": [
													{
														"constant": false,
														"id": 899,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2912:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 909,
														"src": "2881:32:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$869_storage_ptr",
															"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
														},
														"typeName": {
															"id": 898,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 897,
																"name": "ReentrancyGuardStorage",
																"nameLocations": [
																	"2881:22:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 869,
																"src": "2881:22:5"
															},
															"referencedDeclaration": 869,
															"src": "2881:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$869_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 902,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 900,
														"name": "_getReentrancyGuardStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "2916:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$869_storage_ptr_$",
															"typeString": "function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2916:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$869_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2881:63:5"
											},
											{
												"expression": {
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 903,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "2954:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$869_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 905,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2956:7:5",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 868,
														"src": "2954:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 906,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "2966:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2954:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "2954:23:5"
											}
										]
									},
									"id": 910,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 895,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 894,
												"name": "onlyInitializing",
												"nameLocations": [
													"2854:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2854:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2854:16:5"
										}
									],
									"name": "__ReentrancyGuard_init_unchained",
									"nameLocation": "2810:32:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2842:2:5"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2871:0:5"
									},
									"scope": 981,
									"src": "2801:183:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "3385:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 913,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "3395:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3395:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "3395:21:5"
											},
											{
												"id": 916,
												"nodeType": "PlaceholderStatement",
												"src": "3426:1:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 917,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "3437:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3437:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "3437:20:5"
											}
										]
									},
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "2990:366:5",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 921,
									"name": "nonReentrant",
									"nameLocation": "3370:12:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3382:2:5"
									},
									"src": "3361:103:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "3509:345:5",
										"statements": [
											{
												"assignments": [
													926
												],
												"declarations": [
													{
														"constant": false,
														"id": 926,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3550:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 945,
														"src": "3519:32:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$869_storage_ptr",
															"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
														},
														"typeName": {
															"id": 925,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 924,
																"name": "ReentrancyGuardStorage",
																"nameLocations": [
																	"3519:22:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 869,
																"src": "3519:22:5"
															},
															"referencedDeclaration": 869,
															"src": "3519:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$869_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 929,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 927,
														"name": "_getReentrancyGuardStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "3554:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$869_storage_ptr_$",
															"typeString": "function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3554:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$869_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3519:63:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 930,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "3670:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$869_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 931,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3672:7:5",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 868,
														"src": "3670:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 932,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "3683:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3670:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 938,
												"nodeType": "IfStatement",
												"src": "3666:88:5",
												"trueBody": {
													"id": 937,
													"nodeType": "Block",
													"src": "3692:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 934,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 883,
																	"src": "3713:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3713:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 936,
															"nodeType": "RevertStatement",
															"src": "3706:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 939,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "3828:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$869_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 941,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3830:7:5",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 868,
														"src": "3828:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 942,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "3840:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3828:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "3828:19:5"
											}
										]
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "3479:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3498:2:5"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3509:0:5"
									},
									"scope": 981,
									"src": "3470:384:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "3898:245:5",
										"statements": [
											{
												"assignments": [
													951
												],
												"declarations": [
													{
														"constant": false,
														"id": 951,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3939:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 961,
														"src": "3908:32:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$869_storage_ptr",
															"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
														},
														"typeName": {
															"id": 950,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 949,
																"name": "ReentrancyGuardStorage",
																"nameLocations": [
																	"3908:22:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 869,
																"src": "3908:22:5"
															},
															"referencedDeclaration": 869,
															"src": "3908:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$869_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 954,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 952,
														"name": "_getReentrancyGuardStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "3943:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$869_storage_ptr_$",
															"typeString": "function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$869_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3908:63:5"
											},
											{
												"expression": {
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 955,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "4113:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$869_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 957,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4115:7:5",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 868,
														"src": "4113:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 958,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "4125:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4113:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "4113:23:5"
											}
										]
									},
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "3869:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3887:2:5"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3898:0:5"
									},
									"scope": 981,
									"src": "3860:283:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "4386:117:5",
										"statements": [
											{
												"assignments": [
													970
												],
												"declarations": [
													{
														"constant": false,
														"id": 970,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4427:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 979,
														"src": "4396:32:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$869_storage_ptr",
															"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
														},
														"typeName": {
															"id": 969,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 968,
																"name": "ReentrancyGuardStorage",
																"nameLocations": [
																	"4396:22:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 869,
																"src": "4396:22:5"
															},
															"referencedDeclaration": 869,
															"src": "4396:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$869_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 973,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 971,
														"name": "_getReentrancyGuardStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "4431:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$869_storage_ptr_$",
															"typeString": "function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4431:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$869_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4396:63:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 974,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "4476:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$869_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 975,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4478:7:5",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 868,
														"src": "4476:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 976,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "4489:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4476:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 967,
												"id": 978,
												"nodeType": "Return",
												"src": "4469:27:5"
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "4149:168:5",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "4331:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4354:2:5"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "4380:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 965,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4380:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4379:6:5"
									},
									"scope": 981,
									"src": "4322:181:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 982,
							"src": "1094:3411:5",
							"usedErrors": [
								211,
								214,
								883
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "109:4397:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							1063
						],
						"IERC165": [
							2312
						],
						"IERC20": [
							1484
						]
					},
					"id": 1064,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 983,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 985,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1064,
							"sourceUnit": 1093,
							"src": "133:36:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 984,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1484,
										"src": "141:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 987,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1064,
							"sourceUnit": 1068,
							"src": "170:38:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 986,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2312,
										"src": "178:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 989,
										"name": "IERC20",
										"nameLocations": [
											"590:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1484,
										"src": "590:6:6"
									},
									"id": 990,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:6"
								},
								{
									"baseName": {
										"id": 991,
										"name": "IERC165",
										"nameLocations": [
											"598:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2312,
										"src": "598:7:6"
									},
									"id": 992,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:6"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 988,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:6",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 1063,
							"linearizedBaseContracts": [
								1063,
								2312,
								1484
							],
							"name": "IERC1363",
							"nameLocation": "578:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 1002,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "1548:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "1560:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:6"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "1593:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 999,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:6"
									},
									"scope": 1063,
									"src": "1523:76:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 1014,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "2088:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "2100:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "2115:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1008,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:6"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "2154:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1011,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:6"
									},
									"scope": 1063,
									"src": "2063:97:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 1026,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "2653:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "2667:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "2679:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:6"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "2712:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1023,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:6"
									},
									"scope": 1063,
									"src": "2624:94:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 1040,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3294:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3308:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3320:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3335:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1034,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:6"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3374:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1037,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:6"
									},
									"scope": 1063,
									"src": "3265:115:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 1050,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "3805:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "3822:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:6"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "3855:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1047,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:6"
									},
									"scope": 1063,
									"src": "3781:80:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 1062,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "4374:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "4391:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "4406:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1056,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:6"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "4445:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1059,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:6"
									},
									"scope": 1063,
									"src": "4350:101:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1064,
							"src": "568:3885:6",
							"usedErrors": [],
							"usedEvents": [
								1418,
								1427
							]
						}
					],
					"src": "107:4347:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2312
						]
					},
					"id": 1068,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1065,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 1067,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1068,
							"sourceUnit": 2313,
							"src": "132:59:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1066,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2312,
										"src": "140:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							1088
						]
					},
					"id": 1089,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1069,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1070,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:8",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 1088,
							"linearizedBaseContracts": [
								1088
							],
							"name": "IERC1967",
							"nameLocation": "245:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:8",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 1075,
									"name": "Upgraded",
									"nameLocation": "339:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "348:30:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:8"
									},
									"src": "333:47:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:8",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 1082,
									"name": "AdminChanged",
									"nameLocation": "464:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "477:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "500:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:8"
									},
									"src": "458:60:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:8",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 1087,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "609:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:8"
									},
									"src": "588:45:8"
								}
							],
							"scope": 1089,
							"src": "235:400:8",
							"usedErrors": [],
							"usedEvents": [
								1075,
								1082,
								1087
							]
						}
					],
					"src": "107:529:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1484
						]
					},
					"id": 1093,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1090,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 1092,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1093,
							"sourceUnit": 1485,
							"src": "131:49:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1091,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1484,
										"src": "139:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							1102
						]
					},
					"id": 1103,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1094,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1095,
								"nodeType": "StructuredDocumentation",
								"src": "139:204:10",
								"text": " @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 1102,
							"linearizedBaseContracts": [
								1102
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "354:17:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "378:438:10",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 1101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "830:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:2:10"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "869:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1098,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:9:10"
									},
									"scope": 1102,
									"src": "821:57:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1103,
							"src": "344:536:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:768:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							2154
						],
						"ERC1967Utils": [
							1396
						],
						"IBeacon": [
							1406
						],
						"IERC1967": [
							1088
						],
						"StorageSlot": [
							2300
						]
					},
					"id": 1397,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1104,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 1106,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1397,
							"sourceUnit": 1407,
							"src": "140:46:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1105,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1406,
										"src": "148:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 1108,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1397,
							"sourceUnit": 1089,
							"src": "187:55:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1107,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1088,
										"src": "195:8:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1110,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1397,
							"sourceUnit": 2155,
							"src": "243:48:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1109,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2154,
										"src": "251:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 1112,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1397,
							"sourceUnit": 2301,
							"src": "292:56:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1111,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2300,
										"src": "300:11:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1113,
								"nodeType": "StructuredDocumentation",
								"src": "350:145:11",
								"text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 1396,
							"linearizedBaseContracts": [
								1396
							],
							"name": "ERC1967Utils",
							"nameLocation": "504:12:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "523:170:11",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 1117,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "789:19:11",
									"nodeType": "VariableDeclaration",
									"scope": 1396,
									"src": "763:114:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1115,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 1116,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:66:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1118,
										"nodeType": "StructuredDocumentation",
										"src": "884:69:11",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 1122,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "964:28:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1001:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "993:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:24:11"
									},
									"src": "958:59:11"
								},
								{
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "1023:60:11",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 1127,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1094:19:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1122:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "1114:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:15:11"
									},
									"src": "1088:41:11"
								},
								{
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "1135:61:11",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 1132,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1207:20:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1236:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "1228:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:16:11"
									},
									"src": "1201:43:11"
								},
								{
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "1250:82:11",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 1135,
									"name": "ERC1967NonPayable",
									"nameLocation": "1343:17:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:11"
									},
									"src": "1337:26:11"
								},
								{
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "1502:77:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1143,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "1546:19:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1141,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2300,
																"src": "1519:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2300_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:14:11",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2211,
															"src": "1519:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2182_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:47:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2182_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1567:5:11",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2181,
													"src": "1519:53:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1140,
												"id": 1146,
												"nodeType": "Return",
												"src": "1512:60:11"
											}
										]
									},
									"documentation": {
										"id": 1136,
										"nodeType": "StructuredDocumentation",
										"src": "1369:67:11",
										"text": " @dev Returns the current implementation address."
									},
									"id": 1148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1450:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:11"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "1493:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:11"
									},
									"scope": 1396,
									"src": "1441:138:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "1734:218:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1154,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1151,
																"src": "1748:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1766:4:11",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1748:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1748:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1748:34:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1164,
												"nodeType": "IfStatement",
												"src": "1744:119:11",
												"trueBody": {
													"id": 1163,
													"nodeType": "Block",
													"src": "1784:79:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1160,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1151,
																		"src": "1834:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1159,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1122,
																	"src": "1805:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:47:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1162,
															"nodeType": "RevertStatement",
															"src": "1798:54:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1168,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "1899:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1165,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2300,
																	"src": "1872:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2300_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:14:11",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2211,
																"src": "1872:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2182_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:47:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2182_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1170,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1920:5:11",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2181,
														"src": "1872:53:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1171,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "1928:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:73:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1173,
												"nodeType": "ExpressionStatement",
												"src": "1872:73:11"
											}
										]
									},
									"documentation": {
										"id": 1149,
										"nodeType": "StructuredDocumentation",
										"src": "1585:81:11",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1680:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1707:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "1699:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:27:11"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:11"
									},
									"scope": 1396,
									"src": "1671:281:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1210,
										"nodeType": "Block",
										"src": "2345:263:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1184,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "2374:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1183,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "2355:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:37:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "2355:37:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1190,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "2425:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1187,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "2407:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1088_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2416:8:11",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1075,
														"src": "2407:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:36:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1192,
												"nodeType": "EmitStatement",
												"src": "2402:41:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1193,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "2458:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2463:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2458:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2472:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1208,
													"nodeType": "Block",
													"src": "2559:43:11",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1205,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1395,
																	"src": "2573:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2573:18:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1207,
															"nodeType": "ExpressionStatement",
															"src": "2573:18:11"
														}
													]
												},
												"id": 1209,
												"nodeType": "IfStatement",
												"src": "2454:148:11",
												"trueBody": {
													"id": 1204,
													"nodeType": "Block",
													"src": "2475:78:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1200,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1178,
																		"src": "2518:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1201,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1180,
																		"src": "2537:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1197,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2154,
																		"src": "2489:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2154_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2497:20:11",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2071,
																	"src": "2489:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2489:53:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1203,
															"nodeType": "ExpressionStatement",
															"src": "2489:53:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1176,
										"nodeType": "StructuredDocumentation",
										"src": "1958:301:11",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 1211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2273:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2298:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "2290:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2330:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "2317:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2317:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:46:11"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2345:0:11"
									},
									"scope": 1396,
									"src": "2264:344:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "2614:145:11",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 1215,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2855:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 1396,
									"src": "2829:105:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1213,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2829:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 1214,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2868:66:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "3339:68:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1223,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "3383:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1221,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2300,
																"src": "3356:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2300_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:14:11",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2211,
															"src": "3356:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2182_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3356:38:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2182_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3395:5:11",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2181,
													"src": "3356:44:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1220,
												"id": 1226,
												"nodeType": "Return",
												"src": "3349:51:11"
											}
										]
									},
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "2941:341:11",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3296:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:11"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "3330:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:11"
									},
									"scope": 1396,
									"src": "3287:120:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "3535:172:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1234,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "3549:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3561:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1235,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3561:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1238,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3561:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1248,
												"nodeType": "IfStatement",
												"src": "3545:91:11",
												"trueBody": {
													"id": 1247,
													"nodeType": "Block",
													"src": "3573:63:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1243,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3622:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3614:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1241,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3614:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3614:10:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1240,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1127,
																	"src": "3594:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3594:31:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1246,
															"nodeType": "RevertStatement",
															"src": "3587:38:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1252,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1215,
																	"src": "3672:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1249,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2300,
																	"src": "3645:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2300_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3657:14:11",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2211,
																"src": "3645:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2182_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3645:38:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2182_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1254,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:5:11",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2181,
														"src": "3645:44:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1255,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "3692:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3645:55:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "3645:55:11"
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "3413:72:11",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 1259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3499:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3517:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3509:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:18:11"
									},
									"returnParameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:11"
									},
									"scope": 1396,
									"src": "3490:217:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1277,
										"nodeType": "Block",
										"src": "3875:94:11",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1268,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1228,
																"src": "3912:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3912:10:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1270,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "3924:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1265,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "3890:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1088_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:12:11",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1082,
														"src": "3890:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:43:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1272,
												"nodeType": "EmitStatement",
												"src": "3885:48:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1274,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "3953:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1273,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "3943:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1276,
												"nodeType": "ExpressionStatement",
												"src": "3943:19:11"
											}
										]
									},
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "3713:109:11",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 1278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3836:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3856:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "3848:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:18:11"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:11"
									},
									"scope": 1396,
									"src": "3827:142:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "3975:201:11",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 1282,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4272:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1396,
									"src": "4246:106:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1280,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4246:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 1281,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4286:66:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1294,
										"nodeType": "Block",
										"src": "4468:69:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1290,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1282,
																"src": "4512:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1288,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2300,
																"src": "4485:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2300_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4497:14:11",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2211,
															"src": "4485:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2182_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:39:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2182_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4525:5:11",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2181,
													"src": "4485:45:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1287,
												"id": 1293,
												"nodeType": "Return",
												"src": "4478:52:11"
											}
										]
									},
									"documentation": {
										"id": 1283,
										"nodeType": "StructuredDocumentation",
										"src": "4359:51:11",
										"text": " @dev Returns the current beacon."
									},
									"id": 1295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4424:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:11"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "4459:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:9:11"
									},
									"scope": 1396,
									"src": "4415:122:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1340,
										"nodeType": "Block",
										"src": "4667:390:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1301,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1298,
																"src": "4681:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4691:4:11",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4681:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4696:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4681:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4706:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4681:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1311,
												"nodeType": "IfStatement",
												"src": "4677:95:11",
												"trueBody": {
													"id": 1310,
													"nodeType": "Block",
													"src": "4709:63:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1307,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1298,
																		"src": "4751:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1306,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "4730:20:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4730:31:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1309,
															"nodeType": "RevertStatement",
															"src": "4723:38:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1315,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1282,
																	"src": "4809:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1312,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2300,
																	"src": "4782:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2300_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4794:14:11",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2211,
																"src": "4782:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2182_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:39:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2182_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1317,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:5:11",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2181,
														"src": "4782:45:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1318,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1298,
														"src": "4830:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4782:57:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1320,
												"nodeType": "ExpressionStatement",
												"src": "4782:57:11"
											},
											{
												"assignments": [
													1322
												],
												"declarations": [
													{
														"constant": false,
														"id": 1322,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4858:20:11",
														"nodeType": "VariableDeclaration",
														"scope": 1340,
														"src": "4850:28:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1321,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4850:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1328,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1324,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1298,
																	"src": "4889:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1323,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "4881:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1406_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4881:18:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1406",
																"typeString": "contract IBeacon"
															}
														},
														"id": 1326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:14:11",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1405,
														"src": "4881:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:66:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1329,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1322,
																"src": "4930:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4951:4:11",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4930:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4956:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4930:32:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1332,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4930:37:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1339,
												"nodeType": "IfStatement",
												"src": "4926:125:11",
												"trueBody": {
													"id": 1338,
													"nodeType": "Block",
													"src": "4969:82:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1335,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1322,
																		"src": "5019:20:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1334,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1122,
																	"src": "4990:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4990:50:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1337,
															"nodeType": "RevertStatement",
															"src": "4983:57:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "4543:72:11",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 1341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4629:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4648:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "4640:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:11"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:11"
									},
									"scope": 1396,
									"src": "4620:437:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1380,
										"nodeType": "Block",
										"src": "5661:263:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1350,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "5682:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1349,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "5671:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "5671:21:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1356,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "5731:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1353,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "5707:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1088_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:11",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1087,
														"src": "5707:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1358,
												"nodeType": "EmitStatement",
												"src": "5702:39:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1359,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "5756:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5761:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1361,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1378,
													"nodeType": "Block",
													"src": "5875:43:11",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1375,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1395,
																	"src": "5889:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:18:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1377,
															"nodeType": "ExpressionStatement",
															"src": "5889:18:11"
														}
													]
												},
												"id": 1379,
												"nodeType": "IfStatement",
												"src": "5752:166:11",
												"trueBody": {
													"id": 1374,
													"nodeType": "Block",
													"src": "5773:96:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1367,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1344,
																						"src": "5824:9:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1366,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1406,
																					"src": "5816:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1406_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 1368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5816:18:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1406",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 1369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5835:14:11",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1405,
																			"src": "5816:33:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5816:35:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1371,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1346,
																		"src": "5853:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1363,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2154,
																		"src": "5787:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2154_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5795:20:11",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2071,
																	"src": "5787:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:71:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1373,
															"nodeType": "ExpressionStatement",
															"src": "5787:71:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "5063:514:11",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5591:22:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5622:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "5614:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5646:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "5633:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5633:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:11"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:0:11"
									},
									"scope": 1396,
									"src": "5582:342:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1394,
										"nodeType": "Block",
										"src": "6149:86:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1385,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6163:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:5:11",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6163:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6163:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1393,
												"nodeType": "IfStatement",
												"src": "6159:70:11",
												"trueBody": {
													"id": 1392,
													"nodeType": "Block",
													"src": "6178:51:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1389,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1135,
																	"src": "6199:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6199:19:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1391,
															"nodeType": "RevertStatement",
															"src": "6192:26:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1382,
										"nodeType": "StructuredDocumentation",
										"src": "5930:178:11",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6122:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:2:11"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6149:0:11"
									},
									"scope": 1396,
									"src": "6113:122:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1397,
							"src": "496:5741:11",
							"usedErrors": [
								1122,
								1127,
								1132,
								1135
							],
							"usedEvents": []
						}
					],
					"src": "114:6124:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1406
						]
					},
					"id": 1407,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1398,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1399,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:12",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1406,
							"linearizedBaseContracts": [
								1406
							],
							"name": "IBeacon",
							"nameLocation": "224:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:12",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:12"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "460:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:12"
									},
									"scope": 1406,
									"src": "411:58:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1407,
							"src": "214:257:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1484
						]
					},
					"id": 1485,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1408,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1409,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:13",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1484,
							"linearizedBaseContracts": [
								1484
							],
							"name": "IERC20",
							"nameLocation": "214:6:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1410,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:13",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1418,
									"name": "Transfer",
									"nameLocation": "396:8:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "405:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "427:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "447:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:13"
									},
									"src": "390:72:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1419,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:13",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1427,
									"name": "Approval",
									"nameLocation": "627:8:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "636:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "659:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1425,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "684:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:13"
									},
									"src": "621:78:13"
								},
								{
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:13",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:13"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "821:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:13"
									},
									"scope": 1484,
									"src": "775:55:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:13",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "931:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:13"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "971:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:13"
									},
									"scope": 1484,
									"src": "912:68:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:13",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "1222:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "1234:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:13"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "1267:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1448,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:13"
									},
									"scope": 1484,
									"src": "1204:69:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1452,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:13",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1461,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "1567:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "1582:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:13"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "1622:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:13"
									},
									"scope": 1484,
									"src": "1548:83:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1462,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:13",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "2326:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "2343:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:13"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "2376:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1468,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:13"
									},
									"scope": 1484,
									"src": "2309:73:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1472,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:13",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1483,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "2712:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "2726:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "2738:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:13"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "2771:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1480,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:13"
									},
									"scope": 1484,
									"src": "2690:87:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1485,
							"src": "204:2575:13",
							"usedErrors": [],
							"usedEvents": [
								1418,
								1427
							]
						}
					],
					"src": "106:2674:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							2154
						],
						"IERC1363": [
							1063
						],
						"IERC20": [
							1484
						],
						"SafeERC20": [
							1895
						]
					},
					"id": 1896,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1486,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1488,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1896,
							"sourceUnit": 1485,
							"src": "141:37:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1487,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1484,
										"src": "149:6:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 1490,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1896,
							"sourceUnit": 1064,
							"src": "179:58:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1489,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1063,
										"src": "187:8:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 1492,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1896,
							"sourceUnit": 2155,
							"src": "238:51:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1491,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2154,
										"src": "246:7:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1493,
								"nodeType": "StructuredDocumentation",
								"src": "291:458:14",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1895,
							"linearizedBaseContracts": [
								1895
							],
							"name": "SafeERC20",
							"nameLocation": "758:9:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "774:65:14",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 1498,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "850:24:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "883:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "875:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:15:14"
									},
									"src": "844:46:14"
								},
								{
									"documentation": {
										"id": 1499,
										"nodeType": "StructuredDocumentation",
										"src": "896:71:14",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 1507,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "978:32:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1019:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "1011:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1036:16:14",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "1028:24:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1062:17:14",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "1054:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:70:14"
									},
									"src": "972:109:14"
								},
								{
									"body": {
										"id": 1530,
										"nodeType": "Block",
										"src": "1343:88:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1519,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "1373:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1484",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1522,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1511,
																		"src": "1395:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1484",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1401:8:14",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1451,
																	"src": "1395:14:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1524,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1513,
																			"src": "1412:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1525,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1515,
																			"src": "1416:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1526,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1411:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 1520,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1380:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1384:10:14",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1380:14:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1380:43:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1484",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1518,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "1353:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1484_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:71:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1529,
												"nodeType": "ExpressionStatement",
												"src": "1353:71:14"
											}
										]
									},
									"documentation": {
										"id": 1508,
										"nodeType": "StructuredDocumentation",
										"src": "1087:179:14",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1280:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1300:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "1293:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1484",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1510,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1509,
														"name": "IERC20",
														"nameLocations": [
															"1293:6:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1484,
														"src": "1293:6:14"
													},
													"referencedDeclaration": 1484,
													"src": "1293:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1484",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1315:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "1307:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1327:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "1319:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:41:14"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1343:0:14"
									},
									"scope": 1895,
									"src": "1271:160:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1557,
										"nodeType": "Block",
										"src": "1760:98:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1545,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "1790:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1484",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1548,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1535,
																		"src": "1812:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1484",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1818:12:14",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1483,
																	"src": "1812:18:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1550,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1537,
																			"src": "1833:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1551,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1539,
																			"src": "1839:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1552,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1541,
																			"src": "1843:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1553,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1832:17:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 1546,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1797:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1801:10:14",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1797:14:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1797:53:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1484",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1544,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "1770:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1484_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:81:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1556,
												"nodeType": "ExpressionStatement",
												"src": "1770:81:14"
											}
										]
									},
									"documentation": {
										"id": 1532,
										"nodeType": "StructuredDocumentation",
										"src": "1437:228:14",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 1558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1679:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1703:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "1696:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1484",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1534,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1533,
														"name": "IERC20",
														"nameLocations": [
															"1696:6:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1484,
														"src": "1696:6:14"
													},
													"referencedDeclaration": 1484,
													"src": "1696:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1484",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1718:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "1710:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1732:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "1724:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1744:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "1736:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:55:14"
									},
									"returnParameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:0:14"
									},
									"scope": 1895,
									"src": "1670:188:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1588,
										"nodeType": "Block",
										"src": "2600:139:14",
										"statements": [
											{
												"assignments": [
													1570
												],
												"declarations": [
													{
														"constant": false,
														"id": 1570,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2618:12:14",
														"nodeType": "VariableDeclaration",
														"scope": 1588,
														"src": "2610:20:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1569,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2610:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1579,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1575,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2657:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1895",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1895",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2649:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1573,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2649:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2649:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1577,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "2664:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1571,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "2633:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1484",
																"typeString": "contract IERC20"
															}
														},
														"id": 1572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2639:9:14",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1461,
														"src": "2633:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:39:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2610:62:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1581,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "2695:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1484",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1582,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "2702:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1583,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1570,
																"src": "2711:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1584,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1566,
																"src": "2726:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2711:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1484",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1580,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "2682:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1484_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:50:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1587,
												"nodeType": "ExpressionStatement",
												"src": "2682:50:14"
											}
										]
									},
									"documentation": {
										"id": 1559,
										"nodeType": "StructuredDocumentation",
										"src": "1864:645:14",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 1589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2523:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2552:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "2545:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1484",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1561,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1560,
														"name": "IERC20",
														"nameLocations": [
															"2545:6:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1484,
														"src": "2545:6:14"
													},
													"referencedDeclaration": 1484,
													"src": "2545:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1484",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2567:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "2559:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2584:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "2576:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:46:14"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:0:14"
									},
									"scope": 1895,
									"src": "2514:225:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1631,
										"nodeType": "Block",
										"src": "3505:370:14",
										"statements": [
											{
												"id": 1630,
												"nodeType": "UncheckedBlock",
												"src": "3515:354:14",
												"statements": [
													{
														"assignments": [
															1601
														],
														"declarations": [
															{
																"constant": false,
																"id": 1601,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3547:16:14",
																"nodeType": "VariableDeclaration",
																"scope": 1630,
																"src": "3539:24:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1600,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3539:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1610,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1606,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3590:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1895",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1895",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3582:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1604,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3582:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3582:13:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1608,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "3597:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1602,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1593,
																	"src": "3566:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1484",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3572:9:14",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1461,
																"src": "3566:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3566:39:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3539:66:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1611,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1601,
																"src": "3623:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1612,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1597,
																"src": "3642:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3623:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1621,
														"nodeType": "IfStatement",
														"src": "3619:160:14",
														"trueBody": {
															"id": 1620,
															"nodeType": "Block",
															"src": "3661:118:14",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 1615,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1595,
																				"src": "3719:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1616,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1601,
																				"src": "3728:16:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1617,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1597,
																				"src": "3746:17:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1614,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1507,
																			"src": "3686:32:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 1618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3686:78:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1619,
																	"nodeType": "RevertStatement",
																	"src": "3679:85:14"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1623,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1593,
																	"src": "3805:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1484",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1624,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "3812:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1625,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1601,
																		"src": "3821:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1626,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1597,
																		"src": "3840:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3821:36:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1484",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1622,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1679,
																"src": "3792:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1484_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3792:66:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1629,
														"nodeType": "ExpressionStatement",
														"src": "3792:66:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1590,
										"nodeType": "StructuredDocumentation",
										"src": "2745:657:14",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 1632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3416:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3445:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "3438:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1484",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1592,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1591,
														"name": "IERC20",
														"nameLocations": [
															"3438:6:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1484,
														"src": "3438:6:14"
													},
													"referencedDeclaration": 1484,
													"src": "3438:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1484",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3460:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "3452:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3477:17:14",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "3469:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:58:14"
									},
									"returnParameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:14"
									},
									"scope": 1895,
									"src": "3407:468:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1678,
										"nodeType": "Block",
										"src": "4529:303:14",
										"statements": [
											{
												"assignments": [
													1644
												],
												"declarations": [
													{
														"constant": false,
														"id": 1644,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4552:12:14",
														"nodeType": "VariableDeclaration",
														"scope": 1678,
														"src": "4539:25:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1643,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4539:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1653,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1647,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1636,
																"src": "4582:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1484",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4588:7:14",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1471,
															"src": "4582:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 1649,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1638,
																	"src": "4598:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1650,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1640,
																	"src": "4607:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1651,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4597:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 1645,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4567:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1646,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4571:10:14",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4567:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:47:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:75:14"
											},
											{
												"condition": {
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4629:45:14",
													"subExpression": {
														"arguments": [
															{
																"id": 1655,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1636,
																"src": "4654:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1484",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1656,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1644,
																"src": "4661:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$1484",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1654,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1894,
															"src": "4630:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1484_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 1657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4630:44:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1677,
												"nodeType": "IfStatement",
												"src": "4625:201:14",
												"trueBody": {
													"id": 1676,
													"nodeType": "Block",
													"src": "4676:150:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1660,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1636,
																		"src": "4710:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1484",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1663,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1636,
																					"src": "4732:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1484",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1664,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4738:7:14",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1471,
																				"src": "4732:13:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1665,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1638,
																						"src": "4748:7:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 1666,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4757:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 1667,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4747:12:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 1661,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4717:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4721:10:14",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4717:14:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4717:43:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$1484",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1659,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1853,
																	"src": "4690:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1484_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4690:71:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1670,
															"nodeType": "ExpressionStatement",
															"src": "4690:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1672,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1636,
																		"src": "4795:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1484",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 1673,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1644,
																		"src": "4802:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$1484",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1671,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1853,
																	"src": "4775:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1484_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4775:40:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1675,
															"nodeType": "ExpressionStatement",
															"src": "4775:40:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1633,
										"nodeType": "StructuredDocumentation",
										"src": "3881:566:14",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 1679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4461:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4481:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "4474:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1484",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1635,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1634,
														"name": "IERC20",
														"nameLocations": [
															"4474:6:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1484,
														"src": "4474:6:14"
													},
													"referencedDeclaration": 1484,
													"src": "4474:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1484",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4496:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "4488:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4513:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "4505:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4505:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4473:46:14"
									},
									"returnParameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4529:0:14"
									},
									"scope": 1895,
									"src": "4452:380:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1721,
										"nodeType": "Block",
										"src": "5279:219:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1692,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1685,
																"src": "5293:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5296:4:14",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5293:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5301:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5293:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1695,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5311:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5293:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5379:39:14",
														"subExpression": {
															"arguments": [
																{
																	"id": 1706,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1685,
																	"src": "5402:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1707,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1687,
																	"src": "5406:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1708,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1689,
																	"src": "5413:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1704,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1683,
																	"src": "5380:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$1063",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5386:15:14",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1014,
																"src": "5380:21:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5380:38:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1719,
													"nodeType": "IfStatement",
													"src": "5375:117:14",
													"trueBody": {
														"id": 1718,
														"nodeType": "Block",
														"src": "5420:72:14",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1714,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1683,
																					"src": "5474:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$1063",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$1063",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1713,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5466:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1712,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5466:7:14",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5466:14:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1711,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1498,
																		"src": "5441:24:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5441:40:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1717,
																"nodeType": "RevertStatement",
																"src": "5434:47:14"
															}
														]
													}
												},
												"id": 1720,
												"nodeType": "IfStatement",
												"src": "5289:203:14",
												"trueBody": {
													"id": 1703,
													"nodeType": "Block",
													"src": "5314:55:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1698,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1683,
																		"src": "5341:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$1063",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1699,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1685,
																		"src": "5348:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1700,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1687,
																		"src": "5352:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$1063",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1697,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1531,
																	"src": "5328:12:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1484_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5328:30:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1702,
															"nodeType": "ExpressionStatement",
															"src": "5328:30:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1680,
										"nodeType": "StructuredDocumentation",
										"src": "4838:333:14",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5185:22:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5217:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "5208:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$1063",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1682,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1681,
														"name": "IERC1363",
														"nameLocations": [
															"5208:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1063,
														"src": "5208:8:14"
													},
													"referencedDeclaration": 1063,
													"src": "5208:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$1063",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5232:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "5224:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5244:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "5236:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5264:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "5251:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1688,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5251:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:62:14"
									},
									"returnParameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5279:0:14"
									},
									"scope": 1895,
									"src": "5176:322:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1768,
										"nodeType": "Block",
										"src": "6017:239:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1737,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1730,
																"src": "6031:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6034:4:14",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6031:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6039:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6031:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1740,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6049:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6031:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6127:49:14",
														"subExpression": {
															"arguments": [
																{
																	"id": 1752,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1728,
																	"src": "6154:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1753,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1730,
																	"src": "6160:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1754,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1732,
																	"src": "6164:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1755,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1734,
																	"src": "6171:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1750,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1726,
																	"src": "6128:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$1063",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6134:19:14",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1040,
																"src": "6128:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6128:48:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1766,
													"nodeType": "IfStatement",
													"src": "6123:127:14",
													"trueBody": {
														"id": 1765,
														"nodeType": "Block",
														"src": "6178:72:14",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1761,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1726,
																					"src": "6232:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$1063",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$1063",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1760,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6224:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1759,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6224:7:14",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6224:14:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1758,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1498,
																		"src": "6199:24:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6199:40:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1764,
																"nodeType": "RevertStatement",
																"src": "6192:47:14"
															}
														]
													}
												},
												"id": 1767,
												"nodeType": "IfStatement",
												"src": "6027:223:14",
												"trueBody": {
													"id": 1749,
													"nodeType": "Block",
													"src": "6052:65:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1743,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1726,
																		"src": "6083:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$1063",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1744,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1728,
																		"src": "6090:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1745,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1730,
																		"src": "6096:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1746,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1732,
																		"src": "6100:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$1063",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1742,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "6066:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1484_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6066:40:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1748,
															"nodeType": "ExpressionStatement",
															"src": "6066:40:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1723,
										"nodeType": "StructuredDocumentation",
										"src": "5504:341:14",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5859:26:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5904:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "5895:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$1063",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1725,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1724,
														"name": "IERC1363",
														"nameLocations": [
															"5895:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1063,
														"src": "5895:8:14"
													},
													"referencedDeclaration": 1063,
													"src": "5895:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$1063",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5927:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "5919:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5949:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "5941:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5969:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "5961:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5997:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "5984:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1733,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5984:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5885:122:14"
									},
									"returnParameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6017:0:14"
									},
									"scope": 1895,
									"src": "5850:406:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1811,
										"nodeType": "Block",
										"src": "7023:218:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1782,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1775,
																"src": "7037:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7040:4:14",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7037:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7045:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7037:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1785,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7055:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7037:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7123:38:14",
														"subExpression": {
															"arguments": [
																{
																	"id": 1796,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "7145:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1797,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1777,
																	"src": "7149:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1798,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1779,
																	"src": "7156:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1794,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1773,
																	"src": "7124:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$1063",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7130:14:14",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1062,
																"src": "7124:20:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7124:37:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1809,
													"nodeType": "IfStatement",
													"src": "7119:116:14",
													"trueBody": {
														"id": 1808,
														"nodeType": "Block",
														"src": "7163:72:14",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1804,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1773,
																					"src": "7217:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$1063",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$1063",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1803,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7209:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1802,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7209:7:14",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7209:14:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1801,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1498,
																		"src": "7184:24:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7184:40:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1807,
																"nodeType": "RevertStatement",
																"src": "7177:47:14"
															}
														]
													}
												},
												"id": 1810,
												"nodeType": "IfStatement",
												"src": "7033:202:14",
												"trueBody": {
													"id": 1793,
													"nodeType": "Block",
													"src": "7058:55:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1788,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1773,
																		"src": "7085:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$1063",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1789,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1775,
																		"src": "7092:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1790,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1777,
																		"src": "7096:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$1063",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1787,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "7072:12:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1484_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7072:30:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1792,
															"nodeType": "ExpressionStatement",
															"src": "7072:30:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1770,
										"nodeType": "StructuredDocumentation",
										"src": "6262:654:14",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 1812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6930:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6961:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "6952:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$1063",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1772,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1771,
														"name": "IERC1363",
														"nameLocations": [
															"6952:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1063,
														"src": "6952:8:14"
													},
													"referencedDeclaration": 1063,
													"src": "6952:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$1063",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6976:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "6968:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6988:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "6980:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6980:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7008:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "6995:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1778,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6995:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6951:62:14"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7023:0:14"
									},
									"scope": 1895,
									"src": "6921:320:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1852,
										"nodeType": "Block",
										"src": "7808:650:14",
										"statements": [
											{
												"assignments": [
													1822
												],
												"declarations": [
													{
														"constant": false,
														"id": 1822,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7826:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 1852,
														"src": "7818:18:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1821,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7818:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1823,
												"nodeType": "VariableDeclarationStatement",
												"src": "7818:18:14"
											},
											{
												"assignments": [
													1825
												],
												"declarations": [
													{
														"constant": false,
														"id": 1825,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7854:11:14",
														"nodeType": "VariableDeclaration",
														"scope": 1852,
														"src": "7846:19:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1824,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7846:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1826,
												"nodeType": "VariableDeclarationStatement",
												"src": "7846:19:14"
											},
											{
												"AST": {
													"nativeSrc": "7900:396:14",
													"nodeType": "YulBlock",
													"src": "7900:396:14",
													"statements": [
														{
															"nativeSrc": "7914:75:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7914:75:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7934:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7934:3:14"
																		},
																		"nativeSrc": "7934:5:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7934:5:14"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7941:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7941:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7948:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7948:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7955:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "7955:4:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7961:4:14",
																				"nodeType": "YulLiteral",
																				"src": "7961:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7951:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:14"
																		},
																		"nativeSrc": "7951:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7951:15:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7974:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "7974:4:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7968:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "7968:5:14"
																		},
																		"nativeSrc": "7968:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7968:11:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7981:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7981:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7984:4:14",
																		"nodeType": "YulLiteral",
																		"src": "7984:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7929:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7929:4:14"
																},
																"nativeSrc": "7929:60:14",
																"nodeType": "YulFunctionCall",
																"src": "7929:60:14"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7918:7:14",
																	"nodeType": "YulTypedName",
																	"src": "7918:7:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8050:157:14",
																"nodeType": "YulBlock",
																"src": "8050:157:14",
																"statements": [
																	{
																		"nativeSrc": "8068:22:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8068:22:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8085:4:14",
																					"nodeType": "YulLiteral",
																					"src": "8085:4:14",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8079:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "8079:5:14"
																			},
																			"nativeSrc": "8079:11:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8079:11:14"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8072:3:14",
																				"nodeType": "YulTypedName",
																				"src": "8072:3:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8122:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8122:3:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8127:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8127:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8130:14:14",
																						"nodeType": "YulIdentifier",
																						"src": "8130:14:14"
																					},
																					"nativeSrc": "8130:16:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8130:16:14"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8107:14:14",
																				"nodeType": "YulIdentifier",
																				"src": "8107:14:14"
																			},
																			"nativeSrc": "8107:40:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8107:40:14"
																		},
																		"nativeSrc": "8107:40:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8107:40:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8171:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8171:3:14"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8176:14:14",
																						"nodeType": "YulIdentifier",
																						"src": "8176:14:14"
																					},
																					"nativeSrc": "8176:16:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8176:16:14"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8164:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8164:6:14"
																			},
																			"nativeSrc": "8164:29:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8164:29:14"
																		},
																		"nativeSrc": "8164:29:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8164:29:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8041:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "8041:7:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8034:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:14"
																},
																"nativeSrc": "8034:15:14",
																"nodeType": "YulFunctionCall",
																"src": "8034:15:14"
															},
															"nativeSrc": "8031:176:14",
															"nodeType": "YulIf",
															"src": "8031:176:14"
														},
														{
															"nativeSrc": "8220:30:14",
															"nodeType": "YulAssignment",
															"src": "8220:30:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8234:14:14",
																	"nodeType": "YulIdentifier",
																	"src": "8234:14:14"
																},
																"nativeSrc": "8234:16:14",
																"nodeType": "YulFunctionCall",
																"src": "8234:16:14"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8220:10:14",
																	"nodeType": "YulIdentifier",
																	"src": "8220:10:14"
																}
															]
														},
														{
															"nativeSrc": "8263:23:14",
															"nodeType": "YulAssignment",
															"src": "8263:23:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8284:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8284:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8278:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "8278:5:14"
																},
																"nativeSrc": "8278:8:14",
																"nodeType": "YulFunctionCall",
																"src": "8278:8:14"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8263:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "8263:11:14"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1818,
														"isOffset": false,
														"isSlot": false,
														"src": "7955:4:14",
														"valueSize": 1
													},
													{
														"declaration": 1818,
														"isOffset": false,
														"isSlot": false,
														"src": "7974:4:14",
														"valueSize": 1
													},
													{
														"declaration": 1822,
														"isOffset": false,
														"isSlot": false,
														"src": "8220:10:14",
														"valueSize": 1
													},
													{
														"declaration": 1825,
														"isOffset": false,
														"isSlot": false,
														"src": "8263:11:14",
														"valueSize": 1
													},
													{
														"declaration": 1816,
														"isOffset": false,
														"isSlot": false,
														"src": "7941:5:14",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1827,
												"nodeType": "InlineAssembly",
												"src": "7875:421:14"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1828,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1822,
															"src": "8310:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8324:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8310:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1839,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "8362:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8377:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8362:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8310:68:14",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1833,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1816,
																			"src": "8336:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1484",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$1484",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8328:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1831,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8328:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8328:14:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8343:4:14",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8328:19:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8348:6:14",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8328:26:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8358:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8328:31:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1851,
												"nodeType": "IfStatement",
												"src": "8306:146:14",
												"trueBody": {
													"id": 1850,
													"nodeType": "Block",
													"src": "8380:72:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1846,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1816,
																				"src": "8434:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$1484",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$1484",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8426:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1844,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8426:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8426:14:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1843,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1498,
																	"src": "8401:24:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8401:40:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1849,
															"nodeType": "RevertStatement",
															"src": "8394:47:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1813,
										"nodeType": "StructuredDocumentation",
										"src": "7247:486:14",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7747:19:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7774:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "7767:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1484",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1815,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1814,
														"name": "IERC20",
														"nameLocations": [
															"7767:6:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1484,
														"src": "7767:6:14"
													},
													"referencedDeclaration": 1484,
													"src": "7767:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1484",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7794:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "7781:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1817,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7781:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7766:33:14"
									},
									"returnParameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7808:0:14"
									},
									"scope": 1895,
									"src": "7738:720:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1893,
										"nodeType": "Block",
										"src": "9049:391:14",
										"statements": [
											{
												"assignments": [
													1865
												],
												"declarations": [
													{
														"constant": false,
														"id": 1865,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9064:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 1893,
														"src": "9059:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1864,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9059:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1866,
												"nodeType": "VariableDeclarationStatement",
												"src": "9059:12:14"
											},
											{
												"assignments": [
													1868
												],
												"declarations": [
													{
														"constant": false,
														"id": 1868,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9089:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 1893,
														"src": "9081:18:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1867,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9081:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1869,
												"nodeType": "VariableDeclarationStatement",
												"src": "9081:18:14"
											},
											{
												"assignments": [
													1871
												],
												"declarations": [
													{
														"constant": false,
														"id": 1871,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9117:11:14",
														"nodeType": "VariableDeclaration",
														"scope": 1893,
														"src": "9109:19:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1870,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9109:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1872,
												"nodeType": "VariableDeclarationStatement",
												"src": "9109:19:14"
											},
											{
												"AST": {
													"nativeSrc": "9163:174:14",
													"nodeType": "YulBlock",
													"src": "9163:174:14",
													"statements": [
														{
															"nativeSrc": "9177:71:14",
															"nodeType": "YulAssignment",
															"src": "9177:71:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9193:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9193:3:14"
																		},
																		"nativeSrc": "9193:5:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9193:5:14"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9200:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "9200:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9207:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9207:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9214:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "9214:4:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9220:4:14",
																				"nodeType": "YulLiteral",
																				"src": "9220:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9210:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:14"
																		},
																		"nativeSrc": "9210:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9210:15:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9233:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "9233:4:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9227:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "9227:5:14"
																		},
																		"nativeSrc": "9227:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9227:11:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9240:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9243:4:14",
																		"nodeType": "YulLiteral",
																		"src": "9243:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9188:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:14"
																},
																"nativeSrc": "9188:60:14",
																"nodeType": "YulFunctionCall",
																"src": "9188:60:14"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9177:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "9177:7:14"
																}
															]
														},
														{
															"nativeSrc": "9261:30:14",
															"nodeType": "YulAssignment",
															"src": "9261:30:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9275:14:14",
																	"nodeType": "YulIdentifier",
																	"src": "9275:14:14"
																},
																"nativeSrc": "9275:16:14",
																"nodeType": "YulFunctionCall",
																"src": "9275:16:14"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9261:10:14",
																	"nodeType": "YulIdentifier",
																	"src": "9261:10:14"
																}
															]
														},
														{
															"nativeSrc": "9304:23:14",
															"nodeType": "YulAssignment",
															"src": "9304:23:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9325:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9325:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9319:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9319:5:14"
																},
																"nativeSrc": "9319:8:14",
																"nodeType": "YulFunctionCall",
																"src": "9319:8:14"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9304:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "9304:11:14"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1859,
														"isOffset": false,
														"isSlot": false,
														"src": "9214:4:14",
														"valueSize": 1
													},
													{
														"declaration": 1859,
														"isOffset": false,
														"isSlot": false,
														"src": "9233:4:14",
														"valueSize": 1
													},
													{
														"declaration": 1868,
														"isOffset": false,
														"isSlot": false,
														"src": "9261:10:14",
														"valueSize": 1
													},
													{
														"declaration": 1871,
														"isOffset": false,
														"isSlot": false,
														"src": "9304:11:14",
														"valueSize": 1
													},
													{
														"declaration": 1865,
														"isOffset": false,
														"isSlot": false,
														"src": "9177:7:14",
														"valueSize": 1
													},
													{
														"declaration": 1857,
														"isOffset": false,
														"isSlot": false,
														"src": "9200:5:14",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1873,
												"nodeType": "InlineAssembly",
												"src": "9138:199:14"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1874,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1865,
														"src": "9353:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1875,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1868,
																		"src": "9365:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9365:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1886,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1871,
																		"src": "9416:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9431:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9416:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9365:67:14",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1880,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1857,
																						"src": "9391:5:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$1484",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$1484",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1879,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9383:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1878,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9383:7:14",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1881,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9383:14:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9398:4:14",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9383:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9403:6:14",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9383:26:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9412:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9383:30:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1890,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9364:69:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9353:80:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1863,
												"id": 1892,
												"nodeType": "Return",
												"src": "9346:87:14"
											}
										]
									},
									"documentation": {
										"id": 1854,
										"nodeType": "StructuredDocumentation",
										"src": "8464:491:14",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8969:23:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9000:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "8993:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1484",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1856,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1855,
														"name": "IERC20",
														"nameLocations": [
															"8993:6:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1484,
														"src": "8993:6:14"
													},
													"referencedDeclaration": 1484,
													"src": "8993:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1484",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9020:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "9007:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1858,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9007:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8992:33:14"
									},
									"returnParameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "9043:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9043:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9042:6:14"
									},
									"scope": 1895,
									"src": "8960:480:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1896,
							"src": "750:8692:14",
							"usedErrors": [
								1498,
								1507
							],
							"usedEvents": []
						}
					],
					"src": "115:9328:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2154
						],
						"Errors": [
							2176
						]
					},
					"id": 2155,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1897,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 1899,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2155,
							"sourceUnit": 2177,
							"src": "127:36:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1898,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2176,
										"src": "135:6:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1900,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:15",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2154,
							"linearizedBaseContracts": [
								2154
							],
							"name": "Address",
							"nameLocation": "241:7:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1901,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:15",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1905,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "358:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:15"
									},
									"src": "335:39:15"
								},
								{
									"body": {
										"id": 1951,
										"nodeType": "Block",
										"src": "1361:278:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1915,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2154",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2154",
																		"typeString": "library Address"
																	}
																],
																"id": 1914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1913,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1917,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:15",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1918,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1910,
														"src": "1399:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1932,
												"nodeType": "IfStatement",
												"src": "1371:125:15",
												"trueBody": {
													"id": 1931,
													"nodeType": "Block",
													"src": "1407:89:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1925,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$2154",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$2154",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1924,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1923,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:15",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1926,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:15",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1928,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1910,
																		"src": "1478:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1920,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2176,
																		"src": "1428:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2176_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:15",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2164,
																	"src": "1428:26:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1930,
															"nodeType": "RevertStatement",
															"src": "1421:64:15"
														}
													]
												}
											},
											{
												"assignments": [
													1934,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1934,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:15",
														"nodeType": "VariableDeclaration",
														"scope": 1951,
														"src": "1507:12:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1933,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1941,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1935,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "1525:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:15",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1937,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1910,
																"src": "1547:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:15"
											},
											{
												"condition": {
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:15",
													"subExpression": {
														"id": 1942,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1934,
														"src": "1573:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1950,
												"nodeType": "IfStatement",
												"src": "1568:65:15",
												"trueBody": {
													"id": 1949,
													"nodeType": "Block",
													"src": "1582:51:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1944,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2176,
																		"src": "1603:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2176_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:15",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2167,
																	"src": "1603:17:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1948,
															"nodeType": "RevertStatement",
															"src": "1596:26:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1906,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:15",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "1309:25:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:15",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "1336:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:15"
									},
									"returnParameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:15"
									},
									"scope": 2154,
									"src": "1290:349:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1968,
										"nodeType": "Block",
										"src": "2573:62:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1963,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1955,
															"src": "2612:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1964,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1957,
															"src": "2620:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1962,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2019,
														"src": "2590:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1961,
												"id": 1967,
												"nodeType": "Return",
												"src": "2583:45:15"
											}
										]
									},
									"documentation": {
										"id": 1953,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:15",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "2506:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "2522:17:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1956,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:15"
									},
									"returnParameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "2559:12:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1959,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:15"
									},
									"scope": 2154,
									"src": "2484:151:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2018,
										"nodeType": "Block",
										"src": "3072:294:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1983,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2154",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2154",
																		"typeString": "library Address"
																	}
																],
																"id": 1982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1981,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:15",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1986,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1976,
														"src": "3110:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2000,
												"nodeType": "IfStatement",
												"src": "3082:123:15",
												"trueBody": {
													"id": 1999,
													"nodeType": "Block",
													"src": "3117:88:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1993,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$2154",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$2154",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1992,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1991,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:15",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1994,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:15",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1996,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1976,
																		"src": "3188:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1988,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2176,
																		"src": "3138:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2176_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:15",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2164,
																	"src": "3138:26:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1998,
															"nodeType": "RevertStatement",
															"src": "3131:63:15"
														}
													]
												}
											},
											{
												"assignments": [
													2002,
													2004
												],
												"declarations": [
													{
														"constant": false,
														"id": 2002,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:15",
														"nodeType": "VariableDeclaration",
														"scope": 2018,
														"src": "3215:12:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2001,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2004,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:15",
														"nodeType": "VariableDeclaration",
														"scope": 2018,
														"src": "3229:23:15",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2003,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2011,
												"initialValue": {
													"arguments": [
														{
															"id": 2009,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "3282:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2005,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1972,
																"src": "3256:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:15",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2007,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1976,
																"src": "3275:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2013,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1972,
															"src": "3331:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2014,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2002,
															"src": "3339:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2015,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2004,
															"src": "3348:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2012,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2111,
														"src": "3304:26:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1980,
												"id": 2017,
												"nodeType": "Return",
												"src": "3297:62:15"
											}
										]
									},
									"documentation": {
										"id": 1970,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:15",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 2019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "2990:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "3006:17:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1973,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "3025:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:15"
									},
									"returnParameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "3058:12:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1978,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:15"
									},
									"scope": 2154,
									"src": "2959:407:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2044,
										"nodeType": "Block",
										"src": "3605:154:15",
										"statements": [
											{
												"assignments": [
													2030,
													2032
												],
												"declarations": [
													{
														"constant": false,
														"id": 2030,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:15",
														"nodeType": "VariableDeclaration",
														"scope": 2044,
														"src": "3616:12:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2029,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2032,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:15",
														"nodeType": "VariableDeclaration",
														"scope": 2044,
														"src": "3630:23:15",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2031,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2037,
												"initialValue": {
													"arguments": [
														{
															"id": 2035,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "3675:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2033,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2022,
															"src": "3657:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:15",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2039,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2022,
															"src": "3724:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2040,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2030,
															"src": "3732:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2041,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2032,
															"src": "3741:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2038,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2111,
														"src": "3697:26:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2028,
												"id": 2043,
												"nodeType": "Return",
												"src": "3690:62:15"
											}
										]
									},
									"documentation": {
										"id": 2020,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:15",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 2045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "3533:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "3549:17:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2023,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:15"
									},
									"returnParameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "3591:12:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2026,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:15"
									},
									"scope": 2154,
									"src": "3505:254:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2070,
										"nodeType": "Block",
										"src": "3997:156:15",
										"statements": [
											{
												"assignments": [
													2056,
													2058
												],
												"declarations": [
													{
														"constant": false,
														"id": 2056,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:15",
														"nodeType": "VariableDeclaration",
														"scope": 2070,
														"src": "4008:12:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2055,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2058,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:15",
														"nodeType": "VariableDeclaration",
														"scope": 2070,
														"src": "4022:23:15",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2057,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2063,
												"initialValue": {
													"arguments": [
														{
															"id": 2061,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2050,
															"src": "4069:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2059,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2048,
															"src": "4049:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:15",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2065,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2048,
															"src": "4118:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2066,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2056,
															"src": "4126:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2067,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2058,
															"src": "4135:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2064,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2111,
														"src": "4091:26:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2054,
												"id": 2069,
												"nodeType": "Return",
												"src": "4084:62:15"
											}
										]
									},
									"documentation": {
										"id": 2046,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:15",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 2071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "3930:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "3946:17:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2049,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:15"
									},
									"returnParameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "3983:12:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2052,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:15"
									},
									"scope": 2154,
									"src": "3900:253:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2110,
										"nodeType": "Block",
										"src": "4579:424:15",
										"statements": [
											{
												"condition": {
													"id": 2084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:15",
													"subExpression": {
														"id": 2083,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2076,
														"src": "4594:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2108,
													"nodeType": "Block",
													"src": "4653:344:15",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2090,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2078,
																			"src": "4841:10:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:15",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 2094,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2074,
																				"src": "4867:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 2095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:15",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:15",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2105,
															"nodeType": "IfStatement",
															"src": "4837:119:15",
															"trueBody": {
																"id": 2104,
																"nodeType": "Block",
																"src": "4892:64:15",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2101,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2074,
																					"src": "4934:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2100,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1905,
																				"src": "4917:16:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 2102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2103,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:15"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2106,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2078,
																"src": "4976:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2082,
															"id": 2107,
															"nodeType": "Return",
															"src": "4969:17:15"
														}
													]
												},
												"id": 2109,
												"nodeType": "IfStatement",
												"src": "4589:408:15",
												"trueBody": {
													"id": 2089,
													"nodeType": "Block",
													"src": "4603:44:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2086,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2078,
																		"src": "4625:10:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2085,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2153,
																	"src": "4617:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2088,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2072,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:15",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 2111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "4466:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "4490:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2075,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "4512:23:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2077,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:15"
									},
									"returnParameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "4565:12:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2080,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:15"
									},
									"scope": 2154,
									"src": "4421:582:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2132,
										"nodeType": "Block",
										"src": "5307:122:15",
										"statements": [
											{
												"condition": {
													"id": 2122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:15",
													"subExpression": {
														"id": 2121,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2114,
														"src": "5322:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2130,
													"nodeType": "Block",
													"src": "5381:42:15",
													"statements": [
														{
															"expression": {
																"id": 2128,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2116,
																"src": "5402:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2120,
															"id": 2129,
															"nodeType": "Return",
															"src": "5395:17:15"
														}
													]
												},
												"id": 2131,
												"nodeType": "IfStatement",
												"src": "5317:106:15",
												"trueBody": {
													"id": 2127,
													"nodeType": "Block",
													"src": "5331:44:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2124,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2116,
																		"src": "5353:10:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2123,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2153,
																	"src": "5345:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2126,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2112,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:15",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 2133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "5231:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2113,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "5245:23:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2115,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:15"
									},
									"returnParameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "5293:12:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:15"
									},
									"scope": 2154,
									"src": "5205:224:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2152,
										"nodeType": "Block",
										"src": "5598:432:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2139,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "5674:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:15",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2150,
													"nodeType": "Block",
													"src": "5973:51:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2145,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2176,
																		"src": "5994:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2176_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:15",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2167,
																	"src": "5994:17:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2149,
															"nodeType": "RevertStatement",
															"src": "5987:26:15"
														}
													]
												},
												"id": 2151,
												"nodeType": "IfStatement",
												"src": "5670:354:15",
												"trueBody": {
													"id": 2144,
													"nodeType": "Block",
													"src": "5697:270:15",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:15",
																"nodeType": "YulBlock",
																"src": "5824:133:15",
																"statements": [
																	{
																		"nativeSrc": "5842:40:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:15",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:15"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:15"
																			},
																			"nativeSrc": "5865:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:15"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:15",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:15",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:15",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:15",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:15"
																					},
																					"nativeSrc": "5906:19:15",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:15"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:15",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:15"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:15"
																			},
																			"nativeSrc": "5899:44:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:15"
																		},
																		"nativeSrc": "5899:44:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:15"
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 2136,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:15",
																	"valueSize": 1
																},
																{
																	"declaration": 2136,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:15",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 2143,
															"nodeType": "InlineAssembly",
															"src": "5799:158:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2134,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:15",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 2153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "5560:23:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:15"
									},
									"returnParameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:15"
									},
									"scope": 2154,
									"src": "5543:487:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2155,
							"src": "233:5799:15",
							"usedErrors": [
								1905
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							2176
						]
					},
					"id": 2177,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2156,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2157,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:16",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 2176,
							"linearizedBaseContracts": [
								2176
							],
							"name": "Errors",
							"nameLocation": "419:6:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2158,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:16",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 2164,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "557:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "574:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:16"
									},
									"src": "531:59:16"
								},
								{
									"documentation": {
										"id": 2165,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:16",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 2167,
									"name": "FailedCall",
									"nameLocation": "696:10:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:16"
									},
									"src": "690:19:16"
								},
								{
									"documentation": {
										"id": 2168,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:16",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 2170,
									"name": "FailedDeployment",
									"nameLocation": "772:16:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:16"
									},
									"src": "766:25:16"
								},
								{
									"documentation": {
										"id": 2171,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:16",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 2175,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "884:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:16"
									},
									"src": "860:33:16"
								}
							],
							"scope": 2177,
							"src": "411:484:16",
							"usedErrors": [
								2164,
								2167,
								2170,
								2175
							],
							"usedEvents": []
						}
					],
					"src": "100:796:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							2300
						]
					},
					"id": 2301,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2178,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2179,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:17",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 2300,
							"linearizedBaseContracts": [
								2300
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 2182,
									"members": [
										{
											"constant": false,
											"id": 2181,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2182,
											"src": "1462:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2180,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:17",
									"nodeType": "StructDefinition",
									"scope": 2300,
									"src": "1433:49:17",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 2185,
									"members": [
										{
											"constant": false,
											"id": 2184,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2185,
											"src": "1517:10:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2183,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:17",
									"nodeType": "StructDefinition",
									"scope": 2300,
									"src": "1488:46:17",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 2188,
									"members": [
										{
											"constant": false,
											"id": 2187,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2188,
											"src": "1569:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2186,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:17",
									"nodeType": "StructDefinition",
									"scope": 2300,
									"src": "1540:49:17",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 2191,
									"members": [
										{
											"constant": false,
											"id": 2190,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2191,
											"src": "1624:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2189,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:17",
									"nodeType": "StructDefinition",
									"scope": 2300,
									"src": "1595:49:17",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 2194,
									"members": [
										{
											"constant": false,
											"id": 2193,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2194,
											"src": "1678:12:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 2192,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:17",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:17",
									"nodeType": "StructDefinition",
									"scope": 2300,
									"src": "1650:47:17",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 2197,
									"members": [
										{
											"constant": false,
											"id": 2196,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2197,
											"src": "1731:12:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2195,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:17",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:17",
									"nodeType": "StructDefinition",
									"scope": 2300,
									"src": "1703:47:17",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 2200,
									"members": [
										{
											"constant": false,
											"id": 2199,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2200,
											"src": "1783:11:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2198,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:17",
									"nodeType": "StructDefinition",
									"scope": 2300,
									"src": "1756:45:17",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2210,
										"nodeType": "Block",
										"src": "1983:79:17",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:17",
													"nodeType": "YulBlock",
													"src": "2018:38:17",
													"statements": [
														{
															"nativeSrc": "2032:14:17",
															"nodeType": "YulAssignment",
															"src": "2032:14:17",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:17",
																"nodeType": "YulIdentifier",
																"src": "2042:4:17"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:17"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2207,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:17",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2203,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:17",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2209,
												"nodeType": "InlineAssembly",
												"src": "1993:63:17"
											}
										]
									},
									"documentation": {
										"id": 2201,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:17",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "1923:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2202,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:17"
									},
									"returnParameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "1960:21:17",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2182_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2206,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2205,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2182,
														"src": "1960:11:17"
													},
													"referencedDeclaration": 2182,
													"src": "1960:11:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2182_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:17"
									},
									"scope": 2300,
									"src": "1899:163:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2221,
										"nodeType": "Block",
										"src": "2243:79:17",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:17",
													"nodeType": "YulBlock",
													"src": "2278:38:17",
													"statements": [
														{
															"nativeSrc": "2292:14:17",
															"nodeType": "YulAssignment",
															"src": "2292:14:17",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:17",
																"nodeType": "YulIdentifier",
																"src": "2302:4:17"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:17"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2218,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:17",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2214,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:17",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2220,
												"nodeType": "InlineAssembly",
												"src": "2253:63:17"
											}
										]
									},
									"documentation": {
										"id": 2212,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:17",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 2222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "2183:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2213,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:17"
									},
									"returnParameters": {
										"id": 2219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2218,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "2220:21:17",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$2185_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 2217,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2216,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2185,
														"src": "2220:11:17"
													},
													"referencedDeclaration": 2185,
													"src": "2220:11:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$2185_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:17"
									},
									"scope": 2300,
									"src": "2159:163:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2232,
										"nodeType": "Block",
										"src": "2503:79:17",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:17",
													"nodeType": "YulBlock",
													"src": "2538:38:17",
													"statements": [
														{
															"nativeSrc": "2552:14:17",
															"nodeType": "YulAssignment",
															"src": "2552:14:17",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:17",
																"nodeType": "YulIdentifier",
																"src": "2562:4:17"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:17"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2229,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:17",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2225,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:17",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2231,
												"nodeType": "InlineAssembly",
												"src": "2513:63:17"
											}
										]
									},
									"documentation": {
										"id": 2223,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:17",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2225,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "2443:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2224,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:17"
									},
									"returnParameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "2480:21:17",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2188_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 2228,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2227,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2188,
														"src": "2480:11:17"
													},
													"referencedDeclaration": 2188,
													"src": "2480:11:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2188_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:17"
									},
									"scope": 2300,
									"src": "2419:163:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2243,
										"nodeType": "Block",
										"src": "2763:79:17",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:17",
													"nodeType": "YulBlock",
													"src": "2798:38:17",
													"statements": [
														{
															"nativeSrc": "2812:14:17",
															"nodeType": "YulAssignment",
															"src": "2812:14:17",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:17",
																"nodeType": "YulIdentifier",
																"src": "2822:4:17"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:17"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2240,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:17",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:17",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2242,
												"nodeType": "InlineAssembly",
												"src": "2773:63:17"
											}
										]
									},
									"documentation": {
										"id": 2234,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:17",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "2703:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2235,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:17"
									},
									"returnParameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "2740:21:17",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2191_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2239,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2238,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2191,
														"src": "2740:11:17"
													},
													"referencedDeclaration": 2191,
													"src": "2740:11:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2191_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:17"
									},
									"scope": 2300,
									"src": "2679:163:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2254,
										"nodeType": "Block",
										"src": "3020:79:17",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:17",
													"nodeType": "YulBlock",
													"src": "3055:38:17",
													"statements": [
														{
															"nativeSrc": "3069:14:17",
															"nodeType": "YulAssignment",
															"src": "3069:14:17",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:17",
																"nodeType": "YulIdentifier",
																"src": "3079:4:17"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:17"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2251,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:17",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2247,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:17",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2253,
												"nodeType": "InlineAssembly",
												"src": "3030:63:17"
											}
										]
									},
									"documentation": {
										"id": 2245,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:17",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 2255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "2961:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2246,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:17"
									},
									"returnParameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "2998:20:17",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$2194_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 2250,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2249,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2194,
														"src": "2998:10:17"
													},
													"referencedDeclaration": 2194,
													"src": "2998:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$2194_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:17"
									},
									"scope": 2300,
									"src": "2938:161:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2265,
										"nodeType": "Block",
										"src": "3277:79:17",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:17",
													"nodeType": "YulBlock",
													"src": "3312:38:17",
													"statements": [
														{
															"nativeSrc": "3326:14:17",
															"nodeType": "YulAssignment",
															"src": "3326:14:17",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:17",
																"nodeType": "YulIdentifier",
																"src": "3336:4:17"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:17"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2262,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:17",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2258,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:17",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2264,
												"nodeType": "InlineAssembly",
												"src": "3287:63:17"
											}
										]
									},
									"documentation": {
										"id": 2256,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:17",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 2266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2258,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "3218:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:17"
									},
									"returnParameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "3255:20:17",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2197_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2261,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2260,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2197,
														"src": "3255:10:17"
													},
													"referencedDeclaration": 2197,
													"src": "3255:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2197_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:17"
									},
									"scope": 2300,
									"src": "3195:161:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2276,
										"nodeType": "Block",
										"src": "3558:85:17",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:17",
													"nodeType": "YulBlock",
													"src": "3593:44:17",
													"statements": [
														{
															"nativeSrc": "3607:20:17",
															"nodeType": "YulAssignment",
															"src": "3607:20:17",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:17",
																"nodeType": "YulIdentifier",
																"src": "3617:10:17"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:17"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2273,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:17",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2269,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:17",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2275,
												"nodeType": "InlineAssembly",
												"src": "3568:69:17"
											}
										]
									},
									"documentation": {
										"id": 2267,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:17",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "3491:20:17",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2268,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:17"
									},
									"returnParameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "3536:20:17",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2197_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2272,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2271,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2197,
														"src": "3536:10:17"
													},
													"referencedDeclaration": 2197,
													"src": "3536:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2197_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:17"
									},
									"scope": 2300,
									"src": "3468:175:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2287,
										"nodeType": "Block",
										"src": "3818:79:17",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:17",
													"nodeType": "YulBlock",
													"src": "3853:38:17",
													"statements": [
														{
															"nativeSrc": "3867:14:17",
															"nodeType": "YulAssignment",
															"src": "3867:14:17",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:17",
																"nodeType": "YulIdentifier",
																"src": "3877:4:17"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:17"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2284,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:17",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2280,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:17",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2286,
												"nodeType": "InlineAssembly",
												"src": "3828:63:17"
											}
										]
									},
									"documentation": {
										"id": 2278,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:17",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "3760:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2279,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:17"
									},
									"returnParameters": {
										"id": 2285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2284,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "3797:19:17",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2200_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2283,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2282,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2200,
														"src": "3797:9:17"
													},
													"referencedDeclaration": 2200,
													"src": "3797:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2200_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:17"
									},
									"scope": 2300,
									"src": "3738:159:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2298,
										"nodeType": "Block",
										"src": "4094:85:17",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:17",
													"nodeType": "YulBlock",
													"src": "4129:44:17",
													"statements": [
														{
															"nativeSrc": "4143:20:17",
															"nodeType": "YulAssignment",
															"src": "4143:20:17",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:17",
																"nodeType": "YulIdentifier",
																"src": "4153:10:17"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:17"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2295,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:17",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2291,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:17",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2297,
												"nodeType": "InlineAssembly",
												"src": "4104:69:17"
											}
										]
									},
									"documentation": {
										"id": 2289,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:17",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "4029:19:17",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2290,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:17"
									},
									"returnParameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "4073:19:17",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2200_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2294,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2293,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2200,
														"src": "4073:9:17"
													},
													"referencedDeclaration": 2200,
													"src": "4073:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2200_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:17"
									},
									"scope": 2300,
									"src": "4007:172:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2301,
							"src": "1407:2774:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:17"
				},
				"id": 17
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2312
						]
					},
					"id": 2313,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2302,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2303,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:18",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2312,
							"linearizedBaseContracts": [
								2312
							],
							"name": "IERC165",
							"nameLocation": "432:7:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2304,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:18",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 2311,
												"src": "818:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2305,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:18"
									},
									"returnParameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2311,
												"src": "861:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2308,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:18"
									},
									"scope": 2312,
									"src": "791:76:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2313,
							"src": "422:447:18",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:18"
				},
				"id": 18
			},
			"contracts/Swapper.sol": {
				"ast": {
					"absolutePath": "contracts/Swapper.sol",
					"exportedSymbols": {
						"IERC20": [
							1484
						],
						"OwnableUpgradeable": [
							194
						],
						"PausableUpgradeable": [
							852
						],
						"ReentrancyGuardUpgradeable": [
							981
						],
						"SafeERC20": [
							1895
						],
						"Swapper": [
							2914
						],
						"UUPSUpgradeable": [
							630
						]
					},
					"id": 2915,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2314,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:19"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2316,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2915,
							"sourceUnit": 1485,
							"src": "58:70:19",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2315,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1484,
										"src": "66:6:19",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 2318,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2915,
							"sourceUnit": 1896,
							"src": "129:82:19",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2317,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1895,
										"src": "137:9:19",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 2320,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2915,
							"sourceUnit": 195,
							"src": "212:101:19",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2319,
										"name": "OwnableUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 194,
										"src": "220:18:19",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
							"id": 2322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2915,
							"sourceUnit": 853,
							"src": "314:102:19",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2321,
										"name": "PausableUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 852,
										"src": "322:19:19",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
							"id": 2324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2915,
							"sourceUnit": 982,
							"src": "417:116:19",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2323,
										"name": "ReentrancyGuardUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 981,
										"src": "425:26:19",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 2326,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2915,
							"sourceUnit": 631,
							"src": "534:100:19",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2325,
										"name": "UUPSUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 630,
										"src": "542:15:19",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2327,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"660:18:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "660:18:19"
									},
									"id": 2328,
									"nodeType": "InheritanceSpecifier",
									"src": "660:18:19"
								},
								{
									"baseName": {
										"id": 2329,
										"name": "PausableUpgradeable",
										"nameLocations": [
											"684:19:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 852,
										"src": "684:19:19"
									},
									"id": 2330,
									"nodeType": "InheritanceSpecifier",
									"src": "684:19:19"
								},
								{
									"baseName": {
										"id": 2331,
										"name": "ReentrancyGuardUpgradeable",
										"nameLocations": [
											"709:26:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 981,
										"src": "709:26:19"
									},
									"id": 2332,
									"nodeType": "InheritanceSpecifier",
									"src": "709:26:19"
								},
								{
									"baseName": {
										"id": 2333,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"741:15:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "741:15:19"
									},
									"id": 2334,
									"nodeType": "InheritanceSpecifier",
									"src": "741:15:19"
								}
							],
							"canonicalName": "Swapper",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2914,
							"linearizedBaseContracts": [
								2914,
								630,
								1102,
								981,
								852,
								194,
								676,
								448
							],
							"name": "Swapper",
							"nameLocation": "645:7:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2338,
									"libraryName": {
										"id": 2335,
										"name": "SafeERC20",
										"nameLocations": [
											"769:9:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1895,
										"src": "769:9:19"
									},
									"nodeType": "UsingForDirective",
									"src": "763:27:19",
									"typeName": {
										"id": 2337,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2336,
											"name": "IERC20",
											"nameLocations": [
												"783:6:19"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1484,
											"src": "783:6:19"
										},
										"referencedDeclaration": 1484,
										"src": "783:6:19",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1484",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "Swapper.SwapDescription",
									"id": 2347,
									"members": [
										{
											"constant": false,
											"id": 2340,
											"mutability": "mutable",
											"name": "srcToken",
											"nameLocation": "837:8:19",
											"nodeType": "VariableDeclaration",
											"scope": 2347,
											"src": "829:16:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2339,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "829:7:19",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2342,
											"mutability": "mutable",
											"name": "dstToken",
											"nameLocation": "863:8:19",
											"nodeType": "VariableDeclaration",
											"scope": 2347,
											"src": "855:16:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2341,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "855:7:19",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2344,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "889:6:19",
											"nodeType": "VariableDeclaration",
											"scope": 2347,
											"src": "881:14:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2343,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "881:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2346,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "911:4:19",
											"nodeType": "VariableDeclaration",
											"scope": 2347,
											"src": "905:10:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2345,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "905:5:19",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SwapDescription",
									"nameLocation": "803:15:19",
									"nodeType": "StructDefinition",
									"scope": 2914,
									"src": "796:126:19",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "31f7d964",
									"id": 2350,
									"mutability": "constant",
									"name": "NATIVE_TOKEN",
									"nameLocation": "952:12:19",
									"nodeType": "VariableDeclaration",
									"scope": 2914,
									"src": "928:89:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2348,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "928:7:19",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
										"id": 2349,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "975:42:19",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0380fd03",
									"id": 2352,
									"mutability": "mutable",
									"name": "newExchange",
									"nameLocation": "1038:11:19",
									"nodeType": "VariableDeclaration",
									"scope": 2914,
									"src": "1023:26:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2351,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1023:7:19",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5dc0b769",
									"id": 2354,
									"mutability": "mutable",
									"name": "swapAdmin",
									"nameLocation": "1072:9:19",
									"nodeType": "VariableDeclaration",
									"scope": 2914,
									"src": "1056:25:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2353,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1056:7:19",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a4ac0d49",
									"id": 2356,
									"mutability": "mutable",
									"name": "swapFeePercentage",
									"nameLocation": "1102:17:19",
									"nodeType": "VariableDeclaration",
									"scope": 2914,
									"src": "1087:32:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2355,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1087:7:19",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "c9163c3bdf7263acf1bb3d24072cc7da025f7181c31e2edc7e1673edf5e0ca32",
									"id": 2370,
									"name": "Swapped",
									"nameLocation": "1133:7:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2358,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1166:4:19",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "1150:20:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2360,
												"indexed": true,
												"mutability": "mutable",
												"name": "inputToken",
												"nameLocation": "1196:10:19",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "1180:26:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2362,
												"indexed": true,
												"mutability": "mutable",
												"name": "outputToken",
												"nameLocation": "1232:11:19",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "1216:27:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1216:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2364,
												"indexed": false,
												"mutability": "mutable",
												"name": "inputAmount",
												"nameLocation": "1261:11:19",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "1253:19:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1253:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2366,
												"indexed": false,
												"mutability": "mutable",
												"name": "outputAmount",
												"nameLocation": "1290:12:19",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "1282:20:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2368,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1320:3:19",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "1312:11:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1312:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1140:189:19"
									},
									"src": "1127:203:19"
								},
								{
									"anonymous": false,
									"eventSelector": "44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e339",
									"id": 2374,
									"name": "AdminAdded",
									"nameLocation": "1342:10:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2372,
												"indexed": true,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1369:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2374,
												"src": "1353:21:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1353:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1352:23:19"
									},
									"src": "1336:40:19"
								},
								{
									"anonymous": false,
									"eventSelector": "a3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f",
									"id": 2378,
									"name": "AdminRemoved",
									"nameLocation": "1387:12:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2376,
												"indexed": true,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1416:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "1400:21:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:23:19"
									},
									"src": "1381:42:19"
								},
								{
									"anonymous": false,
									"eventSelector": "382455f3b749abde7721258dcfa10a22f30d4a28c69151a002dcbd8d1462e4f2",
									"id": 2382,
									"name": "SwapFeeUpdated",
									"nameLocation": "1434:14:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2380,
												"indexed": false,
												"mutability": "mutable",
												"name": "newFeePercentage",
												"nameLocation": "1457:16:19",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "1449:24:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1449:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1448:26:19"
									},
									"src": "1428:47:19"
								},
								{
									"body": {
										"id": 2393,
										"nodeType": "Block",
										"src": "1502:88:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2385,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1521:3:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1525:6:19",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1521:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2387,
																"name": "swapAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2354,
																"src": "1535:9:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1521:23:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420616e2061646d696e",
															"id": 2389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1547:24:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																"typeString": "literal_string \"Caller is not an admin\""
															},
															"value": "Caller is not an admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																"typeString": "literal_string \"Caller is not an admin\""
															}
														],
														"id": 2384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1512:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1512:60:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2391,
												"nodeType": "ExpressionStatement",
												"src": "1512:60:19"
											},
											{
												"id": 2392,
												"nodeType": "PlaceholderStatement",
												"src": "1582:1:19"
											}
										]
									},
									"id": 2394,
									"name": "onlyAdmin",
									"nameLocation": "1490:9:19",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1499:2:19"
									},
									"src": "1481:109:19",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2423,
										"nodeType": "Block",
										"src": "1677:227:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2402,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1702:3:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1706:6:19",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1702:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2401,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1687:14:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1687:26:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2405,
												"nodeType": "ExpressionStatement",
												"src": "1687:26:19"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2406,
														"name": "__Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "1723:15:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1723:17:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2408,
												"nodeType": "ExpressionStatement",
												"src": "1723:17:19"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2409,
														"name": "__ReentrancyGuard_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "1750:22:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:24:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2411,
												"nodeType": "ExpressionStatement",
												"src": "1750:24:19"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2412,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "1786:22:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1786:24:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2414,
												"nodeType": "ExpressionStatement",
												"src": "1786:24:19"
											},
											{
												"expression": {
													"id": 2417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2415,
														"name": "swapFeePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2356,
														"src": "1820:17:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3530",
														"id": 2416,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1840:2:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_50_by_1",
															"typeString": "int_const 50"
														},
														"value": "50"
													},
													"src": "1820:22:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2418,
												"nodeType": "ExpressionStatement",
												"src": "1820:22:19"
											},
											{
												"expression": {
													"id": 2421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2419,
														"name": "swapAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2354,
														"src": "1875:9:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2420,
														"name": "_swapAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2396,
														"src": "1887:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1875:22:19",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2422,
												"nodeType": "ExpressionStatement",
												"src": "1875:22:19"
											}
										]
									},
									"functionSelector": "c4d66de8",
									"id": 2424,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2399,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2398,
												"name": "initializer",
												"nameLocations": [
													"1661:11:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "1661:11:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "1661:11:19"
										}
									],
									"name": "initialize",
									"nameLocation": "1605:10:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "_swapAdmin",
												"nameLocation": "1624:10:19",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "1616:18:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:20:19"
									},
									"returnParameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1677:0:19"
									},
									"scope": 2914,
									"src": "1596:308:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										584
									],
									"body": {
										"id": 2432,
										"nodeType": "Block",
										"src": "2020:2:19",
										"statements": []
									},
									"id": 2433,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2430,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2429,
												"name": "onlyOwner",
												"nameLocations": [
													"2006:9:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "2006:9:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "2006:9:19"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "1919:17:19",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2428,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1989:8:19"
									},
									"parameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1945:17:19",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "1937:25:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1937:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1936:27:19"
									},
									"returnParameters": {
										"id": 2431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2020:0:19"
									},
									"scope": 2914,
									"src": "1910:112:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2436,
										"nodeType": "Block",
										"src": "2055:2:19",
										"statements": []
									},
									"id": 2437,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2035:2:19"
									},
									"returnParameters": {
										"id": 2435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2055:0:19"
									},
									"scope": 2914,
									"src": "2028:29:19",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2634,
										"nodeType": "Block",
										"src": "2197:1677:19",
										"statements": [
											{
												"assignments": [
													2450
												],
												"declarations": [
													{
														"constant": false,
														"id": 2450,
														"mutability": "mutable",
														"name": "swapDesc",
														"nameLocation": "2230:8:19",
														"nodeType": "VariableDeclaration",
														"scope": 2634,
														"src": "2207:31:19",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
															"typeString": "struct Swapper.SwapDescription"
														},
														"typeName": {
															"id": 2449,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2448,
																"name": "SwapDescription",
																"nameLocations": [
																	"2207:15:19"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2347,
																"src": "2207:15:19"
															},
															"referencedDeclaration": 2347,
															"src": "2207:15:19",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SwapDescription_$2347_storage_ptr",
																"typeString": "struct Swapper.SwapDescription"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2454,
												"initialValue": {
													"arguments": [
														{
															"id": 2452,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2439,
															"src": "2249:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 2451,
														"name": "_decode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2766,
														"src": "2241:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_struct$_SwapDescription_$2347_memory_ptr_$",
															"typeString": "function (bytes calldata) pure returns (struct Swapper.SwapDescription memory)"
														}
													},
													"id": 2453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2241:14:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
														"typeString": "struct Swapper.SwapDescription memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2207:48:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2456,
																	"name": "swapDesc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2450,
																	"src": "2273:8:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
																		"typeString": "struct Swapper.SwapDescription memory"
																	}
																},
																"id": 2457,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2282:6:19",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2344,
																"src": "2273:15:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2292:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2273:20:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616d6f756e74203d3d2030",
															"id": 2460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2295:13:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55c2b76370d5d427f52c6d12dc9e48fce27eadb826533977b2f868874e0f017c",
																"typeString": "literal_string \"amount == 0\""
															},
															"value": "amount == 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55c2b76370d5d427f52c6d12dc9e48fce27eadb826533977b2f868874e0f017c",
																"typeString": "literal_string \"amount == 0\""
															}
														],
														"id": 2455,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2265:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2265:44:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2462,
												"nodeType": "ExpressionStatement",
												"src": "2265:44:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2464,
																		"name": "swapDesc",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2450,
																		"src": "2340:8:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
																			"typeString": "struct Swapper.SwapDescription memory"
																		}
																	},
																	"id": 2465,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2349:8:19",
																	"memberName": "srcToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2340,
																	"src": "2340:17:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2369:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2361:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2466,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2361:7:19",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2361:10:19",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2340:31:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2471,
																		"name": "swapDesc",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2450,
																		"src": "2375:8:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
																			"typeString": "struct Swapper.SwapDescription memory"
																		}
																	},
																	"id": 2472,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2384:8:19",
																	"memberName": "dstToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2342,
																	"src": "2375:17:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2404:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2396:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2473,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2396:7:19",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2396:10:19",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2375:31:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2340:66:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420746f6b656e73",
															"id": 2479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2420:16:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_62cac98c7f03b33e8dddfe58c00dd8211de9f9167c478e0f775c21754a69135a",
																"typeString": "literal_string \"invalid tokens\""
															},
															"value": "invalid tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_62cac98c7f03b33e8dddfe58c00dd8211de9f9167c478e0f775c21754a69135a",
																"typeString": "literal_string \"invalid tokens\""
															}
														],
														"id": 2463,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2319:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2319:127:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2481,
												"nodeType": "ExpressionStatement",
												"src": "2319:127:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2483,
																	"name": "swapDesc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2450,
																	"src": "2477:8:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
																		"typeString": "struct Swapper.SwapDescription memory"
																	}
																},
																"id": 2484,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2486:8:19",
																"memberName": "srcToken",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2340,
																"src": "2477:17:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 2485,
																	"name": "swapDesc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2450,
																	"src": "2498:8:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
																		"typeString": "struct Swapper.SwapDescription memory"
																	}
																},
																"id": 2486,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2507:8:19",
																"memberName": "dstToken",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2342,
																"src": "2498:17:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2477:38:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73726320746f6b656e203d3d2064737420746f6b656e",
															"id": 2488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2529:24:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9287f6fe4436a085162c38b7c9e1f89cec60c0173d9388e22663028de9128448",
																"typeString": "literal_string \"src token == dst token\""
															},
															"value": "src token == dst token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9287f6fe4436a085162c38b7c9e1f89cec60c0173d9388e22663028de9128448",
																"typeString": "literal_string \"src token == dst token\""
															}
														],
														"id": 2482,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2456:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2456:107:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2490,
												"nodeType": "ExpressionStatement",
												"src": "2456:107:19"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2491,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2577:3:19",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2581:6:19",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2577:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"id": 2495,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2599:4:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Swapper_$2914",
																	"typeString": "contract Swapper"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Swapper_$2914",
																	"typeString": "contract Swapper"
																}
															],
															"id": 2494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2591:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2591:7:19",
																"typeDescriptions": {}
															}
														},
														"id": 2496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2591:13:19",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2577:27:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2507,
												"nodeType": "IfStatement",
												"src": "2573:110:19",
												"trueBody": {
													"id": 2506,
													"nodeType": "Block",
													"src": "2606:77:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2499,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2628:3:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2632:6:19",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2628:10:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 2501,
																			"name": "_swapper",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2441,
																			"src": "2642:8:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "2628:22:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "63616c6c657220213d2073776170706572",
																		"id": 2503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2652:19:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_797f8a7eb79a2e9138e391d6393592c240f4354ba78950ece5fed1af0d3777f6",
																			"typeString": "literal_string \"caller != swapper\""
																		},
																		"value": "caller != swapper"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_797f8a7eb79a2e9138e391d6393592c240f4354ba78950ece5fed1af0d3777f6",
																			"typeString": "literal_string \"caller != swapper\""
																		}
																	],
																	"id": 2498,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2620:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2620:52:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2505,
															"nodeType": "ExpressionStatement",
															"src": "2620:52:19"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2508,
															"name": "swapDesc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2450,
															"src": "2696:8:19",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
																"typeString": "struct Swapper.SwapDescription memory"
															}
														},
														"id": 2509,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2705:8:19",
														"memberName": "srcToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2340,
														"src": "2696:17:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 2510,
														"name": "NATIVE_TOKEN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2350,
														"src": "2717:12:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2696:33:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2560,
													"nodeType": "Block",
													"src": "2822:387:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2523,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2844:3:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2848:5:19",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "2844:9:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2857:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2844:14:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "6d73672e76616c756520213d2030",
																		"id": 2527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2860:16:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_4aaab178ce62c9aa293f84821bdadc1685de02663fdcdb8a26121ae462ae0e7f",
																			"typeString": "literal_string \"msg.value != 0\""
																		},
																		"value": "msg.value != 0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_4aaab178ce62c9aa293f84821bdadc1685de02663fdcdb8a26121ae462ae0e7f",
																			"typeString": "literal_string \"msg.value != 0\""
																		}
																	],
																	"id": 2522,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2836:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2836:41:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2529,
															"nodeType": "ExpressionStatement",
															"src": "2836:41:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2531,
																				"name": "swapDesc",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2450,
																				"src": "2916:8:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
																					"typeString": "struct Swapper.SwapDescription memory"
																				}
																			},
																			"id": 2532,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2925:6:19",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2344,
																			"src": "2916:15:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2538,
																					"name": "_swapper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2441,
																					"src": "2991:8:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 2534,
																								"name": "swapDesc",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2450,
																								"src": "2962:8:19",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
																									"typeString": "struct Swapper.SwapDescription memory"
																								}
																							},
																							"id": 2535,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "2971:8:19",
																							"memberName": "srcToken",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2340,
																							"src": "2962:17:19",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2533,
																						"name": "IERC20",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1484,
																						"src": "2955:6:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20_$1484_$",
																							"typeString": "type(contract IERC20)"
																						}
																					},
																					"id": 2536,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2955:25:19",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1484",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2537,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2981:9:19",
																				"memberName": "balanceOf",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1441,
																				"src": "2955:35:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address) view external returns (uint256)"
																				}
																			},
																			"id": 2539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2955:45:19",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2916:84:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "696e73756666696369656e742062616c616e6365",
																		"id": 2541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3018:22:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
																			"typeString": "literal_string \"insufficient balance\""
																		},
																		"value": "insufficient balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
																			"typeString": "literal_string \"insufficient balance\""
																		}
																	],
																	"id": 2530,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2891:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2891:163:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2543,
															"nodeType": "ExpressionStatement",
															"src": "2891:163:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2545,
																			"name": "swapDesc",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2450,
																			"src": "3082:8:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
																				"typeString": "struct Swapper.SwapDescription memory"
																			}
																		},
																		"id": 2546,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3091:8:19",
																		"memberName": "srcToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2340,
																		"src": "3082:17:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2547,
																		"name": "_swapper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2441,
																		"src": "3101:8:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2548,
																			"name": "swapDesc",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2450,
																			"src": "3111:8:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
																				"typeString": "struct Swapper.SwapDescription memory"
																			}
																		},
																		"id": 2549,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3120:6:19",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2344,
																		"src": "3111:15:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2544,
																	"name": "_transferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2895,
																	"src": "3068:13:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3068:59:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2551,
															"nodeType": "ExpressionStatement",
															"src": "3068:59:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2553,
																			"name": "swapDesc",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2450,
																			"src": "3150:8:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
																				"typeString": "struct Swapper.SwapDescription memory"
																			}
																		},
																		"id": 2554,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3159:8:19",
																		"memberName": "srcToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2340,
																		"src": "3150:17:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2555,
																		"name": "newExchange",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2352,
																		"src": "3169:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2556,
																			"name": "swapDesc",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2450,
																			"src": "3182:8:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
																				"typeString": "struct Swapper.SwapDescription memory"
																			}
																		},
																		"id": 2557,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3191:6:19",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2344,
																		"src": "3182:15:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2552,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2855,
																	"src": "3141:8:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3141:57:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2559,
															"nodeType": "ExpressionStatement",
															"src": "3141:57:19"
														}
													]
												},
												"id": 2561,
												"nodeType": "IfStatement",
												"src": "2692:517:19",
												"trueBody": {
													"id": 2521,
													"nodeType": "Block",
													"src": "2731:85:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2513,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2753:3:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2757:5:19",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "2753:9:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 2515,
																				"name": "swapDesc",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2450,
																				"src": "2766:8:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
																					"typeString": "struct Swapper.SwapDescription memory"
																				}
																			},
																			"id": 2516,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2775:6:19",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2344,
																			"src": "2766:15:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2753:28:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "6d73672e76616c756520213d20616d6f756e74",
																		"id": 2518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2783:21:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ce6c4ea39c501f8c7c12a9194d99cb871ed34c46e9c10eeac69413f219aa96cd",
																			"typeString": "literal_string \"msg.value != amount\""
																		},
																		"value": "msg.value != amount"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ce6c4ea39c501f8c7c12a9194d99cb871ed34c46e9c10eeac69413f219aa96cd",
																			"typeString": "literal_string \"msg.value != amount\""
																		}
																	],
																	"id": 2512,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2745:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2745:60:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2520,
															"nodeType": "ExpressionStatement",
															"src": "2745:60:19"
														}
													]
												}
											},
											{
												"assignments": [
													2563
												],
												"declarations": [
													{
														"constant": false,
														"id": 2563,
														"mutability": "mutable",
														"name": "swapOutput",
														"nameLocation": "3227:10:19",
														"nodeType": "VariableDeclaration",
														"scope": 2634,
														"src": "3219:18:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2562,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3219:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2567,
												"initialValue": {
													"arguments": [
														{
															"id": 2565,
															"name": "swapDesc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2450,
															"src": "3246:8:19",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
																"typeString": "struct Swapper.SwapDescription memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
																"typeString": "struct Swapper.SwapDescription memory"
															}
														],
														"id": 2564,
														"name": "_swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2819,
														"src": "3240:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SwapDescription_$2347_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct Swapper.SwapDescription memory) returns (uint256)"
														}
													},
													"id": 2566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3240:15:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3219:36:19"
											},
											{
												"assignments": [
													2569
												],
												"declarations": [
													{
														"constant": false,
														"id": 2569,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "3273:3:19",
														"nodeType": "VariableDeclaration",
														"scope": 2634,
														"src": "3265:11:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2568,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3265:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2576,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2570,
																	"name": "swapOutput",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2563,
																	"src": "3280:10:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2571,
																	"name": "swapFeePercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2356,
																	"src": "3293:17:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3280:30:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2573,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3279:32:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 2574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3314:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "3279:40:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3265:54:19"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2577,
															"name": "swapDesc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2450,
															"src": "3334:8:19",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
																"typeString": "struct Swapper.SwapDescription memory"
															}
														},
														"id": 2578,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3343:8:19",
														"memberName": "dstToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2342,
														"src": "3334:17:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 2579,
														"name": "NATIVE_TOKEN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2350,
														"src": "3355:12:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3334:33:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2620,
													"nodeType": "Block",
													"src": "3516:165:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2603,
																			"name": "swapDesc",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2450,
																			"src": "3540:8:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
																				"typeString": "struct Swapper.SwapDescription memory"
																			}
																		},
																		"id": 2604,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3549:8:19",
																		"memberName": "dstToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2342,
																		"src": "3540:17:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2605,
																		"name": "swapAdmin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2354,
																		"src": "3560:9:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2606,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2569,
																		"src": "3571:3:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2602,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2873,
																	"src": "3530:9:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3530:45:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2608,
															"nodeType": "ExpressionStatement",
															"src": "3530:45:19"
														},
														{
															"expression": {
																"id": 2611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2609,
																	"name": "swapOutput",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2563,
																	"src": "3589:10:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 2610,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2569,
																	"src": "3603:3:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3589:17:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2612,
															"nodeType": "ExpressionStatement",
															"src": "3589:17:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2614,
																			"name": "swapDesc",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2450,
																			"src": "3630:8:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
																				"typeString": "struct Swapper.SwapDescription memory"
																			}
																		},
																		"id": 2615,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3639:8:19",
																		"memberName": "dstToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2342,
																		"src": "3630:17:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2616,
																		"name": "_swapper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2441,
																		"src": "3649:8:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2617,
																		"name": "swapOutput",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2563,
																		"src": "3659:10:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2613,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2873,
																	"src": "3620:9:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3620:50:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2619,
															"nodeType": "ExpressionStatement",
															"src": "3620:50:19"
														}
													]
												},
												"id": 2621,
												"nodeType": "IfStatement",
												"src": "3330:351:19",
												"trueBody": {
													"id": 2601,
													"nodeType": "Block",
													"src": "3369:141:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2586,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2569,
																		"src": "3412:3:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2583,
																				"name": "swapAdmin",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2354,
																				"src": "3392:9:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3383:8:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 2581,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3383:8:19",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3383:19:19",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 2585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3403:8:19",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "3383:28:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3383:33:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2588,
															"nodeType": "ExpressionStatement",
															"src": "3383:33:19"
														},
														{
															"expression": {
																"id": 2591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2589,
																	"name": "swapOutput",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2563,
																	"src": "3430:10:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 2590,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2569,
																	"src": "3444:3:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3430:17:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2592,
															"nodeType": "ExpressionStatement",
															"src": "3430:17:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2598,
																		"name": "swapOutput",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2563,
																		"src": "3488:10:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2595,
																				"name": "_swapper",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2441,
																				"src": "3469:8:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3461:8:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 2593,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3461:8:19",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3461:17:19",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 2597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3479:8:19",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "3461:26:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3461:38:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2600,
															"nodeType": "ExpressionStatement",
															"src": "3461:38:19"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2623,
															"name": "_swapper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2441,
															"src": "3717:8:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2624,
																"name": "swapDesc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2450,
																"src": "3739:8:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
																	"typeString": "struct Swapper.SwapDescription memory"
																}
															},
															"id": 2625,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3748:8:19",
															"memberName": "srcToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2340,
															"src": "3739:17:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2626,
																"name": "swapDesc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2450,
																"src": "3770:8:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
																	"typeString": "struct Swapper.SwapDescription memory"
																}
															},
															"id": 2627,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3779:8:19",
															"memberName": "dstToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2342,
															"src": "3770:17:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2628,
																"name": "swapDesc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2450,
																"src": "3801:8:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
																	"typeString": "struct Swapper.SwapDescription memory"
																}
															},
															"id": 2629,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3810:6:19",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2344,
															"src": "3801:15:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2630,
															"name": "swapOutput",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2563,
															"src": "3830:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2631,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2569,
															"src": "3854:3:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2622,
														"name": "Swapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2370,
														"src": "3696:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,uint256)"
														}
													},
													"id": 2632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3696:171:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2633,
												"nodeType": "EmitStatement",
												"src": "3691:176:19"
											}
										]
									},
									"functionSelector": "ae0caeb3",
									"id": 2635,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2444,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2443,
												"name": "whenNotPaused",
												"nameLocations": [
													"2158:13:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 754,
												"src": "2158:13:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "2158:13:19"
										},
										{
											"id": 2446,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2445,
												"name": "nonReentrant",
												"nameLocations": [
													"2180:12:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 921,
												"src": "2180:12:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "2180:12:19"
										}
									],
									"name": "swap",
									"nameLocation": "2072:4:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2439,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "2092:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2635,
												"src": "2077:20:19",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2438,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2077:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2441,
												"mutability": "mutable",
												"name": "_swapper",
												"nameLocation": "2107:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 2635,
												"src": "2099:16:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2099:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2076:40:19"
									},
									"returnParameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2197:0:19"
									},
									"scope": 2914,
									"src": "2063:1811:19",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2650,
										"nodeType": "Block",
										"src": "3949:238:19",
										"statements": [
											{
												"expression": {
													"id": 2644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2642,
														"name": "swapFeePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2356,
														"src": "4095:17:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2643,
														"name": "_newFeePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2637,
														"src": "4115:17:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4095:37:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2645,
												"nodeType": "ExpressionStatement",
												"src": "4095:37:19"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2647,
															"name": "_newFeePercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2637,
															"src": "4162:17:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2646,
														"name": "SwapFeeUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2382,
														"src": "4147:14:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4147:33:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2649,
												"nodeType": "EmitStatement",
												"src": "4142:38:19"
											}
										]
									},
									"functionSelector": "bf16f65a",
									"id": 2651,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2640,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2639,
												"name": "onlyOwner",
												"nameLocations": [
													"3939:9:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3939:9:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "3939:9:19"
										}
									],
									"name": "updateSwapFee",
									"nameLocation": "3889:13:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2637,
												"mutability": "mutable",
												"name": "_newFeePercentage",
												"nameLocation": "3911:17:19",
												"nodeType": "VariableDeclaration",
												"scope": 2651,
												"src": "3903:25:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3903:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3902:27:19"
									},
									"returnParameters": {
										"id": 2641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3949:0:19"
									},
									"scope": 2914,
									"src": "3880:307:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2679,
										"nodeType": "Block",
										"src": "4259:153:19",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2658,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2653,
														"src": "4273:6:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 2659,
														"name": "NATIVE_TOKEN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2350,
														"src": "4283:12:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4273:22:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2668,
												"nodeType": "IfStatement",
												"src": "4269:81:19",
												"trueBody": {
													"id": 2667,
													"nodeType": "Block",
													"src": "4297:53:19",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2663,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4326:4:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Swapper_$2914",
																				"typeString": "contract Swapper"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Swapper_$2914",
																				"typeString": "contract Swapper"
																			}
																		],
																		"id": 2662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4318:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2661,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4318:7:19",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4318:13:19",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4332:7:19",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4318:21:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2657,
															"id": 2666,
															"nodeType": "Return",
															"src": "4311:28:19"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2675,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4399:4:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Swapper_$2914",
																		"typeString": "contract Swapper"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Swapper_$2914",
																		"typeString": "contract Swapper"
																	}
																],
																"id": 2674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4391:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2673,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4391:7:19",
																	"typeDescriptions": {}
																}
															},
															"id": 2676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4391:13:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2670,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2653,
																	"src": "4373:6:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2669,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1484,
																"src": "4366:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1484_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4366:14:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1484",
																"typeString": "contract IERC20"
															}
														},
														"id": 2672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4381:9:19",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1441,
														"src": "4366:24:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4366:39:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2657,
												"id": 2678,
												"nodeType": "Return",
												"src": "4359:46:19"
											}
										]
									},
									"functionSelector": "f8b2cb4f",
									"id": 2680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "4202:10:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2653,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "4221:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "4213:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4212:16:19"
									},
									"returnParameters": {
										"id": 2657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "4250:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4250:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4249:9:19"
									},
									"scope": 2914,
									"src": "4193:219:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2705,
										"nodeType": "Block",
										"src": "4471:132:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2688,
																"name": "_admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2682,
																"src": "4489:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4507:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4499:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2689,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4499:7:19",
																		"typeDescriptions": {}
																	}
																},
																"id": 2692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4499:10:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4489:20:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646d696e2061646472657373",
															"id": 2694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4511:23:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653",
																"typeString": "literal_string \"Invalid admin address\""
															},
															"value": "Invalid admin address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653",
																"typeString": "literal_string \"Invalid admin address\""
															}
														],
														"id": 2687,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4481:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4481:54:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2696,
												"nodeType": "ExpressionStatement",
												"src": "4481:54:19"
											},
											{
												"expression": {
													"id": 2699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2697,
														"name": "swapAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2354,
														"src": "4545:9:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2698,
														"name": "_admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2682,
														"src": "4557:6:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4545:18:19",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2700,
												"nodeType": "ExpressionStatement",
												"src": "4545:18:19"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2702,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2682,
															"src": "4589:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2701,
														"name": "AdminAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2374,
														"src": "4578:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4578:18:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2704,
												"nodeType": "EmitStatement",
												"src": "4573:23:19"
											}
										]
									},
									"functionSelector": "70480275",
									"id": 2706,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2685,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2684,
												"name": "onlyOwner",
												"nameLocations": [
													"4461:9:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "4461:9:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "4461:9:19"
										}
									],
									"name": "addAdmin",
									"nameLocation": "4427:8:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2682,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "4444:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2706,
												"src": "4436:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4436:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4435:16:19"
									},
									"returnParameters": {
										"id": 2686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4471:0:19"
									},
									"scope": 2914,
									"src": "4418:185:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2727,
										"nodeType": "Block",
										"src": "4674:111:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2714,
																"name": "_newExchange",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2708,
																"src": "4692:12:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4716:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4708:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2715,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4708:7:19",
																		"typeDescriptions": {}
																	}
																},
																"id": 2718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4708:10:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4692:26:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7a65726f206164647265737320706172616d73",
															"id": 2720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4720:21:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f70c5f7c2b08d32da6024b33d1b4b5ee6bcf0e8e8a5ac32fe66bf794c4d8e476",
																"typeString": "literal_string \"zero address params\""
															},
															"value": "zero address params"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f70c5f7c2b08d32da6024b33d1b4b5ee6bcf0e8e8a5ac32fe66bf794c4d8e476",
																"typeString": "literal_string \"zero address params\""
															}
														],
														"id": 2713,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4684:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4684:58:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2722,
												"nodeType": "ExpressionStatement",
												"src": "4684:58:19"
											},
											{
												"expression": {
													"id": 2725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2723,
														"name": "newExchange",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2352,
														"src": "4752:11:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2724,
														"name": "_newExchange",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2708,
														"src": "4766:12:19",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4752:26:19",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2726,
												"nodeType": "ExpressionStatement",
												"src": "4752:26:19"
											}
										]
									},
									"functionSelector": "540907bb",
									"id": 2728,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2711,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2710,
												"name": "onlyOwner",
												"nameLocations": [
													"4664:9:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "4664:9:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "4664:9:19"
										}
									],
									"name": "setNewExchange",
									"nameLocation": "4618:14:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "_newExchange",
												"nameLocation": "4641:12:19",
												"nodeType": "VariableDeclaration",
												"scope": 2728,
												"src": "4633:20:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4633:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4632:22:19"
									},
									"returnParameters": {
										"id": 2712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4674:0:19"
									},
									"scope": 2914,
									"src": "4609:176:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2765,
										"nodeType": "Block",
										"src": "4905:200:19",
										"statements": [
											{
												"assignments": [
													2737,
													2739,
													2741,
													2743
												],
												"declarations": [
													{
														"constant": false,
														"id": 2737,
														"mutability": "mutable",
														"name": "a",
														"nameLocation": "4924:1:19",
														"nodeType": "VariableDeclaration",
														"scope": 2765,
														"src": "4916:9:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2736,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4916:7:19",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2739,
														"mutability": "mutable",
														"name": "b",
														"nameLocation": "4935:1:19",
														"nodeType": "VariableDeclaration",
														"scope": 2765,
														"src": "4927:9:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2738,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4927:7:19",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2741,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "4946:1:19",
														"nodeType": "VariableDeclaration",
														"scope": 2765,
														"src": "4938:9:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2740,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4938:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2743,
														"mutability": "mutable",
														"name": "d",
														"nameLocation": "4962:1:19",
														"nodeType": "VariableDeclaration",
														"scope": 2765,
														"src": "4949:14:19",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2742,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4949:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2757,
												"initialValue": {
													"arguments": [
														{
															"id": 2746,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2730,
															"src": "4991:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"components": [
																{
																	"id": 2748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5011:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2747,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5011:7:19",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 2750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5020:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2749,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5020:7:19",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 2752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5029:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2751,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5029:7:19",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 2754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5038:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2753,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "5038:5:19",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 2755,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5010:34:19",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$",
																"typeString": "tuple(type(address),type(address),type(uint256),type(bytes storage pointer))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$",
																"typeString": "tuple(type(address),type(address),type(uint256),type(bytes storage pointer))"
															}
														],
														"expression": {
															"id": 2744,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4967:3:19",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 2745,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4971:6:19",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "4967:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 2756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4967:87:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(address payable,address payable,uint256,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4915:139:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2759,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2737,
															"src": "5087:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2760,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2739,
															"src": "5090:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2761,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2741,
															"src": "5093:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2762,
															"name": "d",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2743,
															"src": "5096:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2758,
														"name": "SwapDescription",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2347,
														"src": "5071:15:19",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_SwapDescription_$2347_storage_ptr_$",
															"typeString": "type(struct Swapper.SwapDescription storage pointer)"
														}
													},
													"id": 2763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5071:27:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
														"typeString": "struct Swapper.SwapDescription memory"
													}
												},
												"functionReturnParameters": 2735,
												"id": 2764,
												"nodeType": "Return",
												"src": "5064:34:19"
											}
										]
									},
									"id": 2766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_decode",
									"nameLocation": "4801:7:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2730,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "4824:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "4809:20:19",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2729,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4809:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4808:22:19"
									},
									"returnParameters": {
										"id": 2735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "4877:22:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
													"typeString": "struct Swapper.SwapDescription"
												},
												"typeName": {
													"id": 2733,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2732,
														"name": "SwapDescription",
														"nameLocations": [
															"4877:15:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2347,
														"src": "4877:15:19"
													},
													"referencedDeclaration": 2347,
													"src": "4877:15:19",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SwapDescription_$2347_storage_ptr",
														"typeString": "struct Swapper.SwapDescription"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4876:24:19"
									},
									"scope": 2914,
									"src": "4792:313:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2818,
										"nodeType": "Block",
										"src": "5186:389:19",
										"statements": [
											{
												"assignments": [
													2775
												],
												"declarations": [
													{
														"constant": false,
														"id": 2775,
														"mutability": "mutable",
														"name": "balanceBeforeSwap",
														"nameLocation": "5204:17:19",
														"nodeType": "VariableDeclaration",
														"scope": 2818,
														"src": "5196:25:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2774,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5196:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2780,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2777,
																"name": "_swapDesc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2769,
																"src": "5235:9:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
																	"typeString": "struct Swapper.SwapDescription memory"
																}
															},
															"id": 2778,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5245:8:19",
															"memberName": "dstToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2342,
															"src": "5235:18:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2776,
														"name": "getBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2680,
														"src": "5224:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 2779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5224:30:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5196:58:19"
											},
											{
												"assignments": [
													2782,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2782,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5270:7:19",
														"nodeType": "VariableDeclaration",
														"scope": 2818,
														"src": "5265:12:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2781,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5265:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2791,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2788,
																"name": "_swapDesc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2769,
																"src": "5318:9:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
																	"typeString": "struct Swapper.SwapDescription memory"
																}
															},
															"id": 2789,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5328:4:19",
															"memberName": "data",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2346,
															"src": "5318:14:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2783,
																"name": "newExchange",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2352,
																"src": "5283:11:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5295:4:19",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5283:16:19",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 2785,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5307:3:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5311:5:19",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "5307:9:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5283:34:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5283:50:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5264:69:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2793,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2782,
															"src": "5351:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73776170206661696c6564",
															"id": 2794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5360:13:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ee78873f086b2b9a8a45bd119503afa5de538f219e8ce800bdc0024dff6b2f8a",
																"typeString": "literal_string \"swap failed\""
															},
															"value": "swap failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ee78873f086b2b9a8a45bd119503afa5de538f219e8ce800bdc0024dff6b2f8a",
																"typeString": "literal_string \"swap failed\""
															}
														],
														"id": 2792,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5343:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5343:31:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2796,
												"nodeType": "ExpressionStatement",
												"src": "5343:31:19"
											},
											{
												"assignments": [
													2798
												],
												"declarations": [
													{
														"constant": false,
														"id": 2798,
														"mutability": "mutable",
														"name": "balanceAfterSwap",
														"nameLocation": "5392:16:19",
														"nodeType": "VariableDeclaration",
														"scope": 2818,
														"src": "5384:24:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2797,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5384:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2803,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2800,
																"name": "_swapDesc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2769,
																"src": "5422:9:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
																	"typeString": "struct Swapper.SwapDescription memory"
																}
															},
															"id": 2801,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5432:8:19",
															"memberName": "dstToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2342,
															"src": "5422:18:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2799,
														"name": "getBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2680,
														"src": "5411:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 2802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5411:30:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5384:57:19"
											},
											{
												"assignments": [
													2805
												],
												"declarations": [
													{
														"constant": false,
														"id": 2805,
														"mutability": "mutable",
														"name": "swapOutput",
														"nameLocation": "5459:10:19",
														"nodeType": "VariableDeclaration",
														"scope": 2818,
														"src": "5451:18:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2804,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5451:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2809,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2806,
														"name": "balanceAfterSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2798,
														"src": "5472:16:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2807,
														"name": "balanceBeforeSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2775,
														"src": "5491:17:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5472:36:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5451:57:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2811,
																"name": "swapOutput",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2805,
																"src": "5525:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5539:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5525:15:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2810,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "5518:6:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5518:23:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2815,
												"nodeType": "ExpressionStatement",
												"src": "5518:23:19"
											},
											{
												"expression": {
													"id": 2816,
													"name": "swapOutput",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2805,
													"src": "5558:10:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2773,
												"id": 2817,
												"nodeType": "Return",
												"src": "5551:17:19"
											}
										]
									},
									"id": 2819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_swap",
									"nameLocation": "5120:5:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2769,
												"mutability": "mutable",
												"name": "_swapDesc",
												"nameLocation": "5149:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2819,
												"src": "5126:32:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SwapDescription_$2347_memory_ptr",
													"typeString": "struct Swapper.SwapDescription"
												},
												"typeName": {
													"id": 2768,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2767,
														"name": "SwapDescription",
														"nameLocations": [
															"5126:15:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2347,
														"src": "5126:15:19"
													},
													"referencedDeclaration": 2347,
													"src": "5126:15:19",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SwapDescription_$2347_storage_ptr",
														"typeString": "struct Swapper.SwapDescription"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:34:19"
									},
									"returnParameters": {
										"id": 2773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2819,
												"src": "5177:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5177:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5176:9:19"
									},
									"scope": 2914,
									"src": "5111:464:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2854,
										"nodeType": "Block",
										"src": "5688:199:19",
										"statements": [
											{
												"assignments": [
													2829
												],
												"declarations": [
													{
														"constant": false,
														"id": 2829,
														"mutability": "mutable",
														"name": "allowance",
														"nameLocation": "5706:9:19",
														"nodeType": "VariableDeclaration",
														"scope": 2854,
														"src": "5698:17:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2828,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5698:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2840,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2836,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5751:4:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Swapper_$2914",
																		"typeString": "contract Swapper"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Swapper_$2914",
																		"typeString": "contract Swapper"
																	}
																],
																"id": 2835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5743:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2834,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5743:7:19",
																	"typeDescriptions": {}
																}
															},
															"id": 2837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5743:13:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2838,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2823,
															"src": "5758:8:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2831,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2821,
																	"src": "5725:6:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2830,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1484,
																"src": "5718:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1484_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5718:14:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1484",
																"typeString": "contract IERC20"
															}
														},
														"id": 2833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5733:9:19",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1461,
														"src": "5718:24:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 2839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5718:49:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5698:69:19"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2841,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2829,
														"src": "5781:9:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2842,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2825,
														"src": "5793:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5781:19:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2853,
												"nodeType": "IfStatement",
												"src": "5777:104:19",
												"trueBody": {
													"id": 2852,
													"nodeType": "Block",
													"src": "5802:79:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2848,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2823,
																		"src": "5852:8:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2849,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2825,
																		"src": "5862:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2845,
																				"name": "_token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2821,
																				"src": "5836:6:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2844,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1484,
																			"src": "5829:6:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1484_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 2846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5829:14:19",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1484",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5844:7:19",
																	"memberName": "approve",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1471,
																	"src": "5829:22:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 2850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5829:41:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2851,
															"nodeType": "ExpressionStatement",
															"src": "5829:41:19"
														}
													]
												}
											}
										]
									},
									"id": 2855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "5590:8:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2821,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "5616:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2855,
												"src": "5608:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5608:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2823,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "5640:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 2855,
												"src": "5632:16:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5632:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2825,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5666:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2855,
												"src": "5658:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5658:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5598:81:19"
									},
									"returnParameters": {
										"id": 2827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5688:0:19"
									},
									"scope": 2914,
									"src": "5581:306:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2872,
										"nodeType": "Block",
										"src": "5996:58:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2868,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2859,
															"src": "6034:3:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2869,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2861,
															"src": "6039:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2865,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2857,
																	"src": "6013:6:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2864,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1484,
																"src": "6006:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1484_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6006:14:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1484",
																"typeString": "contract IERC20"
															}
														},
														"id": 2867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6021:12:19",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1531,
														"src": "6006:27:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1484_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1484_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6006:41:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2871,
												"nodeType": "ExpressionStatement",
												"src": "6006:41:19"
											}
										]
									},
									"id": 2873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5902:9:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2857,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "5929:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2873,
												"src": "5921:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5921:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2859,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "5953:3:19",
												"nodeType": "VariableDeclaration",
												"scope": 2873,
												"src": "5945:11:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5945:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2861,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5974:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2873,
												"src": "5966:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5966:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5911:76:19"
									},
									"returnParameters": {
										"id": 2863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5996:0:19"
									},
									"scope": 2914,
									"src": "5893:161:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2894,
										"nodeType": "Block",
										"src": "6169:79:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2886,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2877,
															"src": "6211:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2889,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6226:4:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Swapper_$2914",
																		"typeString": "contract Swapper"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Swapper_$2914",
																		"typeString": "contract Swapper"
																	}
																],
																"id": 2888,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6218:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2887,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6218:7:19",
																	"typeDescriptions": {}
																}
															},
															"id": 2890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6218:13:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2891,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2879,
															"src": "6233:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2883,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2875,
																	"src": "6186:6:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2882,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1484,
																"src": "6179:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1484_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6179:14:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1484",
																"typeString": "contract IERC20"
															}
														},
														"id": 2885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6194:16:19",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1558,
														"src": "6179:31:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1484_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1484_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 2892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6179:62:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2893,
												"nodeType": "ExpressionStatement",
												"src": "6179:62:19"
											}
										]
									},
									"id": 2895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferFrom",
									"nameLocation": "6069:13:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2875,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "6100:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "6092:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6092:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2877,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "6124:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "6116:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6116:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2879,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6147:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "6139:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6139:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6082:78:19"
									},
									"returnParameters": {
										"id": 2881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6169:0:19"
									},
									"scope": 2914,
									"src": "6060:188:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2903,
										"nodeType": "Block",
										"src": "6290:25:19",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2900,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "6300:6:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6300:8:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2902,
												"nodeType": "ExpressionStatement",
												"src": "6300:8:19"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 2904,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2898,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2897,
												"name": "onlyOwner",
												"nameLocations": [
													"6280:9:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "6280:9:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "6280:9:19"
										}
									],
									"name": "pause",
									"nameLocation": "6263:5:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6268:2:19"
									},
									"returnParameters": {
										"id": 2899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6290:0:19"
									},
									"scope": 2914,
									"src": "6254:61:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2912,
										"nodeType": "Block",
										"src": "6359:27:19",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2909,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "6369:8:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6369:10:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2911,
												"nodeType": "ExpressionStatement",
												"src": "6369:10:19"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 2913,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2907,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2906,
												"name": "onlyOwner",
												"nameLocations": [
													"6349:9:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "6349:9:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "6349:9:19"
										}
									],
									"name": "unpause",
									"nameLocation": "6330:7:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6337:2:19"
									},
									"returnParameters": {
										"id": 2908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6359:0:19"
									},
									"scope": 2914,
									"src": "6321:65:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2915,
							"src": "636:5753:19",
							"usedErrors": [
								30,
								35,
								211,
								214,
								475,
								480,
								715,
								718,
								883,
								1122,
								1135,
								1498,
								1905,
								2167
							],
							"usedEvents": [
								41,
								219,
								707,
								712,
								1075,
								2370,
								2374,
								2378,
								2382
							]
						}
					],
					"src": "32:6358:19"
				},
				"id": 19
			}
		}
	}
}